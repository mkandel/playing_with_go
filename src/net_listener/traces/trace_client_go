dtrace: 671 dynamic variable drops with non-empty dirty list
SYSCALL(args) 		 = return
thread_selfid(0x0, 0x0, 0x0)		 = 1874159 0
csops(0x0, 0x0, 0x7FFF5FBFF258)		 = 0 0
issetugid(0x0, 0x0, 0x7FFF5FBFF258)		 = 0 0
shared_region_check_np(0x7FFF5FBFD198, 0x0, 0x7FFF5FBFF258)		 = 0 0
stat64("/usr/lib/dtrace/libdtrace_dyld.dylib\0", 0x7FFF5FBFE328, 0x7FFF5FBFF258)		 = 0 0
open("/usr/lib/dtrace/libdtrace_dyld.dylib\0", 0x0, 0x0)		 = 3 0
pread(0x3, "\312\376\272\276\0", 0x1000, 0x0)		 = 4096 0
pread(0x3, "\317\372\355\376\a\0", 0x1000, 0x1000)		 = 4096 0
fcntl(0x3, 0x3D, 0x7FFF5FBFC690)		 = 0 0
mmap(0x71C000, 0x2000, 0x5, 0x12, 0x3, 0x1000)		 = 0x71C000 0
mmap(0x71E000, 0x1000, 0x3, 0x12, 0x3, 0x3000)		 = 0x71E000 0
mmap(0x71F000, 0x1FC0, 0x1, 0x12, 0x3, 0x4000)		 = 0x71F000 0
close(0x3)		 = 0 0
stat64("/usr/lib/dtrace/libdtrace_dyld.dylib\0", 0x7FFF5FBFECA8, 0x1)		 = 0 0
stat64("/usr/lib/libSystem.B.dylib\0", 0x7FFF5FBFE128, 0x1)		 = 0 0
stat64("/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation\0", 0x7FFF5FBFE128, 0x1)		 = 0 0
stat64("/System/Library/Frameworks/Security.framework/Versions/A/Security\0", 0x7FFF5FBFE128, 0x1)		 = 0 0
stat64("/usr/lib/system/libcache.dylib\0", 0x7FFF5FBFDD18, 0x1)		 = 0 0
stat64("/usr/lib/system/libcommonCrypto.dylib\0", 0x7FFF5FBFDD18, 0x1)		 = 0 0
stat64("/usr/lib/system/libcompiler_rt.dylib\0", 0x7FFF5FBFDD18, 0x1)		 = 0 0
stat64("/usr/lib/system/libcopyfile.dylib\0", 0x7FFF5FBFDD18, 0x1)		 = 0 0
stat64("/usr/lib/system/libcorecrypto.dylib\0", 0x7FFF5FBFDD18, 0x1)		 = 0 0
stat64("/usr/lib/system/libdispatch.dylib\0", 0x7FFF5FBFDD18, 0x1)		 = 0 0
stat64("/usr/lib/system/libdyld.dylib\0", 0x7FFF5FBFDD18, 0x1)		 = 0 0
stat64("/usr/lib/system/libkeymgr.dylib\0", 0x7FFF5FBFDD18, 0x1)		 = 0 0
stat64("/usr/lib/system/liblaunch.dylib\0", 0x7FFF5FBFDD18, 0x1)		 = 0 0
stat64("/usr/lib/system/libmacho.dylib\0", 0x7FFF5FBFDD18, 0x1)		 = 0 0
stat64("/usr/lib/system/libquarantine.dylib\0", 0x7FFF5FBFDD18, 0x1)		 = 0 0
stat64("/usr/lib/system/libremovefile.dylib\0", 0x7FFF5FBFDD18, 0x1)		 = 0 0
stat64("/usr/lib/system/libsystem_asl.dylib\0", 0x7FFF5FBFDD18, 0x1)		 = 0 0
stat64("/usr/lib/system/libsystem_blocks.dylib\0", 0x7FFF5FBFDD18, 0x1)		 = 0 0
stat64("/usr/lib/system/libsystem_c.dylib\0", 0x7FFF5FBFDD18, 0x1)		 = 0 0
stat64("/usr/lib/system/libsystem_configuration.dylib\0", 0x7FFF5FBFDD18, 0x1)		 = 0 0
stat64("/usr/lib/system/libsystem_coreservices.dylib\0", 0x7FFF5FBFDD18, 0x1)		 = 0 0
stat64("/usr/lib/system/libsystem_coretls.dylib\0", 0x7FFF5FBFDD18, 0x1)		 = 0 0
stat64("/usr/lib/system/libsystem_dnssd.dylib\0", 0x7FFF5FBFDD18, 0x1)		 = 0 0
stat64("/usr/lib/system/libsystem_info.dylib\0", 0x7FFF5FBFDD18, 0x1)		 = 0 0
stat64("/usr/lib/system/libsystem_kernel.dylib\0", 0x7FFF5FBFDD18, 0x1)		 = 0 0
stat64("/usr/lib/system/libsystem_m.dylib\0", 0x7FFF5FBFDD18, 0x1)		 = 0 0
stat64("/usr/lib/system/libsystem_malloc.dylib\0", 0x7FFF5FBFDD18, 0x1)		 = 0 0
stat64("/usr/lib/system/libsystem_network.dylib\0", 0x7FFF5FBFDD18, 0x1)		 = 0 0
stat64("/usr/lib/system/libsystem_networkextension.dylib\0", 0x7FFF5FBFDD18, 0x1)		 = 0 0
stat64("/usr/lib/system/libsystem_notify.dylib\0", 0x7FFF5FBFDD18, 0x1)		 = 0 0
stat64("/usr/lib/system/libsystem_platform.dylib\0", 0x7FFF5FBFDD18, 0x1)		 = 0 0
stat64("/usr/lib/system/libsystem_pthread.dylib\0", 0x7FFF5FBFDD18, 0x1)		 = 0 0
stat64("/usr/lib/system/libsystem_sandbox.dylib\0", 0x7FFF5FBFDD18, 0x1)		 = 0 0
stat64("/usr/lib/system/libsystem_secinit.dylib\0", 0x7FFF5FBFDD18, 0x1)		 = 0 0
stat64("/usr/lib/system/libsystem_stats.dylib\0", 0x7FFF5FBFDD18, 0x1)		 = 0 0
stat64("/usr/lib/system/libsystem_trace.dylib\0", 0x7FFF5FBFDD18, 0x1)		 = 0 0
stat64("/usr/lib/system/libunc.dylib\0", 0x7FFF5FBFDD18, 0x1)		 = 0 0
stat64("/usr/lib/system/libunwind.dylib\0", 0x7FFF5FBFDD18, 0x1)		 = 0 0
stat64("/usr/lib/system/libxpc.dylib\0", 0x7FFF5FBFDD18, 0x1)		 = 0 0
stat64("/usr/lib/libobjc.A.dylib\0", 0x7FFF5FBFCFF8, 0x1)		 = 0 0
stat64("/usr/lib/libauto.dylib\0", 0x7FFF5FBFCFF8, 0x1)		 = 0 0
stat64("/usr/lib/libc++abi.dylib\0", 0x7FFF5FBFCED8, 0x1)		 = 0 0
stat64("/usr/lib/libc++.1.dylib\0", 0x7FFF5FBFCED8, 0x1)		 = 0 0
stat64("/usr/lib/libDiagnosticMessagesClient.dylib\0", 0x7FFF5FBFCDC8, 0x1)		 = 0 0
stat64("/usr/lib/libicucore.A.dylib\0", 0x7FFF5FBFDFD8, 0x1)		 = 0 0
stat64("/usr/lib/libz.1.dylib\0", 0x7FFF5FBFDFD8, 0x1)		 = 0 0
stat64("/usr/lib/libbsm.0.dylib\0", 0x7FFF5FBFDF48, 0x1)		 = 0 0
stat64("/usr/lib/libxar.1.dylib\0", 0x7FFF5FBFDF48, 0x1)		 = 0 0
stat64("/usr/lib/libsqlite3.dylib\0", 0x7FFF5FBFDF48, 0x1)		 = 0 0
stat64("/usr/lib/libpam.2.dylib\0", 0x7FFF5FBFDF48, 0x1)		 = 0 0
stat64("/System/Library/Frameworks/IOKit.framework/Versions/A/IOKit\0", 0x7FFF5FBFDF48, 0x1)		 = 0 0
stat64("/usr/lib/libOpenScriptingUtil.dylib\0", 0x7FFF5FBFDF48, 0x1)		 = 0 0
stat64("/usr/lib/libbz2.1.0.dylib\0", 0x7FFF5FBFDE28, 0x1)		 = 0 0
stat64("/usr/lib/libxml2.2.dylib\0", 0x7FFF5FBFDE28, 0x1)		 = 0 0
stat64("/usr/lib/system/libkxld.dylib\0", 0x7FFF5FBFDE08, 0x1)		 = 0 0
getpid(0x7FFF8D3187B0, 0x7FFF5FBFDE08, 0x1)		 = 812 0
open("/dev/dtracehelper\0", 0x2, 0x7FFF5FBFF150)		 = 3 0
ioctl(0x3, 0x80086804, 0x7FFF5FBFF0D8)		 = 0 0
close(0x3)		 = 0 0
sysctl(0x7FFF5FBFE598, 0x2, 0x7FFF5FBFE5A8)		 = 0 0
thread_selfid(0x7FFF5FBFE598, 0x2, 0x7FFF5FBFE5A8)		 = 1874159 0
bsdthread_register(0x7FFF9A6A2410, 0x7FFF9A6A2400, 0x2000)		 = 1073741855 0
mprotect(0x722000, 0x88, 0x1)		 = 0 0
mprotect(0x724000, 0x1000, 0x0)		 = 0 0
mprotect(0x73A000, 0x1000, 0x0)		 = 0 0
mprotect(0x73B000, 0x1000, 0x0)		 = 0 0
mprotect(0x751000, 0x1000, 0x0)		 = 0 0
mprotect(0x752000, 0x1000, 0x1)		 = 0 0
mprotect(0x722000, 0x88, 0x3)		 = 0 0
mprotect(0x722000, 0x88, 0x1)		 = 0 0
issetugid(0x722000, 0x88, 0x1)		 = 0 0
getpid(0x722000, 0x88, 0x1)		 = 812 0
stat64("/AppleInternal/XBS/.isChrooted\0", 0x7FFF5FBFE4F8, 0x1)		 = -1 Err#2
stat64("/BuildSupport/makeProject\0", 0x7FFF5FBFE4F8, 0x1)		 = -1 Err#2
stat64("/AppleInternal\0", 0x7FFF5FBFE468, 0x1)		 = -1 Err#2
csops(0x32C, 0x7, 0x7FFF5FBFDF90)		 = -1 Err#22
csops(0x32C, 0x7, 0x7FFF5FBFD870)		 = -1 Err#22
getuid(0x32C, 0x7, 0x7FFF5FBFD870)		 = 0 0
geteuid(0x32C, 0x7, 0x7FFF5FBFD870)		 = 0 0
getuid(0x32C, 0x7, 0x7FFF5FBFD870)		 = 0 0
sysctl(0x7FFF5FBFDB40, 0x4, 0x7FFF5FBFDB58)		 = 0 0
issetugid(0x7FFF5FBFDB40, 0x4, 0x7FFF5FBFDB58)		 = 0 0
getuid(0x7FFF5FBFDB40, 0x4, 0x7FFF5FBFDB58)		 = 0 0
sysctl(0x7FFF5FBFFB90, 0x2, 0x7FFF5FBFFB8C)		 = 0 0
mmap(0xC000000000, 0x2208002000, 0x0, 0x1002, 0xFFFFFFFF, 0x0)		 = 0xC000000000 0
mmap(0x0, 0x40000, 0x3, 0x1002, 0xFFFFFFFF, 0x0)		 = 0x753000 0
mmap(0xC208000000, 0x100000, 0x3, 0x1012, 0xFFFFFFFF, 0x0)		 = 0xC208000000 0
mmap(0xC207FF0000, 0x10000, 0x3, 0x1012, 0xFFFFFFFF, 0x0)		 = 0xC207FF0000 0
mmap(0xC000000000, 0x1000, 0x3, 0x1012, 0xFFFFFFFF, 0x0)		 = 0xC000000000 0
mmap(0x0, 0x10000, 0x3, 0x1002, 0xFFFFFFFF, 0x0)		 = 0x793000 0
mmap(0x0, 0x15F8F8, 0x3, 0x1002, 0xFFFFFFFF, 0x0)		 = 0x900000 0
sigaltstack(0x7FFF5FBFFB38, 0x0, 0x3)		 = 0 0
__pthread_sigmask(0x3, 0x69B6EC, 0x0)		 = 0 0
sigaction(0x1, 0x0, 0x7FFF5FBFFB28)		 = 0 0
sigaction(0x1, 0x7FFF5FBFFB28, 0x0)		 = 0 0
sigaction(0x2, 0x0, 0x7FFF5FBFFB28)		 = 0 0
sigaction(0x2, 0x7FFF5FBFFB28, 0x0)		 = 0 0
sigaction(0x3, 0x7FFF5FBFFB28, 0x0)		 = 0 0
sigaction(0x4, 0x7FFF5FBFFB28, 0x0)		 = 0 0
sigaction(0x5, 0x7FFF5FBFFB28, 0x0)		 = 0 0
sigaction(0x6, 0x7FFF5FBFFB28, 0x0)		 = 0 0
sigaction(0x7, 0x7FFF5FBFFB28, 0x0)		 = 0 0
sigaction(0x8, 0x7FFF5FBFFB28, 0x0)		 = 0 0
sigaction(0xA, 0x7FFF5FBFFB28, 0x0)		 = 0 0
sigaction(0xB, 0x7FFF5FBFFB28, 0x0)		 = 0 0
sigaction(0xC, 0x7FFF5FBFFB28, 0x0)		 = 0 0
sigaction(0xD, 0x7FFF5FBFFB28, 0x0)		 = 0 0
sigaction(0xE, 0x7FFF5FBFFB28, 0x0)		 = 0 0
sigaction(0xF, 0x7FFF5FBFFB28, 0x0)		 = 0 0
sigaction(0x10, 0x7FFF5FBFFB28, 0x0)		 = 0 0
sigaction(0x14, 0x7FFF5FBFFB28, 0x0)		 = 0 0
sigaction(0x17, 0x7FFF5FBFFB28, 0x0)		 = 0 0
sigaction(0x18, 0x7FFF5FBFFB28, 0x0)		 = 0 0
sigaction(0x19, 0x7FFF5FBFFB28, 0x0)		 = 0 0
sigaction(0x1A, 0x7FFF5FBFFB28, 0x0)		 = 0 0
sigaction(0x1B, 0x7FFF5FBFFB28, 0x0)		 = 0 0
sigaction(0x1C, 0x7FFF5FBFFB28, 0x0)		 = 0 0
sigaction(0x1D, 0x7FFF5FBFFB28, 0x0)		 = 0 0
sigaction(0x1E, 0x7FFF5FBFFB28, 0x0)		 = 0 0
sigaction(0x1F, 0x7FFF5FBFFB28, 0x0)		 = 0 0
__pthread_sigmask(0x3, 0x7FFF5FBFFA54, 0x7FFF5FBFFA50)		 = 0 0
bsdthread_create(0x325750, 0xB00000, 0x80000)		 = -1341648896 0
__pthread_sigmask(0x3, 0x7FFF5FBFFA50, 0x0)		 = 0 0
thread_selfid(0x0, 0x0, 0x0)		 = 1874174 0
sigaltstack(0xB0080E40, 0x0, 0x0)		 = 0 0
__pthread_sigmask(0x3, 0x69B6EC, 0x0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/dev/urandom\0", 0x0, 0x0)		 = 3 0
read(0x3, "\024{\320In\030\260+\317\274\207u\3207\227{\366\001\333V2zN'Q\371@@\307\226m\334\0", 0x20)		 = 32 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
__pthread_sigmask(0x3, 0x7FFF5FBFF8F4, 0x7FFF5FBFF8F0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
bsdthread_create(0x325750, 0xB00000, 0x80000)		 = -1341112320 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
__pthread_sigmask(0x3, 0x7FFF5FBFF8F0, 0x0)		 = 0 0
thread_selfid(0x0, 0x0, 0x0)		 = 1874175 0
sigaltstack(0xB0103E40, 0x0, 0x0)		 = 0 0
__pthread_sigmask(0x3, 0x69B6EC, 0x0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
sysctl(0xC20801D4D0, 0x2, 0xC20802C0C0)		 = 0 0
sysctl(0xC20802C0C0, 0x2, 0x0)		 = 0 0
sysctl(0xC20802C0C0, 0x2, 0xC20802A1C0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
sysctl(0xC208064BD0, 0x2, 0xC20802C280)		 = 0 0
sysctl(0xC20802C280, 0x3, 0xC208064C6C)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
socket(0x2, 0x1, 0x6)		 = 3 0
close(0x3)		 = 0 0
socket(0x1E, 0x1, 0x6)		 = 3 0
setsockopt(0x3, 0x29, 0x1B)		 = 0 0
bind(0x3, 0xC20802C2DC, 0x1C)		 = 0 0
socket(0x1E, 0x1, 0x6)		 = 4 0
setsockopt(0x4, 0x29, 0x1B)		 = 0 0
bind(0x4, 0xC20802C31C, 0x1C)		 = 0 0
close(0x4)		 = 0 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
__pthread_sigmask(0x3, 0xB0103D04, 0xB0103D00)		 = 0 0
bsdthread_create(0x325750, 0xC00000, 0x80000)		 = -1340575744 0
__pthread_sigmask(0x3, 0xB0103D00, 0x0)		 = 0 0
thread_selfid(0x0, 0x0, 0x0)		 = 1874176 0
sigaltstack(0xB0186E40, 0x0, 0x0)		 = 0 0
__pthread_sigmask(0x3, 0x69B6EC, 0x0)		 = 0 0
stat64(".\0", 0xC208070000, 0x1C)		 = 0 0
stat64("/Users/mkandel/src/go/src/net_listener\0", 0xC208070120, 0x1C)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
stat64("/usr/local/bin/gccgo\0", 0xC2080701B0, 0x1C)		 = -1 Err#2
stat64("/usr/bin/gccgo\0", 0xC208070240, 0x1C)		 = -1 Err#2
stat64("/bin/gccgo\0", 0xC2080702D0, 0x1C)		 = -1 Err#2
stat64("/usr/sbin/gccgo\0", 0xC208070360, 0x1C)		 = -1 Err#2
stat64("/sbin/gccgo\0", 0xC2080703F0, 0x1C)		 = -1 Err#2
stat64("/opt/X11/bin/gccgo\0", 0xC208070480, 0x1C)		 = -1 Err#2
stat64("/usr/local/bin/gccgo\0", 0xC208070510, 0x1C)		 = -1 Err#2
stat64("/usr/local/sbin/gccgo\0", 0xC2080705A0, 0x1C)		 = -1 Err#2
stat64("/usr/local/apache-ant/bin/gccgo\0", 0xC208070630, 0x1C)		 = -1 Err#2
stat64("/usr/bin//gccgo\0", 0xC2080706C0, 0x1C)		 = -1 Err#2
stat64("/usr/local/bin/gccgo\0", 0xC208070750, 0x1C)		 = -1 Err#2
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
stat64("/usr/local/sbin/gccgo\0", 0xC208070000, 0x1C)		 = -1 Err#2
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
stat64("/usr/local/apache-ant/bin/gccgo\0", 0xC208070120, 0x1C)		 = -1 Err#2
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec\0", 0xC208070630, 0x1C)		 = 0 0
getpid(0xC2080C4AE0, 0xC208070630, 0x1C)		 = 812 0
mkdir("/tmp/go-build775409149\0", 0x1C0, 0x1C)		 = 0 0
stat64("client.go\0", 0xC2080706C0, 0x1C)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr\0", 0xC208070000, 0x1C)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local\0", 0xC208070120, 0x1C)		 = 0 0
lstat64("/usr/local/Cellar\0", 0xC2080701B0, 0x1C)		 = 0 0
lstat64("/usr/local/Cellar/go\0", 0xC208070240, 0x1C)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2\0", 0xC2080702D0, 0x1C)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec\0", 0xC208070360, 0x1C)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src\0", 0xC2080703F0, 0x1C)		 = 0 0
lstat64("/Users\0", 0xC208070480, 0x1C)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/Users/mkandel\0", 0xC208070510, 0x1C)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/Users/mkandel/src\0", 0xC2080705A0, 0x1C)		 = 0 0
lstat64("/Users/mkandel/src/go\0", 0xC208070630, 0x1C)		 = 0 0
lstat64("/Users/mkandel/src/go/src\0", 0xC208070750, 0x1C)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/Users/mkandel/src/go/src/net_listener\0", 0xC2080707E0, 0x1C)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/Users/mkandel/src/go/src/net_listener/client.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "package main\n\nimport (\n    \"flag\"\n    \"fmt\"\n    \"io/ioutil\"\n    \"log\"\n    \"net\"\n)\n\nconst port string = \":7777\"\n\nvar content string\n\nfunc main() {\n    defer log.Print(\"Starting\\n\")\n    var file = flag.String(\"f\", \"none\", \"file with contents to send\")\n    va", 0x1000)		 = 850 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/src/flag\0", 0xC208070870, 0x1000)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/flag\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
getdirentries64(0x3, 0xC2080D5000, 0x1000)		 = 200 0
getdirentries64(0x3, 0xC2080D5000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/flag/example_test.go\0", 0xC208070900, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/flag/export_test.go\0", 0xC208070990, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/flag/flag.go\0", 0xC208070A20, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/flag/flag_test.go\0", 0xC208070AB0, 0x1000)		 = 0 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/flag/example_test.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// These examples demonstrate more intricate uses of the flag package.\npackage flag_test\n\nimport", 0x1000)		 = 2658 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/flag/export_test.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2010 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage flag\n\nimport \"os\"\n\n// Additional routines compiled into the package only during testing", 0x1000)		 = 544 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/flag/flag.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n/*\n\tPackage flag implements command-line flag parsing.\n\n\tUsage:\n\n\tDefine flags using flag.String", 0x1000)		 = 4096 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/flag/flag_test.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage flag_test\n\nimport (\n\t\"bytes\"\n\t. \"flag\"\n\t\"fmt\"\n\t\"os\"\n\t\"sort\"\n\t\"strings\"\n\t\"testing\"\n\t\"time", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/src/errors\0", 0xC208070BD0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/errors\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
getdirentries64(0x3, 0xC20808C000, 0x1000)		 = 168 0
getdirentries64(0x3, 0xC20808C000, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/errors/errors.go\0", 0xC208070C60, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/errors/errors_test.go\0", 0xC208070CF0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/errors/example_test.go\0", 0xC208070D80, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/errors/errors.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Package errors implements functions to manipulate errors.\npackage errors\n\n// New returns an ", 0x1000)		 = 499 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/errors/errors_test.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage errors_test\n\nimport (\n\t\"errors\"\n\t\"fmt\"\n\t\"testing\"\n)\n\nfunc TestNewEqual(t *testing.T) {\n", 0x1000)		 = 1271 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/errors/example_test.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2012 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage errors_test\n\nimport (\n\t\"fmt\"\n\t\"time\"\n)\n\n// MyError is an error implementation that incl", 0x1000)		 = 692 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime\0", 0xC208070E10, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
getdirentries64(0x3, 0xC208092000, 0x1000)		 = 4072 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
getdirentries64(0x3, 0xC208092000, 0x1000)		 = 4096 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
getdirentries64(0x3, 0xC208092000, 0x1000)		 = 4096 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
getdirentries64(0x3, 0xC208092000, 0x1000)		 = 2592 0
getdirentries64(0x3, 0xC208092000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/alg.go\0", 0xC208070EA0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/append_test.go\0", 0xC208070F30, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/arch_386.go\0", 0xC208070FC0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/arch_386.h\0", 0xC208071050, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/arch_amd64.go\0", 0xC2080710E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/arch_amd64.h\0", 0xC208071170, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/arch_amd64p32.go\0", 0xC208071200, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/arch_amd64p32.h\0", 0xC208071290, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/arch_arm.go\0", 0xC208071320, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/arch_arm.h\0", 0xC2080713B0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/asm.s\0", 0xC208071440, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/asm_386.s\0", 0xC2080714D0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/asm_amd64.s\0", 0xC208071560, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/asm_amd64p32.s\0", 0xC2080715F0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/asm_arm.s\0", 0xC208071680, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/atomic.go\0", 0xC208071710, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/atomic_386.c\0", 0xC2080717A0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/atomic_amd64x.c\0", 0xC208071830, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/atomic_arm.go\0", 0xC2080718C0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo\0", 0xC208071950, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgocall.go\0", 0xC2080719E0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgocall.h\0", 0xC208071A70, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgocallback.go\0", 0xC208071B00, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/chan.go\0", 0xC208071B90, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/chan.h\0", 0xC208071C20, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/chan_test.go\0", 0xC208071CB0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/closure_test.go\0", 0xC208071D40, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/compiler.go\0", 0xC208071DD0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/complex.go\0", 0xC208071E60, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/complex_test.go\0", 0xC208071EF0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cpuprof.go\0", 0xC208062000, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/crash_cgo_test.go\0", 0xC208062090, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/crash_test.go\0", 0xC208062120, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/debug\0", 0xC2080621B0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/debug.go\0", 0xC208062240, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs.c\0", 0xC2080622D0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs1_linux.go\0", 0xC208062360, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs2_linux.go\0", 0xC2080623F0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs_android_arm.h\0", 0xC208062480, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs_arm_linux.go\0", 0xC208062510, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs_darwin.go\0", 0xC2080625A0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs_darwin_386.h\0", 0xC208062630, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs_darwin_amd64.h\0", 0xC2080626C0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs_dragonfly.go\0", 0xC208062750, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs_dragonfly_386.h\0", 0xC2080627E0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs_dragonfly_amd64.h\0", 0xC208062870, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs_freebsd.go\0", 0xC208062900, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs_freebsd_386.h\0", 0xC208062990, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs_freebsd_amd64.h\0", 0xC208062A20, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs_freebsd_arm.h\0", 0xC208062AB0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs_linux.go\0", 0xC208062B40, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs_linux_386.h\0", 0xC208062BD0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs_linux_amd64.h\0", 0xC208062C60, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs_linux_arm.h\0", 0xC208062CF0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs_nacl_386.h\0", 0xC208062D80, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs_nacl_amd64p32.h\0", 0xC208062E10, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs_nacl_arm.h\0", 0xC208062EA0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs_netbsd.go\0", 0xC208062F30, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs_netbsd_386.go\0", 0xC208062FC0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs_netbsd_386.h\0", 0xC208063050, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs_netbsd_amd64.go\0", 0xC2080630E0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs_netbsd_amd64.h\0", 0xC208063170, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs_netbsd_arm.go\0", 0xC208063200, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs_netbsd_arm.h\0", 0xC208063290, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs_openbsd.go\0", 0xC208063320, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs_openbsd_386.h\0", 0xC2080633B0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs_openbsd_amd64.h\0", 0xC208063440, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs_plan9_386.h\0", 0xC2080634D0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs_plan9_amd64.h\0", 0xC208063560, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs_solaris.go\0", 0xC2080635F0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs_solaris_amd64.go\0", 0xC208063680, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs_solaris_amd64.h\0", 0xC208063710, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs_windows.go\0", 0xC2080637A0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs_windows_386.h\0", 0xC208063830, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs_windows_amd64.h\0", 0xC2080638C0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/env_plan9.go\0", 0xC208063950, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/env_posix.go\0", 0xC2080639E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/error.go\0", 0xC208063A70, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/export_futex_test.go\0", 0xC208063B00, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/export_test.go\0", 0xC208063B90, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/extern.go\0", 0xC208063C20, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/float.c\0", 0xC208063CB0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/funcdata.h\0", 0xC208063D40, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/futex_test.go\0", 0xC208063DD0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/gc_test.go\0", 0xC208063E60, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/gcinfo_test.go\0", 0xC208063EF0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/hash_test.go\0", 0xC208066000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/hashmap.go\0", 0xC208066090, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/hashmap_fast.go\0", 0xC208066120, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/heapdump.c\0", 0xC2080661B0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/iface.go\0", 0xC208066240, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/iface_test.go\0", 0xC2080662D0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/lfstack.c\0", 0xC208066360, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/lfstack_test.go\0", 0xC2080663F0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/lock_futex.go\0", 0xC208066480, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/lock_sema.go\0", 0xC208066510, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/Makefile\0", 0xC2080665A0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/malloc.c\0", 0xC208066630, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/malloc.go\0", 0xC2080666C0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/malloc.h\0", 0xC208066750, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/malloc_test.go\0", 0xC2080667E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/map_test.go\0", 0xC208066870, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/mapspeed_test.go\0", 0xC208066900, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/mcache.c\0", 0xC208066990, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/mcentral.c\0", 0xC208066A20, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/mem.go\0", 0xC208066AB0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/mem_darwin.c\0", 0xC208066B40, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/mem_dragonfly.c\0", 0xC208066BD0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/mem_freebsd.c\0", 0xC208066C60, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/mem_linux.c\0", 0xC208066CF0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/mem_nacl.c\0", 0xC208066D80, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/mem_netbsd.c\0", 0xC208066E10, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/mem_openbsd.c\0", 0xC208066EA0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/mem_plan9.c\0", 0xC208066F30, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/mem_solaris.c\0", 0xC208066FC0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/mem_windows.c\0", 0xC208067050, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/memclr_386.s\0", 0xC2080670E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/memclr_amd64.s\0", 0xC208067170, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/memclr_arm.s\0", 0xC208067200, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/memclr_plan9_386.s\0", 0xC208067290, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/memclr_plan9_amd64.s\0", 0xC208067320, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/memmove_386.s\0", 0xC2080673B0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/memmove_amd64.s\0", 0xC208067440, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/memmove_arm.s\0", 0xC2080674D0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/memmove_linux_amd64_test.go\0", 0xC208067560, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/memmove_nacl_amd64p32.s\0", 0xC2080675F0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/memmove_plan9_386.s\0", 0xC208067680, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/memmove_plan9_amd64.s\0", 0xC208067710, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/memmove_test.go\0", 0xC2080677A0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/mfinal_test.go\0", 0xC208067830, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/mfixalloc.c\0", 0xC2080678C0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/mgc0.c\0", 0xC208067950, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/mgc0.go\0", 0xC2080679E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/mgc0.h\0", 0xC208067A70, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/mheap.c\0", 0xC208067B00, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/mknacl.sh\0", 0xC208067B90, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/mprof.go\0", 0xC208067C20, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/msize.c\0", 0xC208067CB0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/netpoll.go\0", 0xC208067D40, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/netpoll_epoll.go\0", 0xC208067DD0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/netpoll_kqueue.go\0", 0xC208067E60, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/netpoll_nacl.go\0", 0xC208067EF0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/netpoll_solaris.c\0", 0xC2080DC000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/netpoll_stub.c\0", 0xC2080DC090, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/netpoll_windows.c\0", 0xC2080DC120, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/noasm_arm.go\0", 0xC2080DC1B0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/norace_test.go\0", 0xC2080DC240, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_android.c\0", 0xC2080DC2D0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_android.h\0", 0xC2080DC360, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_darwin.c\0", 0xC2080DC3F0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_darwin.go\0", 0xC2080DC480, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_darwin.h\0", 0xC2080DC510, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_dragonfly.c\0", 0xC2080DC5A0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_dragonfly.go\0", 0xC2080DC630, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_dragonfly.h\0", 0xC2080DC6C0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_freebsd.c\0", 0xC2080DC750, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_freebsd.go\0", 0xC2080DC7E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_freebsd.h\0", 0xC2080DC870, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_freebsd_arm.c\0", 0xC2080DC900, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_linux.c\0", 0xC2080DC990, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_linux.go\0", 0xC2080DCA20, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_linux.h\0", 0xC2080DCAB0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_linux_386.c\0", 0xC2080DCB40, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_linux_arm.c\0", 0xC2080DCBD0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_nacl.c\0", 0xC2080DCC60, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_nacl.go\0", 0xC2080DCCF0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_nacl.h\0", 0xC2080DCD80, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_nacl_arm.c\0", 0xC2080DCE10, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_netbsd.c\0", 0xC2080DCEA0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_netbsd.go\0", 0xC2080DCF30, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_netbsd.h\0", 0xC2080DCFC0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_netbsd_386.c\0", 0xC2080DD050, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_netbsd_amd64.c\0", 0xC2080DD0E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_netbsd_arm.c\0", 0xC2080DD170, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_openbsd.c\0", 0xC2080DD200, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_openbsd.go\0", 0xC2080DD290, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_openbsd.h\0", 0xC2080DD320, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_plan9.c\0", 0xC2080DD3B0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_plan9.go\0", 0xC2080DD440, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_plan9.h\0", 0xC2080DD4D0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_plan9_386.c\0", 0xC2080DD560, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_plan9_amd64.c\0", 0xC2080DD5F0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_solaris.c\0", 0xC2080DD680, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_solaris.go\0", 0xC2080DD710, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_solaris.h\0", 0xC2080DD7A0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_windows.c\0", 0xC2080DD830, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_windows.go\0", 0xC2080DD8C0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_windows.h\0", 0xC2080DD950, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_windows_386.c\0", 0xC2080DD9E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_windows_386.go\0", 0xC2080DDA70, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_windows_amd64.c\0", 0xC2080DDB00, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_windows_amd64.go\0", 0xC2080DDB90, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/panic.c\0", 0xC2080DDC20, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/panic.go\0", 0xC2080DDCB0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/parfor.c\0", 0xC2080DDD40, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/parfor_test.go\0", 0xC2080DDDD0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/pprof\0", 0xC2080DDE60, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/print1.go\0", 0xC2080DDEF0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/proc.c\0", 0xC208070000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/proc.go\0", 0xC208070120, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/proc_test.go\0", 0xC2080701B0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/race\0", 0xC208070240, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/race.c\0", 0xC2080702D0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/race.go\0", 0xC208070360, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/race.h\0", 0xC2080703F0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/race0.go\0", 0xC208070480, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/race_amd64.s\0", 0xC208070510, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/rdebug.go\0", 0xC2080705A0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/rt0_android_arm.s\0", 0xC208070630, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/rt0_darwin_386.s\0", 0xC2080706C0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/rt0_darwin_amd64.s\0", 0xC208070750, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/rt0_dragonfly_386.s\0", 0xC2080707E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/rt0_dragonfly_amd64.s\0", 0xC208070870, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/rt0_freebsd_386.s\0", 0xC208070900, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/rt0_freebsd_amd64.s\0", 0xC208070990, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/rt0_freebsd_arm.s\0", 0xC208070A20, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/rt0_linux_386.s\0", 0xC208070AB0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/rt0_linux_amd64.s\0", 0xC208070BD0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/rt0_linux_arm.s\0", 0xC208070C60, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/rt0_nacl_386.s\0", 0xC208070CF0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/rt0_nacl_amd64p32.s\0", 0xC208070D80, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/rt0_nacl_arm.s\0", 0xC208070E10, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/rt0_netbsd_386.s\0", 0xC20808C000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/rt0_netbsd_amd64.s\0", 0xC20808C090, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/rt0_netbsd_arm.s\0", 0xC20808C120, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/rt0_openbsd_386.s\0", 0xC20808C1B0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/rt0_openbsd_amd64.s\0", 0xC20808C240, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/rt0_plan9_386.s\0", 0xC20808C2D0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/rt0_plan9_amd64.s\0", 0xC20808C360, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/rt0_solaris_amd64.s\0", 0xC20808C3F0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/rt0_windows_386.s\0", 0xC20808C480, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/rt0_windows_amd64.s\0", 0xC20808C510, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/rune.go\0", 0xC20808C5A0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/runtime-gdb.py\0", 0xC20808C630, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/runtime.c\0", 0xC20808C6C0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/runtime.go\0", 0xC20808C750, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/runtime.h\0", 0xC20808C7E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/runtime_linux_test.go\0", 0xC20808C870, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/runtime_test.go\0", 0xC20808C900, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/runtime_unix_test.go\0", 0xC20808C990, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/select.go\0", 0xC20808CA20, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/sema.go\0", 0xC20808CAB0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signal.c\0", 0xC20808CB40, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signal_386.c\0", 0xC20808CBD0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signal_amd64x.c\0", 0xC20808CC60, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signal_android_386.h\0", 0xC20808CCF0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signal_android_arm.h\0", 0xC20808CD80, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signal_arm.c\0", 0xC20808CE10, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signal_darwin_386.h\0", 0xC20808CEA0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signal_darwin_amd64.h\0", 0xC20808CF30, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signal_dragonfly_386.h\0", 0xC20808CFC0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signal_dragonfly_amd64.h\0", 0xC20808D050, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signal_freebsd_386.h\0", 0xC20808D0E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signal_freebsd_amd64.h\0", 0xC20808D170, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signal_freebsd_arm.h\0", 0xC20808D200, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signal_linux_386.h\0", 0xC20808D290, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signal_linux_amd64.h\0", 0xC20808D320, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signal_linux_arm.h\0", 0xC20808D3B0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signal_nacl_386.h\0", 0xC20808D440, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signal_nacl_amd64p32.h\0", 0xC20808D4D0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signal_nacl_arm.h\0", 0xC20808D560, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signal_netbsd_386.h\0", 0xC20808D5F0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signal_netbsd_amd64.h\0", 0xC20808D680, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signal_netbsd_arm.h\0", 0xC20808D710, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signal_openbsd_386.h\0", 0xC20808D7A0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signal_openbsd_amd64.h\0", 0xC20808D830, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signal_solaris_amd64.h\0", 0xC20808D8C0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signal_unix.c\0", 0xC20808D950, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signal_unix.go\0", 0xC20808D9E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signal_unix.h\0", 0xC20808DA70, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signals_android.h\0", 0xC20808DB00, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signals_darwin.h\0", 0xC20808DB90, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signals_dragonfly.h\0", 0xC20808DC20, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signals_freebsd.h\0", 0xC20808DCB0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signals_linux.h\0", 0xC20808DD40, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signals_nacl.h\0", 0xC20808DDD0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signals_netbsd.h\0", 0xC20808DE60, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signals_openbsd.h\0", 0xC20808DEF0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signals_plan9.h\0", 0xC2080D2000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signals_solaris.h\0", 0xC2080D2090, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signals_windows.h\0", 0xC2080D2120, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/sigpanic_unix.go\0", 0xC2080D21B0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/sigqueue.go\0", 0xC2080D2240, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/slice.go\0", 0xC2080D22D0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/softfloat64.go\0", 0xC2080D2360, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/softfloat64_test.go\0", 0xC2080D23F0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/softfloat_arm.c\0", 0xC2080D2480, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/sqrt.go\0", 0xC2080D2510, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/stack.c\0", 0xC2080D25A0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/stack.go\0", 0xC2080D2630, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/stack.h\0", 0xC2080D26C0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/stack_test.go\0", 0xC2080D2750, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/string.c\0", 0xC2080D27E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/string.go\0", 0xC2080D2870, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/string_test.go\0", 0xC2080D2900, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/stubs.go\0", 0xC2080D2990, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/symtab.go\0", 0xC2080D2A20, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/symtab_test.go\0", 0xC2080D2AB0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/sys_arm.c\0", 0xC2080D2B40, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/sys_darwin_386.s\0", 0xC2080D2BD0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/sys_darwin_amd64.s\0", 0xC2080D2C60, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/sys_dragonfly_386.s\0", 0xC2080D2CF0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/sys_dragonfly_amd64.s\0", 0xC2080D2D80, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/sys_freebsd_386.s\0", 0xC2080D2E10, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/sys_freebsd_amd64.s\0", 0xC2080D2EA0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/sys_freebsd_arm.s\0", 0xC2080D2F30, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/sys_linux_386.s\0", 0xC2080D2FC0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/sys_linux_amd64.s\0", 0xC2080D3050, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/sys_linux_arm.s\0", 0xC2080D30E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/sys_nacl_386.s\0", 0xC2080D3170, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/sys_nacl_amd64p32.s\0", 0xC2080D3200, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/sys_nacl_arm.s\0", 0xC2080D3290, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/sys_netbsd_386.s\0", 0xC2080D3320, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/sys_netbsd_amd64.s\0", 0xC2080D33B0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/sys_netbsd_arm.s\0", 0xC2080D3440, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/sys_openbsd_386.s\0", 0xC2080D34D0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/sys_openbsd_amd64.s\0", 0xC2080D3560, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/sys_plan9_386.s\0", 0xC2080D35F0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/sys_plan9_amd64.s\0", 0xC2080D3680, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/sys_solaris_amd64.s\0", 0xC2080D3710, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/sys_windows_386.s\0", 0xC2080D37A0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/sys_windows_amd64.s\0", 0xC2080D3830, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/sys_x86.c\0", 0xC2080D38C0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/syscall_nacl.h\0", 0xC2080D3950, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/syscall_solaris.c\0", 0xC2080D39E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/syscall_solaris.go\0", 0xC2080D3A70, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/syscall_windows.go\0", 0xC2080D3B00, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/syscall_windows_test.go\0", 0xC2080D3B90, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/thunk.s\0", 0xC2080D3C20, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/thunk_solaris_amd64.s\0", 0xC2080D3CB0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/thunk_windows.s\0", 0xC2080D3D40, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/time.go\0", 0xC2080D3DD0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/tls_arm.s\0", 0xC2080D3E60, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/traceback.go\0", 0xC2080D3EF0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/type.h\0", 0xC2080B2000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/typekind.go\0", 0xC2080B2090, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/typekind.h\0", 0xC2080B2120, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/vdso_linux_amd64.c\0", 0xC2080B21B0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/vlop_386.s\0", 0xC2080B2240, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/vlop_arm.s\0", 0xC2080B22D0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/vlop_arm_test.go\0", 0xC2080B2360, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/vlrt.c\0", 0xC2080B23F0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/vlrt.go\0", 0xC2080B2480, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/zaexperiment.h\0", 0xC2080B2510, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/zasm_darwin_amd64.h\0", 0xC2080B25A0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/zgoarch_amd64.go\0", 0xC2080B2630, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/zgoos_darwin.go\0", 0xC2080B26C0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/zruntime_defs_darwin_amd64.go\0", 0xC2080B2750, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/zsys_darwin_amd64.s\0", 0xC2080B27E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/zversion.go\0", 0xC2080B2870, 0x1000)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/alg.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2014 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime\n\nimport \"unsafe\"\n\nconst (\n\tc0 = uintptr((8-ptrSize)/4*2860486313 + (ptrSize-4)/4", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/append_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\npackage runtime_test\n\nimport \"testing\"\n\nconst N = 20\n\nfunc BenchmarkAppend(b *testing.B) {\n\tb.Sto", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/arch_amd64.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2014 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime\n\ntype uintreg uint64\ntype intptr int64 // TODO(rsc): remove\nestSideEffectOrder(t", 0x1000)		 = 236 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/arch_amd64.h\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nenum {\n\tthechar = '6',\n\tBigEndian = 0,\n\tCacheLineSize = 64,\n#ifdef GOOS_solaris\n\tRuntimeGogoByte", 0x1000)		 = 502 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/asm.s\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2014 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include \"textflag.h\"\n\n// funcdata for functions with no local variables in frame.\n// Define tw", 0x1000)		 = 608 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/asm_amd64.s\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include \"zasm_GOOS_GOARCH.h\"\n#include \"funcdata.h\"\n#include \"textflag.h\"\n\nTEXT runtime\302\267rt0_go(", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/atomic.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2014 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build !arm\n\npackage runtime\n\nimport \"unsafe\"\n\n//go:noescape\nfunc xadd(ptr *uint32, delta in", 0x1000)		 = 1066 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/atomic_amd64x.c\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build amd64 amd64p32\n\n#include \"runtime.h\"\n#include \"textflag.h\"\n\n#pragma textflag NOSPLIT\nu", 0x1000)		 = 515 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgocall.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Cgo call and callback support.\n//\n// To call into the C function f from Go, the cgo-generate", 0x1000)		 = 4096 0
read(0x3, "o f.\n\npackage runtime\n\nimport \"unsafe\"\n\n// Call from Go to C.\n//go:nosplit\nfunc cgocall(fn, arg unsafe.Pointer) {\n\tcgocall_errno(fn, arg)\n}\n\n//go:nosplit\nfunc cgocall_errno(fn, arg unsafe.Pointer) int32 {\n\tif !iscgo && GOOS != \"solaris\" && GOOS != \"windows", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgocall.h\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n/*\n * Cgo interface.\n */\n\nvoid runtime\302\267cgocall(void (*fn)(void*), void*);\nint32 runtime\302\267cgoca", 0x1000)		 = 414 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgocallback.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime\n\nimport \"unsafe\"\n\n// These functions are called from C code via cgo/callbacks.c", 0x1000)		 = 1250 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/chan.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2014 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime\n\n// This file contains the implementation of Go channels.\n\nimport \"unsafe\"\n\ncons", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/chan.h\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#define\tMAXALIGN\t8\n\ntypedef\tstruct\tWaitQ\tWaitQ;\ntypedef\tstruct\tSelect\tSelect;\ntypedef\tstruct\tSca", 0x1000)		 = 1577 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/chan_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime_test\n\nimport (\n\t\"runtime\"\n\t\"sync\"\n\t\"sync/atomic\"\n\t\"testing\"\n\t\"time\"\n)\n\nfunc Test", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/closure_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\npackage runtime_test\n\nimport \"testing\"\n\nvar s int\n\nfunc BenchmarkCallClosure(b *testing.B) {\n\tfor", 0x1000)		 = 936 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/compiler.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime\n\n// Compiler is the name of the compiler toolchain that built the\n// running bi", 0x1000)		 = 441 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/complex.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2010 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime\n\nfunc complex128div(n complex128, d complex128) complex128 {\n\t// Special cases a", 0x1000)		 = 1380 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/complex_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime_test\n\nimport (\n\t\"math/cmplx\"\n\t\"testing\"\n)\n\nvar result complex128\n\nfunc Benchmark", 0x1000)		 = 1077 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cpuprof.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// CPU profiling.\n// Based on algorithms and data structures used in\n// http://code.google.com/", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/crash_cgo_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build cgo\n\npackage runtime_test\n\nimport (\n\t\"os/exec\"\n\t\"runtime\"\n\t\"strings\"\n\t\"testing\"\n)\n\nfun", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/crash_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime_test\n\nimport (\n\t\"io/ioutil\"\n\t\"os\"\n\t\"os/exec\"\n\t\"path/filepath\"\n\t\"runtime\"\n\t\"strin", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/debug.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime\n\nimport \"unsafe\"\n\n// Breakpoint executes a breakpoint trap.\nfunc Breakpoint()\n\n/", 0x1000)		 = 1893 0
mmap(0xC208100000, 0x100000, 0x3, 0x1012, 0xFFFFFFFF, 0x0)		 = 0xC208100000 0
mmap(0xC207FE0000, 0x10000, 0x3, 0x1012, 0xFFFFFFFF, 0x0)		 = 0xC207FE0000 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs.c\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// This file is compiled by cmd/dist to obtain debug information\n// about the given header file", 0x1000)		 = 431 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs_darwin.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build ignore\n\n/*\nInput to cgo.\n\nGOARCH=amd64 go tool cgo -cdefs defs_darwin.go >defs_darwin_", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/defs_darwin_amd64.h\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Created by cgo -cdefs - DO NOT EDIT\n// cgo -cdefs defs_darwin.go\n\n\nenum {\n\tEINTR\t= 0x4,\n\tEFAULT\t= 0xe,\n\n\tPROT_NONE\t= 0x0,\n\tPROT_READ\t= 0x1,\n\tPROT_WRITE\t= 0x2,\n\tPROT_EXEC\t= 0x4,\n\n\tMAP_ANON\t= 0x1000,\n\tMAP_PRIVATE\t= 0x2,\n\tMAP_FIXED\t= 0x10,\n\n\tMADV_DONTNEED\t", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/env_posix.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd linux nacl netbsd openbsd solaris windows\n\npackage runtime\n\ni", 0x1000)		 = 1574 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/error.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2010 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime\n\nimport \"unsafe\"\n\n// The Error interface identifies a run time error.\ntype Error", 0x1000)		 = 2574 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/export_futex_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build dragonfly freebsd linux\n\npackage runtime\n\nvar Futexsleep = futexsleep\nvar Futexwakeup", 0x1000)		 = 271 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/export_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2010 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Export guts for testing.\n\npackage runtime\n\nimport \"unsafe\"\n\nvar Fadd64 = fadd64\nvar Fsub64 =", 0x1000)		 = 3357 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/extern.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n/*\nPackage runtime contains operations that interact with Go's runtime system,\nsuch as functions", 0x1000)		 = 4096 0
read(0x3, "d made available by\nconstants or functions in this package, but they do not influence the execution\nof the run-time system.\n*/\npackage runtime\n\n// Caller reports file and line number information about function invocations on\n// the calling goroutine's stac", 0x1000)		 = 3308 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/float.c\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include \"runtime.h\"\n\n// used as float64 via runtime\302\267 names\nuint64\t\302\267nan\t\t= 0x7FF8000000000001U", 0x1000)		 = 342 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/funcdata.h\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// This file defines the IDs for PCDATA and FUNCDATA instructions\n// in Go binaries. It is incl", 0x1000)		 = 2550 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/futex_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Futex is only available on DragonFly BSD, FreeBSD and Linux.\n// The race detector emits call", 0x1000)		 = 2006 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/gc_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime_test\n\nimport (\n\t\"os\"\n\t\"runtime\"\n\t\"runtime/debug\"\n\t\"testing\"\n\t\"time\"\n\t\"unsafe\"\n)\n", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/gcinfo_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2014 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime_test\n\nimport (\n\t\"bytes\"\n\t\"runtime\"\n\t\"testing\"\n)\n\n// TestGCInfo tests that variou", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/hash_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime_test\n\nimport (\n\t\"fmt\"\n\t\"math\"\n\t\"math/rand\"\n\t. \"runtime\"\n\t\"strings\"\n\t\"testing\"\n)", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/hashmap.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2014 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime\n\n// This file contains the implementation of Go's map type.\n//\n// A map is just ", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/hashmap_fast.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2014 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime\n\nimport (\n\t\"unsafe\"\n)\n\nfunc mapaccess1_fast32(t *maptype, h *hmap, key uint32) u", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/heapdump.c\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2014 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Implementation of runtime/debug.WriteHeapDump.  Writes all\n// objects in the heap plus additi", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/iface.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2014 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime\n\nimport (\n\t\"unsafe\"\n)\n\nconst (\n\thashSize = 1009\n)\n\nvar (\n\tifaceLock mutex // loc", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/iface_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime_test\n\nimport (\n\t\"testing\"\n)\n\ntype I1 interface {\n\tMethod1()\n}\n\ntype I2 interface", 0x1000)		 = 1939 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/lfstack.c\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Lock-free stack.\n// The following code runs only on g0 stack.\n\n#include \"runtime.h\"\n#include ", 0x1000)		 = 2019 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/lfstack_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime_test\n\nimport (\n\t\"math/rand\"\n\t. \"runtime\"\n\t\"testing\"\n\t\"unsafe\"\n)\n\ntype MyNode str", 0x1000)		 = 2781 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/lock_futex.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build dragonfly freebsd linux\n\npackage runtime\n\nimport \"unsafe\"\n\n// This implementation depe", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/lock_sema.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin nacl netbsd openbsd plan9 solaris windows\n\npackage runtime\n\nimport \"unsafe\"\n\n/", 0x1000)		 = 4096 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/malloc.c\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// See malloc.h for overview.\n//\n// TODO(rsc): double-check stats.\n\n#include \"runtime.h\"\n#includ", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/malloc.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2014 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime\n\nimport (\n\t\"unsafe\"\n)\n\nconst (\n\tdebugMalloc = false\n\n\tflagNoScan = _FlagNoScan\n\t", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/malloc.h\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Memory allocator, based on tcmalloc.\n// http://goog-perftools.sourceforge.net/doc/tcmalloc.ht", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/malloc_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime_test\n\nimport (\n\t\"flag\"\n\t. \"runtime\"\n\t\"testing\"\n\t\"time\"\n\t\"unsafe\"\n)\n\nfunc TestMem", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/map_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime_test\n\nimport (\n\t\"fmt\"\n\t\"math\"\n\t\"reflect\"\n\t\"runtime\"\n\t\"sort\"\n\t\"strings\"\n\t\"sync\"\n\t", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/mapspeed_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\npackage runtime_test\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n)\n\nconst size = 10\n\nfunc BenchmarkHas", 0x1000)		 = 4096 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/mcache.c\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Per-P malloc cache for small objects.\n//\n// See malloc.h for an overview.\n\n#include \"runtime.", 0x1000)		 = 2601 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/mcentral.c\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Central free lists.\n//\n// See malloc.h for an overview.\n//\n// The MCentral doesn't actually c", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/mem.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime\n\nimport \"unsafe\"\n\n// Note: the MemStats struct should be kept in sync with\n// st", 0x1000)		 = 3185 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/mem_darwin.c\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2010 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include \"runtime.h\"\n#include \"arch_GOARCH.h\"\n#include \"defs_GOOS_GOARCH.h\"\n#include \"os_GOOS.h", 0x1000)		 = 1589 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/memclr_amd64.s\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2014 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build !plan9\n\n#include \"textflag.h\"\n\n// NOTE: Windows externalthreadhandler expects memclr t", 0x1000)		 = 2228 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/memmove_amd64.s\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Derived from Inferno's libkern/memmove-386.s (adapted for amd64)\n// http://code.google.com/p/inferno-os/source/browse/libkern/memmove-386.s\n//\n//         Copyright \302\251 1994-1999 Lucent Technologies Inc.  All rights reserved.\n//         Revisions Copyrigh", 0x1000)		 = 4096 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/memmove_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime_test\n\nimport (\n\t. \"runtime\"\n\t\"testing\"\n)\n\nfunc TestMemmove(t *testing.T) {\n\tsiz", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/mfinal_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime_test\n\nimport (\n\t\"runtime\"\n\t\"testing\"\n\t\"time\"\n\t\"unsafe\"\n)\n\ntype Tintptr *int // a", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/mfixalloc.c\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Fixed-size object allocator.  Returned memory is not zeroed.\n//\n// See malloc.h for overview.", 0x1000)		 = 1349 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/mgc0.c\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Garbage collector (GC).\n//\n// GC is:\n// - mark&sweep\n// - mostly precise (with the exception ", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/mgc0.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime\n\nimport \"unsafe\"\n\n// Called from C. Returns the Go type *m.\nfunc gc_m_ptr(ret *i", 0x1000)		 = 3064 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/mgc0.h\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Garbage collector (GC)\n\nenum {\n\t// Four bits per word (see #defines below).\n\tgcBits = 4,\n\twor", 0x1000)		 = 2761 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/mheap.c\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Page heap.\n//\n// See malloc.h for overview.\n//\n// When a MSpan is in the heap free list, stat", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/mprof.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Malloc profiling.\n// Patterned after tcmalloc's algorithms; shorter code.\n\npackage runtime\n\ni", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/msize.c\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Malloc small size classes.\n//\n// See malloc.h for overview.\n//\n// The size classes are chosen", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/netpoll.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd linux nacl netbsd openbsd solaris windows\n\npackage runtime\n\ni", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/netpoll_epoll.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build linux\n\npackage runtime\n\nimport \"unsafe\"\n\nfunc epollcreate(size int32) int32\nfunc epoll", 0x1000)		 = 2157 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/netpoll_kqueue.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd netbsd openbsd\n\npackage runtime\n\n// Integrated network poller", 0x1000)		 = 2290 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/netpoll_stub.c\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build plan9\n\n#include \"runtime.h\"\n\n// Polls for ready network connections.\n// Returns list o", 0x1000)		 = 438 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/norace_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// The file contains tests that can not run under race detector for some reason.\n// +build !race", 0x1000)		 = 980 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_darwin.c\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include \"runtime.h\"\n#include \"defs_GOOS_GOARCH.h\"\n#include \"os_GOOS.h\"\n#include \"signal_unix.h\"", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_darwin.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2014 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime\n\nimport \"unsafe\"\n\nfunc bsdthread_create(stk, mm, gg, fn unsafe.Pointer) int32\nf", 0x1000)		 = 998 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/os_darwin.h\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\ntypedef byte* kevent_udata;\n\nint32\truntime\302\267bsdthread_create(void*, M*, G*, void(*)(void));\nint3", 0x1000)		 = 1404 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/panic.c\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include \"runtime.h\"\n#include \"arch_GOARCH.h\"\n#include \"stack.h\"\n#include \"malloc.h\"\n#include \"t", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/panic.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2014 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime\n\nimport \"unsafe\"\n\nvar indexError = error(errorString(\"index out of range\"))\n\nfun", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/parfor.c\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Parallel for algorithm.\n\n#include \"runtime.h\"\n#include \"arch_GOARCH.h\"\n#include \"malloc.h\"\n\ns", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/parfor_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// The race detector does not understand ParFor synchronization.\n// +build !race\n\npackage runtim", 0x1000)		 = 3134 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/print1.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime\n\nimport \"unsafe\"\n\n// The compiler knows that a print of a value of this type\n// ", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/proc.c\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include \"runtime.h\"\n#include \"arch_GOARCH.h\"\n#include \"zaexperiment.h\"\n#include \"malloc.h\"\n#inc", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/proc.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2014 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime\n\nimport \"unsafe\"\n\nfunc newsysmon()\n\nfunc runtime_init()\nfunc main_init()\nfunc ma", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/proc_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime_test\n\nimport (\n\t\"math\"\n\t\"runtime\"\n\t\"sync/atomic\"\n\t\"syscall\"\n\t\"testing\"\n\t\"time\"\n)", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/race.c\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Implementation of the race detector API.\n// +build race\n\n#include \"runtime.h\"\n#include \"arch_", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/race.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build race\n\n// Public race detection API, present iff build with -race.\n\npackage runtime\n\ni", 0x1000)		 = 3119 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/race.h\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Definitions related to data race detection.\n\n#ifdef RACE\nenum { raceenabled = 1 };\n#else\nenum", 0x1000)		 = 1356 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/race0.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2014 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build !race\n\n// Dummy race detection API, used when not built with -race.\n\npackage runtime\n", 0x1000)		 = 2216 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/race_amd64.s\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build race\n\n#include \"zasm_GOOS_GOARCH.h\"\n#include \"funcdata.h\"\n#include \"textflag.h\"\n\n// T", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/rdebug.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2014 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime\n\nfunc setMaxStack(in int) (out int) {\n\tout = int(maxstacksize)\n\tmaxstacksize = ", 0x1000)		 = 777 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/rt0_darwin_amd64.s\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include \"textflag.h\"\n\nTEXT _rt0_amd64_darwin(SB),NOSPLIT,$-8\n\tLEAQ\t8(SP), SI // argv\n\tMOVQ\t0(SP", 0x1000)		 = 364 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/rune.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "/*\n * The authors of this software are Rob Pike and Ken Thompson.\n *              Copyright (c) 2002 by Lucent Technologies.\n *              Portions Copyright 2009 The Go Authors. All rights reserved.\n * Permission to use, copy, modify, and distribute thi", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/runtime.c\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include \"runtime.h\"\n#include \"stack.h\"\n#include \"arch_GOARCH.h\"\n#include \"textflag.h\"\n#include ", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/runtime.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime\n\nvar ticks struct {\n\tlock mutex\n\tval  uint64\n}\n\nvar tls0 [8]uintptr // availabl", 0x1000)		 = 1239 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/runtime.h\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n/*\n * basic types\n */\ntypedef\tsigned char\t\tint8;\ntypedef\tunsigned char\t\tuint8;\ntypedef\tsigned sh", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/runtime_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime_test\n\nimport (\n\t\"io\"\n\t\"io/ioutil\"\n\t\"os\"\n\t\"os/exec\"\n\t. \"runtime\"\n\t\"runtime/debug", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/runtime_unix_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Only works on systems with syscall.Close.\n// We need a fast system call to provoke the race,", 0x1000)		 = 1226 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/select.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime\n\n// This file contains the implementation of Go select statements.\n\nimport \"unsa", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/sema.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Semaphore implementation exposed to Go.\n// Intended use is provide a sleep and wakeup\n// prim", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signal.c\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2014 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include \"runtime.h\"\n\nvoid\nruntime\302\267sigenable_m(void)\n{\n\tuint32 s;\n\t\n\ts = g->m->scalararg[0];\n\t", 0x1000)		 = 432 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signal_amd64x.c\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build amd64 amd64p32\n// +build darwin dragonfly freebsd linux nacl netbsd openbsd solaris\n\n", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signal_darwin_amd64.h\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#define SIG_REGS(ctxt) (((Ucontext*)(ctxt))->uc_mcontext->ss)\n\n#define SIG_RAX(info, ctxt) (SIG", 0x1000)		 = 1356 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signal_unix.c\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd linux netbsd openbsd solaris\n\n#include \"runtime.h\"\n#include ", 0x1000)		 = 2631 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signal_unix.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd linux netbsd openbsd solaris\n\npackage runtime\n\nfunc sigpipe(", 0x1000)		 = 295 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signal_unix.h\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#define SIG_DFL ((void*)0)\n#define SIG_IGN ((void*)1)\n\ntypedef void GoSighandler(int32, Siginfo", 0x1000)		 = 463 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/signals_darwin.h\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include \"textflag.h\"\n\n#define N SigNotify\n#define K SigKill\n#define T SigThrow\n#define P SigPan", 0x1000)		 = 1750 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/sigpanic_unix.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2014 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd linux netbsd openbsd solaris\n\npackage runtime\n\nfunc signame(", 0x1000)		 = 1010 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/sigqueue.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// This file implements runtime support for signal handling.\n//\n// Most synchronization primitiv", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/slice.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime\n\nimport (\n\t\"unsafe\"\n)\n\ntype sliceStruct struct {\n\tarray unsafe.Pointer\n\tlen   in", 0x1000)		 = 3701 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/softfloat64.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2010 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Software IEEE754 64-bit floating point.\n// Only referred to (and thus linked in) by arm port", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/softfloat64_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2010 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime_test\n\nimport (\n\t\"math\"\n\t\"math/rand\"\n\t. \"runtime\"\n\t\"testing\"\n)\n\n// turn uint64 o", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/sqrt.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Copy of math/sqrt.go, here for use by ARM softfloat.\n\npackage runtime\n\nimport \"unsafe\"\n\n// Th", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/stack.c\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include \"runtime.h\"\n#include \"arch_GOARCH.h\"\n#include \"malloc.h\"\n#include \"stack.h\"\n#include \"f", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/stack.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime\n\nconst (\n\t// Goroutine preemption request.\n\t// Stored into g->stackguard0 to ca", 0x1000)		 = 381 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/stack.h\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n/*\nStack layout parameters.\nIncluded both by runtime (compiled via 6c) and linkers (compiled vi", 0x1000)		 = 4056 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/stack_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime_test\n\nimport (\n\t. \"runtime\"\n\t\"strings\"\n\t\"sync\"\n\t\"testing\"\n\t\"time\"\n)\n\n// TestSta", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/string.c\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include \"runtime.h\"\n#include \"arch_GOARCH.h\"\n#include \"malloc.h\"\n#include \"race.h\"\n#include \"te", 0x1000)		 = 3878 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/string.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2014 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime\n\nimport (\n\t\"unsafe\"\n)\n\nfunc concatstrings(a []string) string {\n\tidx := 0\n\tl := 0", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/string_test.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime_test\n\nimport (\n\t\"runtime\"\n\t\"strings\"\n\t\"testing\"\n)\n\nfunc BenchmarkCompareStringEq", 0x1000)		 = 3266 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/stubs.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2014 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime\n\nimport \"unsafe\"\n\n// Declarations for runtime services implemented in C or assem", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/symtab.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2014 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime\n\nimport \"unsafe\"\n\n// NOTE: Func does not expose the actual unexported fields, be", 0x1000)		 = 4096 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/symtab_test.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime_test\n\nimport (\n\t\"runtime\"\n\t\"strings\"\n\t\"testing\"\n)\n\nfunc TestCaller(t *testing.T)", 0x1000)		 = 1021 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/sys_darwin_amd64.s\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n//\n// System calls and other sys.stuff for AMD64, Darwin\n// See http://fxr.watson.org/fxr/source", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/sys_x86.c\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2013 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build amd64 amd64p32 386\n\n#include \"runtime.h\"\n\n// adjust Gobuf as it if executed a call to", 0x1000)		 = 1799 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/thunk.s\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2014 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// This file exposes various internal runtime functions to other packages in std lib.\n\n#include ", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/time.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Time-related runtime and pieces of package time.\n\npackage runtime\n\nimport \"unsafe\"\n\n// Packag", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/traceback.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime\n\nimport \"unsafe\"\n\n// The code in this file implements stack trace walking for al", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/type.h\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Runtime type representation.\n\ntypedef struct Type Type;\ntypedef struct UncommonType UncommonT", 0x1000)		 = 2391 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/typekind.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2014 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage runtime\n\nconst (\n\tkindBool          = _KindBool\n\tkindInt           = _KindInt\n\tkindInt8", 0x1000)		 = 1325 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/typekind.h\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nenum {\n\tKindBool = 1,\n\tKindInt,\n\tKindInt8,\n\tKindInt16,\n\tKindInt32,\n\tKindInt64,\n\tKindUint,\n\tKindU", 0x1000)		 = 632 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/vlrt.c\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Inferno's libkern/vlrt-386.c\n// http://code.google.com/p/inferno-os/source/browse/libkern/vlrt-386.c\n//\n//         Copyright \302\251 1994-1999 Lucent Technologies Inc.  All rights reserved.\n//         Revisions Copyright \302\251 2000-2007 Vita Nuova Holdings Limi", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/vlrt.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Inferno's libkern/vlrt-arm.c\n// http://code.google.com/p/inferno-os/source/browse/libkern/vlrt-arm.c\n//\n//         Copyright \302\251 1994-1999 Lucent Technologies Inc.  All rights reserved.\n//         Revisions Copyright \302\251 2000-2007 Vita Nuova Holdings Limi", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/zaexperiment.h\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// auto generated by go tool dist\n\n#define GOEXPERIMENT \"\"\n== 0 {\n\t\t\t\tylo = xlo\n\t\t\t\tyhi = xhi\n\t\t\t} else {\n\t\t\t\tylo = xlo>>sh | xhi<<(32-sh)\n\t\t\t\tyhi = xhi >> sh\n\t\t\t}\n\t\t} else {\n\t\t\tif sh == 32 {\n\t\t\t\tylo = xhi\n\t\t\t} else if sh < 64 {\n\t\t\t\tylo = xhi >> (sh - 32)\n", 0x1000)		 = 59 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/zasm_darwin_amd64.h\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// auto generated by go tool dist\n\n#define\tget_tls(r)\tMOVQ TLS, r\n#define\tg(r)\t0(r)(TLS*1)\n#define const_Gidle 0\n#define const_Grunnable 1\n#define const_Grunning 2\n#define const_Gsyscall 3\n#define const_Gwaiting 4\n#define const_Gmoribund_unused 5\n#define c", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/zgoarch_amd64.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// auto generated by go tool dist\n\npackage runtime\n\nconst theGoarch = `amd64`\ng 264\n#define g_end 272\n#define const_sizeofM 808\n#define m_g0 0\n#define m_morebuf 8\n#define m_procid 56\n#define m_gsignal 64\n#define m_tls 72\n#define m_mstartfn 104\n#define m_cu", 0x1000)		 = 78 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/zgoos_darwin.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// auto generated by go tool dist\n\npackage runtime\n\nconst theGoos = `darwin`\n\0", 0x1000)		 = 77 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/zruntime_defs_darwin_amd64.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// auto generated by go tool dist\n\npackage runtime\nimport \"unsafe\"\nvar _ unsafe.Pointer\n\nconst _Gidle = 0\nconst _Grunnable = 1\nconst _Grunning = 2\nconst _Gsyscall = 3\nconst _Gwaiting = 4\nconst _Gmoribund_unused = 5\nconst _Gdead = 6\nconst _Genqueue = 7\ncons", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/zsys_darwin_amd64.s\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// auto generated by go tool dist\n\n     = 2\n\t_ArgsSizeUnknown            = -0x80000000\n)\n\nvar (\n\tpclntable []byte\n\tftab      []functab\n\tfiletab   []uint32\n\n\tpclntab, epclntab struct{} // linker symbols\n)\n\ntype functab struct {\n\tentry   uintptr\n\tfuncoff uin", 0x1000)		 = 35 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "32\n\tpidle\t*p\n\tnpidle\tuint32\n\tnmspinning\tuint32\n\trunqhead\t*g\n\trunqtail\t*g\n\trunqsize\tint32\n\tgflock\tmutex\n\tgfree\t*g\n\tngfree\tint32\n\tgcwaiting\tuint32\n\tstopwait\tint32\n\tstopnote\tnote\n\tsysmonwait\tuint32\n\tsysmonnote\tnote\n\tlastpoll\tuint64\n\tprofilehz\tint32\n}\n\nconst _", 0x1000)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/zversion.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// auto generated by go tool dist\n\npackage runtime\n\nconst defaultGoroot = `/usr/local/Cellar/go/1.4.2/libexec`\nconst theVersion = `go1.4.2`\nvar buildVersion = theVersion\n\0", 0x1000)		 = 170 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/src/unsafe\0", 0xC2080B2900, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/unsafe\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
getdirentries64(0x3, 0xC208114000, 0x1000)		 = 88 0
getdirentries64(0x3, 0xC208114000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/unsafe/unsafe.go\0", 0xC2080B2990, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/unsafe/unsafe.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n/*\n\tPackage unsafe contains operations that step around the type safety of Go programs.\n\n\tPackag", 0x1000)		 = 1997 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/src/fmt\0", 0xC2080B2A20, 0x1000)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/fmt\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
getdirentries64(0x3, 0xC2080EA000, 0x1000)		 = 360 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
getdirentries64(0x3, 0xC2080EA000, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/fmt/doc.go\0", 0xC2080B2AB0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/fmt/export_test.go\0", 0xC2080B2B40, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/fmt/fmt_test.go\0", 0xC2080B2BD0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/fmt/format.go\0", 0xC2080B2C60, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/fmt/print.go\0", 0xC2080B2CF0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/fmt/scan.go\0", 0xC2080B2D80, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/fmt/scan_test.go\0", 0xC2080B2E10, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/fmt/stringer_test.go\0", 0xC2080B2EA0, 0x1000)		 = 0 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/fmt/doc.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n/*\n\tPackage fmt implements formatted I/O with functions analogous\n\tto C's printf and scanf.  The", 0x1000)		 = 4096 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "umbers, the width and precision apply to the two\n\tcomponents independently and the result is parenthesized, so %f applied\n\tto 1.2+3.4i produces (1.200000+3.400000i).\n\n\tOther flags:\n\t\t+\talways print a sign for numeric values;\n\t\t\tguarantee ASCII-only output ", 0x1000)		 = 4096 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, ", such as providing\n\ta string to %d, the generated string will contain a\n\tdescription of the problem, as in these examples:\n\n\t\tWrong type or unknown verb: %!verb(type=value)\n\t\t\tPrintf(\"%d\", hi):          %!d(string=hi)\n\t\tToo many arguments: %!(EXTRA type=v", 0x1000)		 = 4078 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "\n\tdescription.\n\n\tIf an Error or String method triggers a panic when called by a\n\tprint routine, the fmt package reformats the error message\n\tfrom the panic, decorating it with an indication that it came\n\tthrough the fmt package.  For example, if a String m", 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/fmt/export_test.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2012 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage fmt\n\nvar IsSpace = isSpace\n\0", 0x1000)		 = 196 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/fmt/fmt_test.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage fmt_test\n\nimport (\n\t\"bytes\"\n\t. \"fmt\"\n\t\"io\"\n\t\"math\"\n\t\"runtime\"\n\t\"strings\"\n\t\"testing\"\n\t\"ti", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/fmt/format.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage fmt\n\nimport (\n\t\"math\"\n\t\"strconv\"\n\t\"unicode/utf8\"\n)\n\nconst (\n\t// %b of an int64, plus a s", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/fmt/print.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage fmt\n\nimport (\n\t\"errors\"\n\t\"io\"\n\t\"os\"\n\t\"reflect\"\n\t\"sync\"\n\t\"unicode/utf8\"\n)\n\n// Some consta", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/fmt/scan.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2010 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage fmt\n\nimport (\n\t\"errors\"\n\t\"io\"\n\t\"math\"\n\t\"os\"\n\t\"reflect\"\n\t\"strconv\"\n\t\"sync\"\n\t\"unicode/utf8", 0x1000)		 = 4096 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/fmt/scan_test.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage fmt_test\n\nimport (\n\t\"bufio\"\n\t\"bytes\"\n\t\"errors\"\n\t. \"fmt\"\n\t\"io\"\n\t\"math\"\n\t\"reflect\"\n\t\"regex", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/fmt/stringer_test.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2010 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage fmt_test\n\nimport (\n\t. \"fmt\"\n\t\"testing\"\n)\n\ntype TI int\ntype TI8 int8\ntype TI16 int16\ntype", 0x1000)		 = 2156 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/src/io\0", 0xC208070000, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/io\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
getdirentries64(0x3, 0xC20812E000, 0x1000)		 = 304 0
getdirentries64(0x3, 0xC20812E000, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/io/io.go\0", 0xC208070120, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/io/io_test.go\0", 0xC2080701B0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/io/ioutil\0", 0xC208070240, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/io/multi.go\0", 0xC2080702D0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/io/multi_test.go\0", 0xC208070360, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/io/pipe.go\0", 0xC2080703F0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/io/pipe_test.go\0", 0xC208070480, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/io/io.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Package io provides basic interfaces to I/O primitives.\n// Its primary job is to wrap existin", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/io/io_test.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage io_test\n\nimport (\n\t\"bytes\"\n\t\"errors\"\n\t\"fmt\"\n\t. \"io\"\n\t\"strings\"\n\t\"testing\"\n)\n\n// An versi", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/io/multi.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2010 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage io\n\ntype multiReader struct {\n\treaders []Reader\n}\n\nfunc (mr *multiReader) Read(p []byte)", 0x1000)		 = 1479 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/io/multi_test.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2010 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage io_test\n\nimport (\n\t\"bytes\"\n\t\"crypto/sha1\"\n\t\"fmt\"\n\t. \"io\"\n\t\"io/ioutil\"\n\t\"strings\"\n\t\"test", 0x1000)		 = 2822 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/io/pipe.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Pipe adapter to connect code expecting an io.Reader\n// with code expecting an io.Writer.\n\npac", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/io/pipe_test.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage io_test\n\nimport (\n\t\"fmt\"\n\t. \"io\"\n\t\"testing\"\n\t\"time\"\n)\n\nfunc checkWrite(t *testing.T, w W", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/src/sync\0", 0xC2080705A0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/sync\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
getdirentries64(0x3, 0xC2080DD000, 0x1000)		 = 784 0
getdirentries64(0x3, 0xC2080DD000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sync/atomic\0", 0xC208070630, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sync/cond.go\0", 0xC2080706C0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sync/cond_test.go\0", 0xC208070750, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sync/example_test.go\0", 0xC2080707E0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sync/export_test.go\0", 0xC208070870, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sync/mutex.go\0", 0xC208070900, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sync/mutex_test.go\0", 0xC208070990, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sync/once.go\0", 0xC208070A20, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sync/once_test.go\0", 0xC208070AB0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sync/pool.go\0", 0xC208070BD0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sync/pool_test.go\0", 0xC208070C60, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sync/race.go\0", 0xC208070CF0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sync/race0.go\0", 0xC208070D80, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sync/runtime.go\0", 0xC208070E10, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sync/runtime_sema_test.go\0", 0xC208070EA0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sync/rwmutex.go\0", 0xC208070F30, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sync/rwmutex_test.go\0", 0xC208070FC0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sync/waitgroup.go\0", 0xC208071050, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sync/waitgroup_test.go\0", 0xC2080710E0, 0x1000)		 = 0 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/sync/cond.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage sync\n\nimport (\n\t\"sync/atomic\"\n\t\"unsafe\"\n)\n\n// Cond implements a condition variable, a re", 0x1000)		 = 2777 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/sync/cond_test.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\npackage sync_test\n\nimport (\n\t. \"sync\"\n\n\t\"runtime\"\n\t\"testing\"\n)\n\nfunc TestCondSignal(t *testing.T)", 0x1000)		 = 3947 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/sync/example_test.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage sync_test\n\nimport (\n\t\"fmt\"\n\t\"sync\"\n)\n\ntype httpPkg struct{}\n\nfunc (httpPkg) Get(url stri", 0x1000)		 = 1165 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/sync/export_test.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2012 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage sync\n\n// Export for testing.\nvar Runtime_Semacquire = runtime_Semacquire\nvar Runtime_Se", 0x1000)		 = 286 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/sync/mutex.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Package sync provides basic synchronization primitives such as mutual\n// exclusion locks.  Ot", 0x1000)		 = 2698 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/sync/mutex_test.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// GOMAXPROCS=10 go test\n\npackage sync_test\n\nimport (\n\t\"runtime\"\n\t. \"sync\"\n\t\"testing\"\n)\n\nfunc Ha", 0x1000)		 = 2295 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/sync/once.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage sync\n\nimport (\n\t\"sync/atomic\"\n)\n\n// Once is an object that will perform exactly one acti", 0x1000)		 = 1334 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/sync/once_test.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage sync_test\n\nimport (\n\t. \"sync\"\n\t\"testing\"\n)\n\ntype one int\n\nfunc (o *one) Increment() {\n\t*", 0x1000)		 = 1125 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/sync/pool.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage sync\n\nimport (\n\t\"runtime\"\n\t\"sync/atomic\"\n\t\"unsafe\"\n)\n\n// A Pool is a set of temporary ob", 0x1000)		 = 4096 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/sync/pool_test.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Pool is no-op under race detector, so all these tests do not work.\n// +build !race\n\npackage s", 0x1000)		 = 3089 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/sync/race.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2012 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build race\n\npackage sync\n\nimport (\n\t\"runtime\"\n\t\"unsafe\"\n)\n\nconst raceenabled = true\n\nfunc r", 0x1000)		 = 691 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/sync/race0.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2012 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build !race\n\npackage sync\n\nimport (\n\t\"unsafe\"\n)\n\nconst raceenabled = false\n\nfunc raceAcquir", 0x1000)		 = 502 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/sync/runtime.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2012 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage sync\n\nimport \"unsafe\"\n\n// defined in package runtime\n\n// Semacquire waits until *s > 0 ", 0x1000)		 = 1266 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/sync/runtime_sema_test.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage sync_test\n\nimport (\n\t\"runtime\"\n\t. \"sync\"\n\t\"testing\"\n)\n\nfunc BenchmarkSemaUncontended(b *", 0x1000)		 = 1318 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/sync/rwmutex.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage sync\n\nimport (\n\t\"sync/atomic\"\n\t\"unsafe\"\n)\n\n// An RWMutex is a reader/writer mutual exclu", 0x1000)		 = 3813 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/sync/rwmutex_test.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// GOMAXPROCS=10 go test\n\npackage sync_test\n\nimport (\n\t\"fmt\"\n\t\"runtime\"\n\t. \"sync\"\n\t\"sync/atomic\"", 0x1000)		 = 4096 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/sync/waitgroup.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage sync\n\nimport (\n\t\"sync/atomic\"\n\t\"unsafe\"\n)\n\n// A WaitGroup waits for a collection of goro", 0x1000)		 = 3947 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/sync/waitgroup_test.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage sync_test\n\nimport (\n\t. \"sync\"\n\t\"sync/atomic\"\n\t\"testing\"\n)\n\nfunc testWaitGroup(t *testing", 0x1000)		 = 2704 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/src/sync/atomic\0", 0xC208071170, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/sync/atomic\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
getdirentries64(0x3, 0xC2080F4000, 0x1000)		 = 720 0
getdirentries64(0x3, 0xC2080F4000, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sync/atomic/64bit_arm.go\0", 0xC208070000, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sync/atomic/asm_386.s\0", 0xC208070120, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sync/atomic/asm_amd64.s\0", 0xC2080701B0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sync/atomic/asm_amd64p32.s\0", 0xC208070240, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sync/atomic/asm_arm.s\0", 0xC2080702D0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sync/atomic/asm_freebsd_arm.s\0", 0xC208070360, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sync/atomic/asm_linux_arm.s\0", 0xC2080703F0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sync/atomic/asm_nacl_arm.s\0", 0xC208070480, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sync/atomic/asm_netbsd_arm.s\0", 0xC2080705A0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sync/atomic/atomic_linux_arm_test.go\0", 0xC208070630, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sync/atomic/atomic_test.go\0", 0xC2080706C0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sync/atomic/doc.go\0", 0xC208070750, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sync/atomic/export_linux_arm_test.go\0", 0xC2080707E0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sync/atomic/race.s\0", 0xC208070870, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sync/atomic/value.go\0", 0xC208070900, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sync/atomic/value_test.go\0", 0xC208070990, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/sync/atomic/asm_amd64.s\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build !race\n\n#include \"textflag.h\"\n\nTEXT \302\267SwapInt32(SB),NOSPLIT,$0-20\n\tJMP\t\302\267SwapUint32(SB", 0x1000)		 = 2758 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/sync/atomic/atomic_test.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage atomic_test\n\nimport (\n\t\"fmt\"\n\t\"runtime\"\n\t\"strings\"\n\t. \"sync/atomic\"\n\t\"testing\"\n\t\"unsafe", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/sync/atomic/doc.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Package atomic provides low-level atomic memory primitives\n// useful for implementing synchr", 0x1000)		 = 4096 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/sync/atomic/race.s\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2014 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build race\n\n// This file is here only to allow external functions.\n// The operations are im", 0x1000)		 = 294 0
read(0x3, "dSwapUint64 executes the compare-and-swap operation for a uint64 value.\nfunc CompareAndSwapUint64(addr *uint64, old, new uint64) (swapped bool)\n\n// CompareAndSwapUintptr executes the compare-and-swap operation for a uintptr value.\nfunc CompareAndSwapUintpt", 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/sync/atomic/value.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2014 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage atomic\n\nimport (\n\t\"unsafe\"\n)\n\n// A Value provides an atomic load and store of a consiste", 0x1000)		 = 2455 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/sync/atomic/value_test.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2014 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage atomic_test\n\nimport (\n\t\"math/rand\"\n\t\"runtime\"\n\t\"sync\"\n\t. \"sync/atomic\"\n\t\"testing\"\n\t\"time", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/src/math\0", 0xC208070AB0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
getdirentries64(0x3, 0xC2080E1000, 0x1000)		 = 4096 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
getdirentries64(0x3, 0xC2080E1000, 0x1000)		 = 1248 0
getdirentries64(0x3, 0xC2080E1000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/abs.go\0", 0xC208070BD0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/abs_386.s\0", 0xC208070C60, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/abs_amd64.s\0", 0xC208070CF0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/abs_amd64p32.s\0", 0xC208070D80, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/abs_arm.s\0", 0xC208070E10, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/acosh.go\0", 0xC208070EA0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/all_test.go\0", 0xC208070F30, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/asin.go\0", 0xC208070FC0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/asin_386.s\0", 0xC208071050, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/asin_amd64.s\0", 0xC2080710E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/asin_amd64p32.s\0", 0xC208071170, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/asin_arm.s\0", 0xC208071200, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/asinh.go\0", 0xC208071290, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/atan.go\0", 0xC208071320, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/atan2.go\0", 0xC2080713B0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/atan2_386.s\0", 0xC208071440, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/atan2_amd64.s\0", 0xC2080714D0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/atan2_amd64p32.s\0", 0xC208071560, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/atan2_arm.s\0", 0xC2080715F0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/atan_386.s\0", 0xC208071680, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/atan_amd64.s\0", 0xC208071710, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/atan_amd64p32.s\0", 0xC2080717A0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/atan_arm.s\0", 0xC208071830, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/atanh.go\0", 0xC2080718C0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/big\0", 0xC208071950, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/bits.go\0", 0xC2080719E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/cbrt.go\0", 0xC208071A70, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/cmplx\0", 0xC208071B00, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/const.go\0", 0xC208071B90, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/copysign.go\0", 0xC208071C20, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/dim.go\0", 0xC208071CB0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/dim_386.s\0", 0xC208071D40, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/dim_amd64.s\0", 0xC208071DD0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/dim_amd64p32.s\0", 0xC208071E60, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/dim_arm.s\0", 0xC208071EF0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/erf.go\0", 0xC20811C000, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/exp.go\0", 0xC20811C090, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/exp2_386.s\0", 0xC20811C120, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/exp2_amd64.s\0", 0xC20811C1B0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/exp2_amd64p32.s\0", 0xC20811C240, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/exp2_arm.s\0", 0xC20811C2D0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/exp_386.s\0", 0xC20811C360, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/exp_amd64.s\0", 0xC20811C3F0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/exp_amd64p32.s\0", 0xC20811C480, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/exp_arm.s\0", 0xC20811C510, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/expm1.go\0", 0xC20811C5A0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/expm1_386.s\0", 0xC20811C630, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/expm1_amd64.s\0", 0xC20811C6C0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/expm1_amd64p32.s\0", 0xC20811C750, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/expm1_arm.s\0", 0xC20811C7E0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/export_test.go\0", 0xC20811C870, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/floor.go\0", 0xC20811C900, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/floor_386.s\0", 0xC20811C990, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/floor_amd64.s\0", 0xC20811CA20, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/floor_amd64p32.s\0", 0xC20811CAB0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/floor_arm.s\0", 0xC20811CB40, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/frexp.go\0", 0xC20811CBD0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/frexp_386.s\0", 0xC20811CC60, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/frexp_amd64.s\0", 0xC20811CCF0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/frexp_amd64p32.s\0", 0xC20811CD80, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/frexp_arm.s\0", 0xC20811CE10, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/gamma.go\0", 0xC20811CEA0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/hypot.go\0", 0xC20811CF30, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/hypot_386.s\0", 0xC20811CFC0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/hypot_amd64.s\0", 0xC20811D050, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/hypot_amd64p32.s\0", 0xC20811D0E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/hypot_arm.s\0", 0xC20811D170, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/j0.go\0", 0xC20811D200, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/j1.go\0", 0xC20811D290, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/jn.go\0", 0xC20811D320, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/ldexp.go\0", 0xC20811D3B0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/ldexp_386.s\0", 0xC20811D440, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/ldexp_amd64.s\0", 0xC20811D4D0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/ldexp_amd64p32.s\0", 0xC20811D560, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/ldexp_arm.s\0", 0xC20811D5F0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/lgamma.go\0", 0xC20811D680, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/log.go\0", 0xC20811D710, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/log10.go\0", 0xC20811D7A0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/log10_386.s\0", 0xC20811D830, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/log10_amd64.s\0", 0xC20811D8C0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/log10_amd64p32.s\0", 0xC20811D950, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/log10_arm.s\0", 0xC20811D9E0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/log1p.go\0", 0xC20811DA70, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/log1p_386.s\0", 0xC20811DB00, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/log1p_amd64.s\0", 0xC20811DB90, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/log1p_amd64p32.s\0", 0xC20811DC20, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/log1p_arm.s\0", 0xC20811DCB0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/log_386.s\0", 0xC20811DD40, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/log_amd64.s\0", 0xC20811DDD0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/log_amd64p32.s\0", 0xC20811DE60, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/log_arm.s\0", 0xC20811DEF0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/logb.go\0", 0xC208118000, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/mod.go\0", 0xC208118090, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/mod_386.s\0", 0xC208118120, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/mod_amd64.s\0", 0xC2081181B0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/mod_amd64p32.s\0", 0xC208118240, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/mod_arm.s\0", 0xC2081182D0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/modf.go\0", 0xC208118360, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/modf_386.s\0", 0xC2081183F0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/modf_amd64.s\0", 0xC208118480, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/modf_amd64p32.s\0", 0xC208118510, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/modf_arm.s\0", 0xC2081185A0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/nextafter.go\0", 0xC208118630, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/pow.go\0", 0xC2081186C0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/pow10.go\0", 0xC208118750, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/rand\0", 0xC2081187E0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/remainder.go\0", 0xC208118870, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/remainder_386.s\0", 0xC208118900, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/remainder_amd64.s\0", 0xC208118990, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/remainder_amd64p32.s\0", 0xC208118A20, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/remainder_arm.s\0", 0xC208118AB0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/signbit.go\0", 0xC208118B40, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/sin.go\0", 0xC208118BD0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/sin_386.s\0", 0xC208118C60, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/sin_amd64.s\0", 0xC208118CF0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/sin_amd64p32.s\0", 0xC208118D80, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/sin_arm.s\0", 0xC208118E10, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/sincos.go\0", 0xC208118EA0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/sincos_386.s\0", 0xC208118F30, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/sincos_amd64.s\0", 0xC208118FC0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/sincos_amd64p32.s\0", 0xC208119050, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/sincos_arm.s\0", 0xC2081190E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/sinh.go\0", 0xC208119170, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/sqrt.go\0", 0xC208119200, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/sqrt_386.s\0", 0xC208119290, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/sqrt_amd64.s\0", 0xC208119320, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/sqrt_amd64p32.s\0", 0xC2081193B0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/sqrt_arm.s\0", 0xC208119440, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/tan.go\0", 0xC2081194D0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/tan_386.s\0", 0xC208119560, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/tan_amd64.s\0", 0xC2081195F0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/tan_amd64p32.s\0", 0xC208119680, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/tan_arm.s\0", 0xC208119710, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/tanh.go\0", 0xC2081197A0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/unsafe.go\0", 0xC208119830, 0x1000)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/abs.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage math\n\n// Abs returns the absolute value of x.\n//\n// Special cases are:\n//\tAbs(\302\261Inf) = +", 0x1000)		 = 440 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/abs_amd64.s\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2010 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include \"textflag.h\"\n\n// func Abs(x float64) float64\nTEXT \302\267Abs(SB),NOSPLIT,$0\n\tMOVQ   $(1<<63", 0x1000)		 = 360 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/acosh.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2010 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage math\n\n// The original C code, the long comment, and the constants\n// below are from Free", 0x1000)		 = 1735 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/all_test.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage math_test\n\nimport (\n\t\"fmt\"\n\t. \"math\"\n\t\"testing\"\n)\n\nvar vf = []float64{\n\t4.97901192488367", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/asin.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage math\n\n/*\n\tFloating-point arcsine and arccosine.\n\n\tThey are implemented by computing the ", 0x1000)		 = 983 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/asin_amd64.s\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include \"textflag.h\"\n\nTEXT \302\267Asin(SB),NOSPLIT,$0\n\tJMP \302\267asin(SB)\n\nTEXT \302\267Acos(SB),NOSPLIT,$0\n\t", 0x1000)		 = 271 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/asinh.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2010 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage math\n\n// The original C code, the long comment, and the constants\n// below are from Free", 0x1000)		 = 1869 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/atan.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage math\n\n/*\n\tFloating-point arctangent.\n*/\n\n// The original C code, the long comment, and t", 0x1000)		 = 3043 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/atan2.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage math\n\n// Atan2 returns the arc tangent of y/x, using\n// the signs of the two to determin", 0x1000)		 = 1485 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/atan2_amd64.s\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include \"textflag.h\"\n\nTEXT \302\267Atan2(SB),NOSPLIT,$0\n\tJMP \302\267atan2(SB)\n\0", 0x1000)		 = 229 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/atan_amd64.s\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include \"textflag.h\"\n\nTEXT \302\267Atan(SB),NOSPLIT,$0\n\tJMP \302\267atan(SB)\n\0", 0x1000)		 = 227 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/atanh.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2010 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage math\n\n// The original C code, the long comment, and the constants\n// below are from Free", 0x1000)		 = 1943 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/bits.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage math\n\nconst (\n\tuvnan    = 0x7FF8000000000001\n\tuvinf    = 0x7FF0000000000000\n\tuvneginf = ", 0x1000)		 = 1835 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/cbrt.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage math\n\n/*\n\tThe algorithm is based in part on \"Optimal Partitioning of\n\tNewton's Method fo", 0x1000)		 = 1641 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/const.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Package math provides basic constants and mathematical functions.\npackage math\n\n// Mathematic", 0x1000)		 = 2031 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/copysign.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2010 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage math\n\n// Copysign returns a value with the magnitude\n// of x and the sign of y.\nfunc Cop", 0x1000)		 = 378 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/dim.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2010 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage math\n\n// Dim returns the maximum of x-y or 0.\n//\n// Special cases are:\n//\tDim(+Inf, +Inf", 0x1000)		 = 1371 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/dim_amd64.s\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2010 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include \"textflag.h\"\n\n#define PosInf 0x7FF0000000000000\n#define NaN    0x7FF8000000000001\n#def", 0x1000)		 = 2786 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/erf.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2010 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage math\n\n/*\n\tFloating-point error function and complementary error function.\n*/\n\n// The ori", 0x1000)		 = 4096 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "oximate\n//              g(s)=f(1/x**2) = log(erfc(x)*x) - x*x + 0.5625\n//         Here is the error bound for R1/S1 and R2/S2\n//              |R1/S1 - f(x)|  < 2**(-62.57)\n//              |R2/S2 - f(x)|  < 2**(-61.52)\n//\n//      5. For inf > x >= 28\n//    ", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/exp.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage math\n\n// Exp returns e**x, the base-e exponential of x.\n//\n// Special cases are:\n//\tExp(", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/exp2_amd64.s\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include \"textflag.h\"\n\nTEXT \302\267Exp2(SB),NOSPLIT,$0\n\tJMP \302\267exp2(SB)\n\0", 0x1000)		 = 227 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/exp_amd64.s\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2010 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include \"textflag.h\"\n\n// The method is based on a paper by Naoki Shibata: \"Efficient evaluatio", 0x1000)		 = 2907 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/expm1.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2010 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage math\n\n// The original C code, the long comment, and the constants\n// below are from Free", 0x1000)		 = 4096 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "0+2.0*(r-E);\n//        (v)   if (k<-2||k>56) return 2**k(1-(E-r)) - 1 (or exp(x)-1)\n//        (vi)  if k <= 20, return 2**k((1-2**-k)-(E-r)), else\n//        (vii) return 2**k(1-((E+2**-k)-r))\n//\n// Special cases:\n//      expm1(INF) is INF, expm1(NaN) is Na", 0x1000)		 = 3977 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/expm1_amd64.s\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include \"textflag.h\"\n\nTEXT \302\267Expm1(SB),NOSPLIT,$0\n\tJMP \302\267expm1(SB)\n}\n\n\t// argument reduction\n\t", 0x1000)		 = 229 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/export_test.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage math\n\n// Export internal functions for testing.\nvar ExpGo = exp\nvar Exp2Go = exp2\nvar H", 0x1000)		 = 289 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/floor.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009-2010 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage math\n\n// Floor returns the greatest integer value less than or equal to x.\n//\n// Sp", 0x1000)		 = 1084 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/floor_amd64.s\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2012 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include \"textflag.h\"\n\n#define Big\t\t0x4330000000000000 // 2**52\n\n// func Floor(x float64) float", 0x1000)		 = 2024 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/frexp.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage math\n\n// Frexp breaks f into a normalized fraction\n// and an integral power of two.\n// I", 0x1000)		 = 860 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/frexp_amd64.s\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include \"textflag.h\"\n\nTEXT \302\267Frexp(SB),NOSPLIT,$0\n\tJMP \302\267frexp(SB)\n\0", 0x1000)		 = 229 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/gamma.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2010 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage math\n\n// The original C code, the long comment, and the constants\n// below are from http", 0x1000)		 = 4096 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/hypot.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2010 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage math\n\n/*\n\tHypot -- sqrt(p*p + q*q), but overflows only if the result does.\n*/\n\n// Hypot ", 0x1000)		 = 798 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/hypot_amd64.s\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2010 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include \"textflag.h\"\n\n#define PosInf 0x7FF0000000000000\n#define NaN 0x7FF8000000000001\n\n// fun", 0x1000)		 = 1073 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/j0.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0dtrace: error on enabled probe ID 1995 (ID 148: syscall::read:return): invalid address (0x0) in action #12 at DIF offset 92

select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2010 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage math\n\n/*\n\tBessel function of the first and second kinds of order zero.\n*/\n\n// The origin", 0x1000)		 = 4096 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/j1.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2010 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage math\n\n/*\n\tBessel function of the first and second kinds of order one.\n*/\n\n// The origina", 0x1000)		 = 4096 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/jn.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2010 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage math\n\n/*\n\tBessel function of the first and second kinds of order n.\n*/\n\n// The original ", 0x1000)		 = 4096 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/ldexp.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage math\n\n// Ldexp is the inverse of Frexp.\n// It returns frac \303\227 2**exp.\n//\n// Special case", 0x1000)		 = 990 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/ldexp_amd64.s\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include \"textflag.h\"\n\nTEXT \302\267Ldexp(SB),NOSPLIT,$0\n\tJMP \302\267ldexp(SB)\n\0", 0x1000)		 = 229 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/lgamma.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2010 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage math\n\n/*\n\tFloating-point logarithm of the Gamma function.\n*/\n\n// The original C code and", 0x1000)		 = 4096 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/log.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage math\n\n/*\n\tFloating-point logarithm.\n*/\n\n// The original C code, the long comment, and th", 0x1000)		 = 3891 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/log10.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage math\n\n// Log10 returns the decimal logarithm of x.\n// The special cases are the same as ", 0x1000)		 = 575 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/log10_amd64.s\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include \"textflag.h\"\n\nTEXT \302\267Log10(SB),NOSPLIT,$0\n\tJMP \302\267log10(SB)\n\nTEXT \302\267Log2(SB),NOSPLIT,$0", 0x1000)		 = 273 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/log1p.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2010 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage math\n\n// The original C code, the long comment, and the constants\n// below are from Free", 0x1000)		 = 4096 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/log1p_amd64.s\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include \"textflag.h\"\n\nTEXT \302\267Log1p(SB),NOSPLIT,$0\n\tJMP \302\267log1p(SB)\nlo)))\n//      Here ln2 is s", 0x1000)		 = 229 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/log_amd64.s\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2010 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include \"textflag.h\"\n\n#define HSqrt2 7.07106781186547524401e-01 // sqrt(2)/2\n#define Ln2Hi  6.", 0x1000)		 = 3701 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/logb.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2010 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage math\n\n// Logb returns the binary exponent of x.\n//\n// Special cases are:\n//\tLogb(\302\261Inf) ", 0x1000)		 = 1014 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/mod.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009-2010 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage math\n\n/*\n\tFloating-point mod function.\n*/\n\n// Mod returns the floating-point remain", 0x1000)		 = 874 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/mod_amd64.s\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include \"textflag.h\"\n\nTEXT \302\267Mod(SB),NOSPLIT,$0\n\tJMP \302\267mod(SB)\n\0", 0x1000)		 = 225 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/modf.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage math\n\n// Modf returns integer and fractional floating-point numbers\n// that sum to f.  B", 0x1000)		 = 776 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/modf_amd64.s\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include \"textflag.h\"\n\nTEXT \302\267Modf(SB),NOSPLIT,$0\n\tJMP \302\267modf(SB)\n\0", 0x1000)		 = 227 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/nextafter.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2010 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage math\n\n// Nextafter32 returns the next representable float32 value after x towards y.\n// ", 0x1000)		 = 1245 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/pow.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage math\n\nfunc isOddInt(x float64) bool {\n\txi, xf := Modf(x)\n\treturn xf == 0 && int64(xi)&1 ", 0x1000)		 = 2656 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/pow10.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage math\n\n// This table might overflow 127-bit exponent representations.\n// In that case, tr", 0x1000)		 = 828 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/remainder.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/os/path_unix.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd linux nacl netbsd openbsd solaris\n\npackage os\n\nconst (\n\tPathS", 0x1000)		 = 507 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/os/pipe_bsd.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd nacl netbsd openbsd solaris\n\npackage os\n\nimport \"syscall\"\n\n//", 0x1000)		 = 796 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/os/proc.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Process etc.\n\npackage os\n\nimport (\n\t\"runtime\"\n\t\"syscall\"\n)\n\n// Args hold the command-line arg", 0x1000)		 = 1371 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/os/stat_darwin.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage os\n\nimport (\n\t\"syscall\"\n\t\"time\"\n)\n\nfunc sameFile(fs1, fs2 *fileStat) bool {\n\tstat1 := fs", 0x1000)		 = 1427 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/os/str.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build plan9\n\npackage os\n\nfunc itoa(val int) string { // do it here rather than with fmt to a", 0x1000)		 = 496 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/os/sys_bsd.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd nacl netbsd openbsd\n\n// os code shared between *BSD systems i", 0x1000)		 = 512 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/os/sys_darwin.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2014 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage os\n\nimport \"syscall\"\n\n// supportsCloseOnExec reports whether the platform supports the\n/", 0x1000)		 = 768 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/os/sys_unix.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2014 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build dragonfly linux netbsd openbsd solaris\n\npackage os\n\n// supportsCloseOnExec reports whe", 0x1000)		 = 339 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/os/types.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage os\n\nimport (\n\t\"syscall\"\n\t\"time\"\n)\n\n// Getpagesize returns the underlying system's memory", 0x1000)		 = 4044 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/os/types_notwin.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build !windows\n\npackage os\n\nimport (\n\t\"time\"\n)\n\n// A fileStat is the implementation of FileI", 0x1000)		 = 641 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall\0", 0xC208118120, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/syscall\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
getdirentries64(0x3, 0xC2080EB000, 0x1000)		 = 4064 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
getdirentries64(0x3, 0xC2080EB000, 0x1000)		 = 4048 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
getdirentries64(0x3, 0xC2080EB000, 0x1000)		 = 1872 0
getdirentries64(0x3, 0xC2080EB000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/asm.s\0", 0xC2081181B0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/asm_darwin_386.s\0", 0xC208118240, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/asm_darwin_amd64.s\0", 0xC2081182D0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/asm_dragonfly_386.s\0", 0xC208118360, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/asm_dragonfly_amd64.s\0", 0xC2081183F0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/asm_freebsd_386.s\0", 0xC208118480, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/asm_freebsd_amd64.s\0", 0xC208118510, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/asm_freebsd_arm.s\0", 0xC2081185A0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/asm_linux_386.s\0", 0xC208118630, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/asm_linux_amd64.s\0", 0xC2081186C0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/asm_linux_arm.s\0", 0xC208118750, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/asm_nacl_386.s\0", 0xC2081187E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/asm_nacl_amd64p32.s\0", 0xC208118870, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/asm_nacl_arm.s\0", 0xC208118900, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/asm_netbsd_386.s\0", 0xC208118990, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/asm_netbsd_amd64.s\0", 0xC208118A20, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/asm_netbsd_arm.s\0", 0xC208118AB0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/asm_openbsd_386.s\0", 0xC208118B40, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/asm_openbsd_amd64.s\0", 0xC208118BD0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/asm_plan9_386.s\0", 0xC208118C60, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/asm_plan9_amd64.s\0", 0xC208118CF0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/asm_solaris_amd64.s\0", 0xC208118D80, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/bpf_bsd.go\0", 0xC208118E10, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/creds_test.go\0", 0xC208118EA0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/dir_plan9.go\0", 0xC208118F30, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/dll_windows.go\0", 0xC208118FC0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/env_plan9.go\0", 0xC208119050, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/env_unix.go\0", 0xC2081190E0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/env_windows.go\0", 0xC208119170, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/exec_bsd.go\0", 0xC208119200, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/exec_linux.go\0", 0xC208119290, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/exec_plan9.go\0", 0xC208119320, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/exec_solaris.go\0", 0xC2081193B0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/exec_unix.go\0", 0xC208119440, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/exec_windows.go\0", 0xC2081194D0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/export_test.go\0", 0xC208119560, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/fd_nacl.go\0", 0xC2081195F0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/flock.go\0", 0xC208119680, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/flock_linux_32bit.go\0", 0xC208119710, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/fs_nacl.go\0", 0xC2081197A0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/lsf_linux.go\0", 0xC208119830, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/mkall.sh\0", 0xC208070000, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/mkall_windows.bat\0", 0xC208070BD0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/mkerrors.sh\0", 0xC208070C60, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/mksyscall.pl\0", 0xC208070CF0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/mksyscall_solaris.pl\0", 0xC208070D80, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/mksyscall_windows.go\0", 0xC208070E10, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/mksysctl_openbsd.pl\0", 0xC208070EA0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/mksysnum_darwin.pl\0", 0xC208070F30, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/mksysnum_dragonfly.pl\0", 0xC208070FC0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/mksysnum_freebsd.pl\0", 0xC208071050, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/mksysnum_linux.pl\0", 0xC2080710E0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/mksysnum_netbsd.pl\0", 0xC208071170, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/mksysnum_openbsd.pl\0", 0xC208071200, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/mksysnum_plan9.sh\0", 0xC208071290, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/mmap_unix_test.go\0", 0xC208071320, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/net_nacl.go\0", 0xC2080713B0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/netlink_linux.go\0", 0xC208071440, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/race.go\0", 0xC2080714D0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/race0.go\0", 0xC208071560, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/route_bsd.go\0", 0xC2080715F0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/route_darwin.go\0", 0xC208071680, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/route_dragonfly.go\0", 0xC208071710, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/route_freebsd.go\0", 0xC2080717A0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/route_freebsd_32bit.go\0", 0xC208071830, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/route_freebsd_64bit.go\0", 0xC2080718C0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/route_netbsd.go\0", 0xC208071950, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/route_openbsd.go\0", 0xC2080719E0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/security_windows.go\0", 0xC208071A70, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/so_solaris.go\0", 0xC208071B00, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/sockcmsg_linux.go\0", 0xC208071B90, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/sockcmsg_unix.go\0", 0xC208071C20, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/srpc_nacl.go\0", 0xC208071CB0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/str.go\0", 0xC208071D40, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall.go\0", 0xC208071DD0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_bsd.go\0", 0xC208071E60, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_bsd_test.go\0", 0xC208071EF0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_darwin.go\0", 0xC2081053B0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_darwin_386.go\0", 0xC208105440, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_darwin_amd64.go\0", 0xC2081054D0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_dragonfly.go\0", 0xC208105560, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_dragonfly_386.go\0", 0xC2081055F0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_dragonfly_amd64.go\0", 0xC208105680, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_freebsd.go\0", 0xC208105710, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_freebsd_386.go\0", 0xC2081057A0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_freebsd_amd64.go\0", 0xC208105830, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_freebsd_arm.go\0", 0xC2081058C0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_linux.go\0", 0xC208105950, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_linux_386.go\0", 0xC2081059E0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_linux_amd64.go\0", 0xC208105A70, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_linux_arm.go\0", 0xC208105B00, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_nacl.go\0", 0xC208105B90, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_nacl_386.go\0", 0xC208105C20, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_nacl_amd64p32.go\0", 0xC208105CB0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_nacl_arm.go\0", 0xC208105D40, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_netbsd.go\0", 0xC208105DD0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_netbsd_386.go\0", 0xC208105E60, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_netbsd_amd64.go\0", 0xC208105EF0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_netbsd_arm.go\0", 0xC208062000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_no_getwd.go\0", 0xC208062090, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_openbsd.go\0", 0xC208062120, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_openbsd_386.go\0", 0xC2080621B0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_openbsd_amd64.go\0", 0xC208062240, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_plan9.go\0", 0xC2080622D0, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_solaris.go\0", 0xC208062360, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_solaris_amd64.go\0", 0xC2080623F0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_test.go\0", 0xC208062480, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_unix.go\0", 0xC208062510, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_unix_test.go\0", 0xC2080625A0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_windows.go\0", 0xC208062630, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_windows_386.go\0", 0xC2080626C0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_windows_amd64.go\0", 0xC208062750, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_windows_test.go\0", 0xC2080627E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/tables_nacl.go\0", 0xC208062870, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/time_nacl_386.s\0", 0xC208062900, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/time_nacl_amd64p32.s\0", 0xC208062990, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/time_nacl_arm.s\0", 0xC208062A20, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/types_darwin.go\0", 0xC208062AB0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/types_dragonfly.go\0", 0xC208062B40, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/types_freebsd.go\0", 0xC208062BD0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/types_linux.go\0", 0xC208062C60, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/types_netbsd.go\0", 0xC208062CF0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/types_openbsd.go\0", 0xC208062D80, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/types_plan9.c\0", 0xC208062E10, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/types_solaris.go\0", 0xC208062EA0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/unzip_nacl.go\0", 0xC208062F30, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zerrors_darwin_386.go\0", 0xC208062FC0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zerrors_darwin_amd64.go\0", 0xC208063050, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zerrors_dragonfly_386.go\0", 0xC2080630E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zerrors_dragonfly_amd64.go\0", 0xC208063170, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zerrors_freebsd_386.go\0", 0xC208063200, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zerrors_freebsd_amd64.go\0", 0xC208063290, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zerrors_freebsd_arm.go\0", 0xC208063320, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zerrors_linux_386.go\0", 0xC2080633B0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zerrors_linux_amd64.go\0", 0xC208063440, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zerrors_linux_arm.go\0", 0xC2080634D0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zerrors_netbsd_386.go\0", 0xC208063560, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zerrors_netbsd_amd64.go\0", 0xC2080635F0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zerrors_netbsd_arm.go\0", 0xC208063680, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zerrors_openbsd_386.go\0", 0xC208063710, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zerrors_openbsd_amd64.go\0", 0xC2080637A0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zerrors_plan9_386.go\0", 0xC208063830, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zerrors_plan9_amd64.go\0", 0xC2080638C0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zerrors_solaris_amd64.go\0", 0xC208063950, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zerrors_windows.go\0", 0xC2080639E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zerrors_windows_386.go\0", 0xC208063A70, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zerrors_windows_amd64.go\0", 0xC208063B00, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsyscall_darwin_386.go\0", 0xC208063B90, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsyscall_darwin_amd64.go\0", 0xC208063C20, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsyscall_dragonfly_386.go\0", 0xC208063CB0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsyscall_dragonfly_amd64.go\0", 0xC208063D40, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsyscall_freebsd_386.go\0", 0xC208063DD0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsyscall_freebsd_amd64.go\0", 0xC208063E60, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsyscall_freebsd_arm.go\0", 0xC208063EF0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsyscall_linux_386.go\0", 0xC2080D2000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsyscall_linux_amd64.go\0", 0xC2080D2090, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsyscall_linux_arm.go\0", 0xC2080D2120, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsyscall_nacl_386.go\0", 0xC2080D21B0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsyscall_nacl_amd64p32.go\0", 0xC2080D2240, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsyscall_nacl_arm.go\0", 0xC2080D22D0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsyscall_netbsd_386.go\0", 0xC2080D2360, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsyscall_netbsd_amd64.go\0", 0xC2080D23F0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsyscall_netbsd_arm.go\0", 0xC2080D2480, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsyscall_openbsd_386.go\0", 0xC2080D2510, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsyscall_openbsd_amd64.go\0", 0xC2080D25A0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsyscall_plan9_386.go\0", 0xC2080D2630, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsyscall_plan9_amd64.go\0", 0xC2080D26C0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsyscall_solaris_amd64.go\0", 0xC2080D2750, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsyscall_windows.go\0", 0xC2080D27E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsysctl_openbsd.go\0", 0xC2080D2870, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsysnum_darwin_386.go\0", 0xC2080D2900, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsysnum_darwin_amd64.go\0", 0xC2080D2990, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsysnum_dragonfly_386.go\0", 0xC2080D2A20, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsysnum_dragonfly_amd64.go\0", 0xC2080D2AB0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsysnum_freebsd_386.go\0", 0xC2080D2B40, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsysnum_freebsd_amd64.go\0", 0xC2080D2BD0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsysnum_freebsd_arm.go\0", 0xC2080D2C60, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsysnum_linux_386.go\0", 0xC2080D2CF0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsysnum_linux_amd64.go\0", 0xC2080D2D80, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsysnum_linux_arm.go\0", 0xC2080D2E10, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsysnum_netbsd_386.go\0", 0xC2080D2EA0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsysnum_netbsd_amd64.go\0", 0xC2080D2F30, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsysnum_netbsd_arm.go\0", 0xC2080D2FC0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsysnum_openbsd_386.go\0", 0xC2080D3050, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsysnum_openbsd_amd64.go\0", 0xC2080D30E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsysnum_plan9_386.go\0", 0xC2080D3170, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsysnum_plan9_amd64.go\0", 0xC2080D3200, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsysnum_solaris_amd64.go\0", 0xC2080D3290, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsysnum_windows_386.go\0", 0xC2080D3320, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsysnum_windows_amd64.go\0", 0xC2080D33B0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/ztypes_darwin_386.go\0", 0xC2080D3440, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/ztypes_darwin_amd64.go\0", 0xC2080D34D0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/ztypes_dragonfly_386.go\0", 0xC2080D3560, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/ztypes_dragonfly_amd64.go\0", 0xC2080D35F0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/ztypes_freebsd_386.go\0", 0xC2080D3680, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/ztypes_freebsd_amd64.go\0", 0xC2080D3710, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/ztypes_freebsd_arm.go\0", 0xC2080D37A0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/ztypes_linux_386.go\0", 0xC2080D3830, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/ztypes_linux_amd64.go\0", 0xC2080D38C0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/ztypes_linux_arm.go\0", 0xC2080D3950, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/ztypes_netbsd_386.go\0", 0xC2080D39E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/ztypes_netbsd_amd64.go\0", 0xC2080D3A70, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/ztypes_netbsd_arm.go\0", 0xC2080D3B00, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/ztypes_openbsd_386.go\0", 0xC2080D3B90, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/ztypes_openbsd_amd64.go\0", 0xC2080D3C20, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/ztypes_plan9_386.go\0", 0xC2080D3CB0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/ztypes_plan9_amd64.go\0", 0xC2080D3D40, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/ztypes_solaris_amd64.go\0", 0xC2080D3DD0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/ztypes_windows.go\0", 0xC2080D3E60, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/ztypes_windows_386.go\0", 0xC2080D3EF0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/ztypes_windows_amd64.go\0", 0xC20810A000, 0x1000)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/asm.s\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2014 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include \"textflag.h\"\n\nTEXT \302\267use(SB),NOSPLIT,$0\n\tRET\n\0", 0x1000)		 = 215 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/asm_darwin_amd64.s\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// TODO(rsc): Rewrite all nn(SP) references into name+(nn-8)(FP)\n// so that go vet can check tha", 0x1000)		 = 2218 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/bpf_bsd.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd netbsd openbsd\n\n// Berkeley packet filter for BSD variants\n\n", 0x1000)		 = 3850 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/creds_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build linux\n\npackage syscall_test\n\nimport (\n\t\"bytes\"\n\t\"net\"\n\t\"os\"\n\t\"syscall\"\n\t\"testing\"\n)\n\n", 0x1000)		 = 2925 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/env_unix.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2010 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd linux nacl netbsd openbsd solaris\n\n// Unix environment varia", 0x1000)		 = 2834 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/exec_bsd.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd netbsd openbsd\n\npackage syscall\n\nimport (\n\t\"runtime\"\n\t\"unsafe", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/exec_unix.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd linux netbsd openbsd solaris\n\n// Fork, exec, wait, etc.\n\npack", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/export_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2014 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage syscall\n\nvar Itoa = itoa\nght have been locked at the time of the fork.  This means\n// n", 0x1000)		 = 194 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/flock.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// +build linux darwin freebsd openbsd netbsd dragonfly\n\n// Copyright 2014 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage syscall\n\nimport \"unsafe\"\n\n// fc", 0x1000)		 = 698 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/flock_linux_32bit.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// +build linux,386 linux,arm\n\n// Copyright 2014 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage syscall\n\nfunc init() {\n\t// On 32-bit Linux systems, the f", 0x1000)		 = 367 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/mmap_unix_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2014 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd linux netbsd openbsd\n\npackage syscall_test\n\nimport (\n\t\"syscal", 0x1000)		 = 540 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/race.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build race\n\npackage syscall\n\nimport (\n\t\"runtime\"\n\t\"unsafe\"\n)\n\nconst raceenabled = true\n\nfun", 0x1000)		 = 580 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/race0.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build !race\n\npackage syscall\n\nimport (\n\t\"unsafe\"\n)\n\nconst raceenabled = false\n\nfunc raceAcq", 0x1000)		 = 443 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/route_bsd.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd netbsd openbsd\n\n// Routing sockets and messages\n\npackage sys", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/route_darwin.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Routing sockets and messages for Darwin\n\npackage syscall\n\nimport \"unsafe\"\n\nfunc (any *anyMes", 0x1000)		 = 1880 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/route_freebsd_32bit.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2014 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build freebsd,386 freebsd,arm\n\npackage syscall\n\nimport \"unsafe\"\n\nfunc (any *anyMessage) pars", 0x1000)		 = 869 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/route_freebsd_64bit.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2014 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build freebsd,amd64\n\npackage syscall\n\nimport \"unsafe\"\n\nfunc (any *anyMessage) parseInterface", 0x1000)		 = 423 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/sockcmsg_unix.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd linux netbsd openbsd solaris\n\n// Socket control messages\n\npa", 0x1000)		 = 2962 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/str.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage syscall\n\nfunc itoa(val int) string { // do it here rather than with fmt to avoid depende", 0x1000)		 = 549 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Package syscall contains an interface to the low-level operating system\n// primitives.  The d", 0x1000)		 = 3337 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_bsd.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd netbsd openbsd\n\n// BSD system call wrappers shared by *BSD ba", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_bsd_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2014 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd openbsd\n\npackage syscall_test\n\nimport (\n\t\"syscall\"\n\t\"testing\"", 0x1000)		 = 652 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_darwin.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009,2010 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Darwin system calls.\n// This file is compiled as ordinary Go code,\n// but it is also inp", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_darwin_amd64.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage syscall\n\nimport \"unsafe\"\n\nfunc Getpagesize() int { return 4096 }\n\nfunc TimespecToNsec(ts", 0x1000)		 = 1751 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_no_getwd.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build dragonfly freebsd netbsd openbsd\n\npackage syscall\n\nconst ImplementsGetwd = false\n\nfunc", 0x1000)		 = 304 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage syscall_test\n\nimport (\n\t\"fmt\"\n\t\"syscall\"\n\t\"testing\"\n)\n\nfunc testSetGetenv(t *testing.T, ", 0x1000)		 = 1017 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_unix.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd linux netbsd openbsd solaris\n\npackage syscall\n\nimport (\n\t\"run", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/syscall_unix_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd linux netbsd openbsd solaris\n\npackage syscall_test\n\nimport (\n", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/types_darwin.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build ignore\n\n/*\nInput to cgo -godefs.  See also mkerrors.sh and mkall.sh\n*/\n\n// +godefs map", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zerrors_darwin_amd64.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// mkerrors.sh -m64\n// MACHINE GENERATED BY THE COMMAND ABOVE; DO NOT EDIT\n\n// Created by cgo -godefs - DO NOT EDIT\n// cgo -godefs -- -m64 _const.go\n\npackage syscall\n\nconst (\n\tAF_APPLETALK                      = 0x10\n\tAF_CCITT                          = 0x", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsyscall_darwin_amd64.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// mksyscall.pl syscall_bsd.go syscall_darwin.go syscall_darwin_amd64.go\n// MACHINE GENERATED BY THE COMMAND ABOVE; DO NOT EDIT\n\npackage syscall\n\nimport \"unsafe\"\n\n// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n\nfunc getgroups(ngid int, gi", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/zsysnum_darwin_amd64.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// mksysnum_darwin.pl /usr/include/sys/syscall.h\n// MACHINE GENERATED BY THE ABOVE COMMAND; DO NOT EDIT\n\npackage syscall\n\nconst (\n\tSYS_SYSCALL                        = 0\n\tSYS_EXIT                           = 1\n\tSYS_FORK                           = 2\n\tSYS_R", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/syscall/ztypes_darwin_amd64.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Created by cgo -godefs - DO NOT EDIT\n// cgo -godefs types_darwin.go\n\npackage syscall\n\nconst (\n\tsizeofPtr      = 0x8\n\tsizeofShort    = 0x2\n\tsizeofInt      = 0x4\n\tsizeofLong     = 0x8\n\tsizeofLongLong = 0x8\n)\n\ntype (\n\t_C_short     int16\n\t_C_int       int32", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/src/time\0", 0xC208118000, 0x1000)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/time\0", 0x1000000, 0x0)		 = 3 0
getdirentries64(0x3, 0xC20812F000, 0x1000)		 = 1080 0
getdirentries64(0x3, 0xC20812F000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/time/example_test.go\0", 0xC208118090, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/time/export_test.go\0", 0xC208118120, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/time/export_windows_test.go\0", 0xC2081198C0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/time/format.go\0", 0xC208119950, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/time/format_test.go\0", 0xC2081199E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/time/genzabbrs.go\0", 0xC208119A70, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/time/internal_test.go\0", 0xC208119B00, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/time/sleep.go\0", 0xC208119B90, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/time/sleep_test.go\0", 0xC208119C20, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/time/sys_plan9.go\0", 0xC208119CB0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/time/sys_unix.go\0", 0xC208119D40, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/time/sys_windows.go\0", 0xC208119DD0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/time/tick.go\0", 0xC208119E60, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/time/tick_test.go\0", 0xC208119EF0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/time/time.go\0", 0xC208104000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/time/time_test.go\0", 0xC208104090, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/time/zoneinfo.go\0", 0xC208104120, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/time/zoneinfo_abbrs_windows.go\0", 0xC2081041B0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/time/zoneinfo_plan9.go\0", 0xC208104240, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/time/zoneinfo_read.go\0", 0xC2081042D0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/time/zoneinfo_test.go\0", 0xC208104360, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/time/zoneinfo_unix.go\0", 0xC2081043F0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/time/zoneinfo_windows.go\0", 0xC208104480, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/time/zoneinfo_windows_test.go\0", 0xC208104510, 0x1000)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/time/example_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage time_test\n\nimport (\n\t\"fmt\"\n\t\"time\"\n)\n\nfunc expensiveCall() {}\n\nfunc ExampleDuration() {", 0x1000)		 = 3900 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/time/export_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage time\n\nimport (\n\t\"sync\"\n)\n\nfunc ResetLocalOnceForTest() {\n\tlocalOnce = sync.Once{}\n\tlocal", 0x1000)		 = 466 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/time/format.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2010 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage time\n\nimport \"errors\"\n\n// These are predefined layouts for use in Time.Format and Time.P", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/time/format_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage time_test\n\nimport (\n\t\"fmt\"\n\t\"strconv\"\n\t\"strings\"\n\t\"testing\"\n\t\"testing/quick\"\n\t. \"time\"\n)", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/time/genzabbrs.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build ignore\n\n//\n// usage:\n//\n// go run genzabbrs.go -output zoneinfo_abbrs_windows.go\n//\n\np", 0x1000)		 = 3111 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/time/internal_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage time\n\nfunc init() {\n\t// force US/Pacific for time zone tests\n\tForceUSPacificForTesting()", 0x1000)		 = 1922 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/time/sleep.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage time\n\n// Sleep pauses the current goroutine for at least the duration d.\n// A negative o", 0x1000)		 = 3473 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/time/sleep_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage time_test\n\nimport (\n\t\"errors\"\n\t\"fmt\"\n\t\"runtime\"\n\t\"sort\"\n\t\"strings\"\n\t\"sync\"\n\t\"sync/atomic", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/time/sys_unix.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd linux nacl netbsd openbsd solaris\n\npackage time\n\nimport (\n\t\"e", 0x1000)		 = 1510 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/time/tick.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage time\n\nimport \"errors\"\n\n// A Ticker holds a channel that delivers `ticks' of a clock\n// a", 0x1000)		 = 1614 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/time/tick_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage time_test\n\nimport (\n\t\"testing\"\n\t. \"time\"\n)\n\nfunc TestTicker(t *testing.T) {\n\tconst Count", 0x1000)		 = 1698 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/time/time.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Package time provides functionality for measuring and displaying time.\n//\n// The calendrical ", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/time/time_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage time_test\n\nimport (\n\t\"bytes\"\n\t\"encoding/gob\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"math/big\"\n\t\"math/", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/time/zoneinfo.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage time\n\nimport (\n\t\"sync\"\n\t\"syscall\"\n)\n\n// A Location maps time instants to the zone in use", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/time/zoneinfo_read.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Parse \"zoneinfo\" time zone file.\n// This is a fairly standard file format used on OS X, Linux", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/time/zoneinfo_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2014 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage time_test\n\nimport (\n\t\"testing\"\n\t\"time\"\n)\n\nfunc TestVersion3(t *testing.T) {\n\ttime.ForceZ", 0x1000)		 = 1523 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/time/zoneinfo_unix.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd linux nacl netbsd openbsd solaris\n\n// Parse \"zoneinfo\" time z", 0x1000)		 = 2031 0
close(0x3)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/src/reflect\0", 0xC2081054D0, 0x1000)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/reflect\0", 0x1000000, 0x0)		 = 3 0
getdirentries64(0x3, 0xC208088000, 0x1000)		 = 568 0
getdirentries64(0x3, 0xC208088000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/reflect/all_test.go\0", 0xC208105560, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/reflect/asm_386.s\0", 0xC2081055F0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/reflect/asm_amd64.s\0", 0xC208105680, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/reflect/asm_amd64p32.s\0", 0xC208105710, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/reflect/asm_arm.s\0", 0xC2081057A0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/reflect/deepequal.go\0", 0xC208105830, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/reflect/example_test.go\0", 0xC2081058C0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/reflect/export_test.go\0", 0xC208105950, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/reflect/makefunc.go\0", 0xC2081059E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/reflect/set_test.go\0", 0xC208105A70, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/reflect/tostring_test.go\0", 0xC208105B00, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/reflect/type.go\0", 0xC208105B90, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/reflect/value.go\0", 0xC208105C20, 0x1000)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/reflect/all_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage reflect_test\n\nimport (\n\t\"bytes\"\n\t\"encoding/base64\"\n\t\"flag\"\n\t\"fmt\"\n\t\"io\"\n\t\"math/rand\"\n\t\"o", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/reflect/asm_amd64.s\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include \"textflag.h\"\n#include \"funcdata.h\"\n\n// makeFuncStub is the code half of the function r", 0x1000)		 = 978 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/reflect/deepequal.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Deep equality test via reflection\n\npackage reflect\n\n// During deepValueEqual, must keep track", 0x1000)		 = 3567 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/reflect/example_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage reflect_test\n\nimport (\n\t\"fmt\"\n\t\"reflect\"\n)\n\nfunc ExampleMakeFunc() {\n\t// swap is the im", 0x1000)		 = 1785 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/reflect/export_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage reflect\n\n// MakeRO returns a copy of v with the read-only flag set.\nfunc MakeRO(v Value", 0x1000)		 = 935 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/reflect/makefunc.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// MakeFunc implementation.\n\npackage reflect\n\nimport (\n\t\"unsafe\"\n)\n\n// makeFuncImpl is the clos", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/reflect/set_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage reflect_test\n\nimport (\n\t\"bytes\"\n\t\"go/ast\"\n\t\"io\"\n\t. \"reflect\"\n\t\"testing\"\n\t\"unsafe\"\n)\n\nty", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/reflect/tostring_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Formatting of reflection types and values for debugging.\n// Not defined as methods so they do", 0x1000)		 = 2191 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/reflect/type.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Package reflect implements run-time reflection, allowing a program to\n// manipulate objects w", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/reflect/value.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage reflect\n\nimport (\n\t\"math\"\n\t\"runtime\"\n\t\"unsafe\"\n)\n\nconst ptrSize = unsafe.Sizeof((*byte)(", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/src/strconv\0", 0xC208105D40, 0x1000)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/strconv\0", 0x1000000, 0x0)		 = 3 0
getdirentries64(0x3, 0xC208114000, 0x1000)		 = 904 0
getdirentries64(0x3, 0xC208114000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/atob.go\0", 0xC208105DD0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/atob_test.go\0", 0xC208105E60, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/atof.go\0", 0xC208105EF0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/atof_test.go\0", 0xC208104630, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/atoi.go\0", 0xC2081046C0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/atoi_test.go\0", 0xC208104750, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/decimal.go\0", 0xC2081047E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/decimal_test.go\0", 0xC208104870, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/extfloat.go\0", 0xC208104900, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/fp_test.go\0", 0xC208104990, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/ftoa.go\0", 0xC208104A20, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/ftoa_test.go\0", 0xC208104AB0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/internal_test.go\0", 0xC208104B40, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/isprint.go\0", 0xC208104BD0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/itoa.go\0", 0xC208104C60, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/itoa_test.go\0", 0xC208104CF0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/makeisprint.go\0", 0xC208104D80, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/quote.go\0", 0xC208104E10, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/quote_example_test.go\0", 0xC208104EA0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/quote_test.go\0", 0xC208104F30, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/strconv_test.go\0", 0xC208104FC0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/testdata\0", 0xC208105050, 0x1000)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/atob.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage strconv\n\n// ParseBool returns the boolean value represented by the string.\n// It accepts", 0x1000)		 = 983 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/atob_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage strconv_test\n\nimport (\n\t\"bytes\"\n\t. \"strconv\"\n\t\"testing\"\n)\n\ntype atobTest struct {\n\tin  s", 0x1000)		 = 1931 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/atof.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Package strconv implements conversions to and from string representations\n// of basic data ty", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/atof_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage strconv_test\n\nimport (\n\t\"math\"\n\t\"math/rand\"\n\t\"reflect\"\n\t. \"strconv\"\n\t\"strings\"\n\t\"testing", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/atoi.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage strconv\n\nimport \"errors\"\n\n// ErrRange indicates that a value is out of range for the tar", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/atoi_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage strconv_test\n\nimport (\n\t\"errors\"\n\t\"reflect\"\n\t. \"strconv\"\n\t\"testing\"\n)\n\ntype atoui64Test ", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/decimal.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Multiprecision decimal numbers.\n// For floating-point formatting only; not general purpose.\n/", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/decimal_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage strconv_test\n\nimport (\n\t. \"strconv\"\n\t\"testing\"\n)\n\ntype shiftTest struct {\n\ti     uint64\n", 0x1000)		 = 3087 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/extfloat.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage strconv\n\n// An extFloat represents an extended floating-point number, with more\n// preci", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/fp_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage strconv_test\n\nimport (\n\t\"bufio\"\n\t\"fmt\"\n\t\"os\"\n\t\"strconv\"\n\t\"strings\"\n\t\"testing\"\n)\n\nfunc po", 0x1000)		 = 2984 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/ftoa.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Binary to decimal floating point conversion.\n// Algorithm:\n//   1) store mantissa in multipre", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/ftoa_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage strconv_test\n\nimport (\n\t\"math\"\n\t\"math/rand\"\n\t. \"strconv\"\n\t\"testing\"\n)\n\ntype ftoaTest str", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/internal_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// export access to strconv internals for tests\n\npackage strconv\n\nfunc NewDecimal(i uint64) *dec", 0x1000)		 = 385 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/isprint.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// DO NOT EDIT.  GENERATED BY\n//     go run makeisprint.go -output isprint.go\n\npackage strconv\n\n", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/itoa.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage strconv\n\n// FormatUint returns the string representation of i in the given base,\n// for ", 0x1000)		 = 3290 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/itoa_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage strconv_test\n\nimport (\n\t. \"strconv\"\n\t\"testing\"\n)\n\ntype itob64Test struct {\n\tin   int64\n\t", 0x1000)		 = 3924 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/makeisprint.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build ignore\n\n//\n// usage:\n//\n// go run makeisprint.go -output isprint.go\n//\n\npackage main\n", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/quote.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n//go:generate go run makeisprint.go -output isprint.go\n\npackage strconv\n\nimport (\n\t\"unicode/utf8", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/quote_example_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage strconv_test\n\nimport (\n\t\"fmt\"\n\t\"strconv\"\n)\n\nfunc ExampleUnquote() {\n\ttest := func(s stri", 0x1000)		 = 755 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/quote_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage strconv_test\n\nimport (\n\t. \"strconv\"\n\t\"testing\"\n\t\"unicode\"\n)\n\n// Verify that our isPrint ", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/strconv/strconv_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage strconv_test\n\nimport (\n\t\"runtime\"\n\t. \"strconv\"\n\t\"strings\"\n\t\"testing\"\n)\n\nvar (\n\tglobalBuf", 0x1000)		 = 1768 0
close(0x3)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/src/unicode/utf8\0", 0xC208105200, 0x1000)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/unicode/utf8\0", 0x1000000, 0x0)		 = 3 0
getdirentries64(0x3, 0xC208155000, 0x1000)		 = 160 0
getdirentries64(0x3, 0xC208155000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/unicode/utf8/example_test.go\0", 0xC208105290, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/unicode/utf8/utf8.go\0", 0xC208105320, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/unicode/utf8/utf8_test.go\0", 0xC208070000, 0x1000)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/unicode/utf8/example_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage utf8_test\n\nimport (\n\t\"fmt\"\n\t\"unicode/utf8\"\n)\n\nfunc ExampleDecodeLastRune() {\n\tb := []byt", 0x1000)		 = 3060 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/unicode/utf8/utf8.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Package utf8 implements functions and constants to support text encoded in\n// UTF-8. It inclu", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/unicode/utf8/utf8_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage utf8_test\n\nimport (\n\t\"bytes\"\n\t\"testing\"\n\t\"unicode\"\n\t. \"unicode/utf8\"\n)\n\n// Validate the ", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/src/sort\0", 0xC208070BD0, 0x1000)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/sort\0", 0x1000000, 0x0)		 = 3 0
getdirentries64(0x3, 0xC208127000, 0x1000)		 = 480 0
getdirentries64(0x3, 0xC208127000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sort/example_interface_test.go\0", 0xC208070C60, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sort/example_keys_test.go\0", 0xC208070CF0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sort/example_multi_test.go\0", 0xC208070D80, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sort/example_test.go\0", 0xC208070E10, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sort/example_wrapper_test.go\0", 0xC208070EA0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sort/export_test.go\0", 0xC208070F30, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sort/search.go\0", 0xC208070FC0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sort/search_test.go\0", 0xC208071050, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sort/sort.go\0", 0xC2080710E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/sort/sort_test.go\0", 0xC208071170, 0x1000)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/sort/example_interface_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage sort_test\n\nimport (\n\t\"fmt\"\n\t\"sort\"\n)\n\ntype Person struct {\n\tName string\n\tAge  int\n}\n\nfun", 0x1000)		 = 896 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/sort/example_keys_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage sort_test\n\nimport (\n\t\"fmt\"\n\t\"sort\"\n)\n\n// A couple of type definitions to make the units ", 0x1000)		 = 2745 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/sort/example_multi_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage sort_test\n\nimport (\n\t\"fmt\"\n\t\"sort\"\n)\n\n// A Change is a record of source code changes, re", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/sort/example_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage sort_test\n\nimport (\n\t\"fmt\"\n\t\"sort\"\n)\n\nfunc ExampleInts() {\n\ts := []int{5, 2, 6, 3, 1, 4}", 0x1000)		 = 481 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/sort/example_wrapper_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage sort_test\n\nimport (\n\t\"fmt\"\n\t\"sort\"\n)\n\ntype Grams int\n\nfunc (g Grams) String() string { r", 0x1000)		 = 1672 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/sort/export_test.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage sort\n\nfunc Heapsort(data Interface) {\n\theapSort(data, 0, data.Len())\n}\n\0", 0x1000)		 = 239 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/sort/search.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2010 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// This file implements binary search.\n\npackage sort\n\n// Search uses binary search to find and r", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/sort/search_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2010 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage sort_test\n\nimport (\n\t\"runtime\"\n\t. \"sort\"\n\t\"testing\"\n)\n\nfunc f(a []int, x int) func(int) ", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/sort/sort.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Package sort provides primitives for sorting slices and user-defined\n// collections.\npackage ", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/sort/sort_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage sort_test\n\nimport (\n\t\"fmt\"\n\t\"math\"\n\t\"math/rand\"\n\t. \"sort\"\n\t\"strconv\"\n\t\"testing\"\n)\n\nvar i", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/src/io/ioutil\0", 0xC208070000, 0x1000)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/io/ioutil\0", 0x1000000, 0x0)		 = 3 0
getdirentries64(0x3, 0xC208132000, 0x1000)		 = 216 0
getdirentries64(0x3, 0xC208132000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/io/ioutil/ioutil.go\0", 0xC208070BD0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/io/ioutil/ioutil_test.go\0", 0xC208071200, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/io/ioutil/tempfile.go\0", 0xC208071290, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/io/ioutil/tempfile_test.go\0", 0xC208071320, 0x1000)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/io/ioutil/ioutil.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Package ioutil implements some I/O utility functions.\npackage ioutil\n\nimport (\n\t\"bytes\"\n\t\"io\"", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/io/ioutil/ioutil_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage ioutil\n\nimport (\n\t\"os\"\n\t\"testing\"\n)\n\nfunc checkSize(t *testing.T, path string, size int6", 0x1000)		 = 2260 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/io/ioutil/tempfile.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2010 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage ioutil\n\nimport (\n\t\"os\"\n\t\"path/filepath\"\n\t\"strconv\"\n\t\"sync\"\n\t\"time\"\n)\n\n// Random number ", 0x1000)		 = 2486 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/io/ioutil/tempfile_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2010 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage ioutil\n\nimport (\n\t\"os\"\n\t\"path/filepath\"\n\t\"regexp\"\n\t\"testing\"\n)\n\nfunc TestTempFile(t *tes", 0x1000)		 = 1413 0
close(0x3)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/src/bytes\0", 0xC2080713B0, 0x1000)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/bytes\0", 0x1000000, 0x0)		 = 3 0
getdirentries64(0x3, 0xC20810F000, 0x1000)		 = 488 0
getdirentries64(0x3, 0xC20810F000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/bytes/buffer.go\0", 0xC208071440, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/bytes/buffer_test.go\0", 0xC2080714D0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/bytes/bytes.go\0", 0xC208071560, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/bytes/bytes_decl.go\0", 0xC2080715F0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/bytes/bytes_test.go\0", 0xC208071680, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/bytes/compare_test.go\0", 0xC208071710, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/bytes/equal_test.go\0", 0xC2080717A0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/bytes/example_test.go\0", 0xC208071830, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/bytes/export_test.go\0", 0xC2080718C0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/bytes/reader.go\0", 0xC208071950, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/bytes/reader_test.go\0", 0xC2080719E0, 0x1000)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/bytes/buffer.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage bytes\n\n// Simple byte buffer for marshaling data.\n\nimport (\n\t\"errors\"\n\t\"io\"\n\t\"unicode/ut", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/bytes/buffer_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage bytes_test\n\nimport (\n\t. \"bytes\"\n\t\"io\"\n\t\"math/rand\"\n\t\"runtime\"\n\t\"testing\"\n\t\"unicode/utf8\"", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/bytes/bytes.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Package bytes implements functions for the manipulation of byte slices.\n// It is analogous to", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/bytes/bytes_decl.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2010 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage bytes\n\n//go:noescape\n\n// IndexByte returns the index of the first instance of c in s, o", 0x1000)		 = 875 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/bytes/bytes_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage bytes_test\n\nimport (\n\t. \"bytes\"\n\t\"math/rand\"\n\t\"reflect\"\n\t\"testing\"\n\t\"unicode\"\n\t\"unicode/", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/bytes/compare_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage bytes_test\n\nimport (\n\t. \"bytes\"\n\t\"testing\"\n)\n\nvar compareTests = []struct {\n\ta, b []byte", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/bytes/equal_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n//\n// +build linux\n\npackage bytes_test\n\nimport (\n\t. \"bytes\"\n\t\"syscall\"\n\t\"testing\"\n\t\"unsafe\"\n)\n\n//", 0x1000)		 = 1334 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/bytes/example_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage bytes_test\n\nimport (\n\t\"bytes\"\n\t\"encoding/base64\"\n\t\"fmt\"\n\t\"io\"\n\t\"os\"\n\t\"sort\"\n)\n\nfunc Exam", 0x1000)		 = 1983 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/bytes/export_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage bytes\n\n// Export func for testing\nvar IndexBytePortable = indexBytePortable\nvar EqualPor", 0x1000)		 = 329 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/bytes/reader.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage bytes\n\nimport (\n\t\"errors\"\n\t\"io\"\n\t\"unicode/utf8\"\n)\n\n// A Reader implements the io.Reader,", 0x1000)		 = 3039 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/bytes/reader_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage bytes_test\n\nimport (\n\t. \"bytes\"\n\t\"fmt\"\n\t\"io\"\n\t\"io/ioutil\"\n\t\"os\"\n\t\"sync\"\n\t\"testing\"\n)\n\nfu", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/src/unicode\0", 0xC208071B90, 0x1000)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/unicode\0", 0x1000000, 0x0)		 = 3 0
getdirentries64(0x3, 0xC2080E7000, 0x1000)		 = 512 0
getdirentries64(0x3, 0xC2080E7000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/unicode/casetables.go\0", 0xC208071C20, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/unicode/digit.go\0", 0xC208071CB0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/unicode/digit_test.go\0", 0xC208071D40, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/unicode/graphic.go\0", 0xC208071DD0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/unicode/graphic_test.go\0", 0xC208071E60, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/unicode/letter.go\0", 0xC208071EF0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/unicode/letter_test.go\0", 0xC208070120, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/unicode/maketables.go\0", 0xC2080701B0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/unicode/script_test.go\0", 0xC208070240, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/unicode/tables.go\0", 0xC2080702D0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/unicode/utf16\0", 0xC208070360, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/unicode/utf8\0", 0xC2080703F0, 0x1000)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/unicode/casetables.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// TODO: This file contains the special casing rules for Turkish and Azeri only.\n// It should en", 0x1000)		 = 755 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/unicode/digit.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage unicode\n\n// IsDigit reports whether the rune is a decimal digit.\nfunc IsDigit(r rune) bo", 0x1000)		 = 352 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/unicode/digit_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage unicode_test\n\nimport (\n\t\"testing\"\n\t. \"unicode\"\n)\n\nvar testDigit = []rune{\n\t0x0030,\n\t0x00", 0x1000)		 = 1576 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/unicode/graphic.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage unicode\n\n// Bit masks for each code point under U+0100, for fast lookup.\nconst (\n\tpC    ", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/unicode/graphic_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage unicode_test\n\nimport (\n\t\"testing\"\n\t. \"unicode\"\n)\n\n// Independently check that the specia", 0x1000)		 = 2616 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/unicode/letter.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Package unicode provides data and functions to test some properties of\n// Unicode code points", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/unicode/letter_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage unicode_test\n\nimport (\n\t\"flag\"\n\t\"fmt\"\n\t\"runtime\"\n\t\"sort\"\n\t\"testing\"\n\t. \"unicode\"\n)\n\nvar ", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/unicode/maketables.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build ignore\n\n// Unicode table generator.\n// Data read from the web.\n\npackage main\n\nimport (", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/unicode/script_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage unicode_test\n\nimport (\n\t\"testing\"\n\t. \"unicode\"\n)\n\ntype T struct {\n\trune   rune\n\tscript s", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/unicode/tables.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Generated by running\n//\tmaketables --tables=all --data=http://www.unicode.org/Public/7.0.0/uc", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/src/path/filepath\0", 0xC208070480, 0x1000)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/path/filepath\0", 0x1000000, 0x0)		 = 3 0
getdirentries64(0x3, 0xC208155000, 0x1000)		 = 584 0
getdirentries64(0x3, 0xC208155000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/path/filepath/example_unix_test.go\0", 0xC2080705A0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/path/filepath/export_test.go\0", 0xC208070630, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/path/filepath/match.go\0", 0xC2080706C0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/path/filepath/match_test.go\0", 0xC208070750, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/path/filepath/path.go\0", 0xC2080707E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/path/filepath/path_plan9.go\0", 0xC208070870, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/path/filepath/path_test.go\0", 0xC208070900, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/path/filepath/path_unix.go\0", 0xC208070990, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/path/filepath/path_windows.go\0", 0xC208070AB0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/path/filepath/path_windows_test.go\0", 0xC208104000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/path/filepath/symlink.go\0", 0xC208104090, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/path/filepath/symlink_unix.go\0", 0xC208104120, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/path/filepath/symlink_windows.go\0", 0xC2081041B0, 0x1000)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/path/filepath/example_unix_test.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build !windows,!plan9\n\npackage filepath_test\n\nimport (\n\t\"fmt\"\n\t\"path/filepath\"\n)\n\nfunc Examp", 0x1000)		 = 737 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/path/filepath/export_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage filepath\n\nvar LstatP = &lstat\n\0", 0x1000)		 = 198 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/path/filepath/match.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2010 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage filepath\n\nimport (\n\t\"errors\"\n\t\"os\"\n\t\"runtime\"\n\t\"sort\"\n\t\"strings\"\n\t\"unicode/utf8\"\n)\n\n// E", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/path/filepath/match_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage filepath_test\n\nimport (\n\t\"io/ioutil\"\n\t\"os\"\n\t. \"path/filepath\"\n\t\"runtime\"\n\t\"strings\"\n\t\"te", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/path/filepath/path.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Package filepath implements utility routines for manipulating filename paths\n// in a way comp", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/path/filepath/path_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage filepath_test\n\nimport (\n\t\"errors\"\n\t\"io/ioutil\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"reflect\"\n\t\"runti", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/path/filepath/path_unix.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2010 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd linux nacl netbsd openbsd solaris\n\npackage filepath\n\nimport \"", 0x1000)		 = 883 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/path/filepath/symlink.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage filepath\n\nimport (\n\t\"bytes\"\n\t\"errors\"\n\t\"os\"\n)\n\nconst utf8RuneSelf = 0x80\n\nfunc walkSymli", 0x1000)		 = 1501 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/path/filepath/symlink_unix.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// +build !windows\n\npackage filepath\n\nfunc evalSymlinks(path string) (string, error) {\n\treturn walkSymlinks(path)\n}\n\0", 0x1000)		 = 116 0
close(0x3)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/src/strings\0", 0xC208104360, 0x1000)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/strings\0", 0x1000000, 0x0)		 = 3 0
getdirentries64(0x3, 0xC208147000, 0x1000)		 = 528 0
getdirentries64(0x3, 0xC208147000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/strings/example_test.go\0", 0xC2081043F0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/strings/export_test.go\0", 0xC208104480, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/strings/reader.go\0", 0xC208104510, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/strings/reader_test.go\0", 0xC2081045A0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/strings/replace.go\0", 0xC208104630, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/strings/replace_test.go\0", 0xC2081046C0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/strings/search.go\0", 0xC208104750, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/strings/search_test.go\0", 0xC2081047E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/strings/strings.go\0", 0xC208104870, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/strings/strings.s\0", 0xC208104900, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/strings/strings_decl.go\0", 0xC208104990, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/strings/strings_test.go\0", 0xC208104A20, 0x1000)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/strings/example_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage strings_test\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"unicode\"\n)\n\nfunc ExampleFields() {\n\tfmt.Print", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/strings/export_test.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage strings\n\nfunc (r *Replacer) Replacer() interface{} {\n\treturn r.r\n}\n\nfunc (r *Replacer) P", 0x1000)		 = 1056 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/strings/reader.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage strings\n\nimport (\n\t\"errors\"\n\t\"io\"\n\t\"unicode/utf8\"\n)\n\n// A Reader implements the io.Reade", 0x1000)		 = 3087 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/strings/reader_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage strings_test\n\nimport (\n\t\"bytes\"\n\t\"fmt\"\n\t\"io\"\n\t\"os\"\n\t\"strings\"\n\t\"sync\"\n\t\"testing\"\n)\n\nfunc", 0x1000)		 = 3885 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/strings/replace.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage strings\n\nimport \"io\"\n\n// Replacer replaces a list of strings with replacements.\n// It is", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/strings/replace_test.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage strings_test\n\nimport (\n\t\"bytes\"\n\t\"fmt\"\n\t. \"strings\"\n\t\"testing\"\n)\n\nvar htmlEscaper = NewR", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/strings/search.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage strings\n\n// stringFinder efficiently finds strings in a source text. It's implemented\n//", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/strings/search_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage strings_test\n\nimport (\n\t\"reflect\"\n\t. \"strings\"\n\t\"testing\"\n)\n\nfunc TestFinderNext(t *test", 0x1000)		 = 1924 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/strings/strings.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Package strings implements simple functions to manipulate strings.\npackage strings\n\nimport (\n", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/strings/strings.s\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// This file is here just to make the go tool happy.\n i++ {\n\t\th = h*primeRK + uint32(s[i])\n\t}\n\tl", 0x1000)		 = 213 0
read(0x3, "n IndexAny(s, chars) >= 0\n}\n\n// ContainsRune returns true if the Unicode code point r is within s.\nfunc ContainsRune(s string, r rune) bool {\n\treturn IndexRune(s, r) >= 0\n}\n\n// Index returns the index of the first instance of sep in s, or -1 if sep is not ", 0x1000)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/strings/strings_decl.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2013 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage strings\n\n// IndexByte returns the index of the first instance of c in s, or -1 if c is ", 0x1000)		 = 339 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/strings/strings_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage strings_test\n\nimport (\n\t\"bytes\"\n\t\"io\"\n\t\"math/rand\"\n\t\"reflect\"\n\t. \"strings\"\n\t\"testing\"\n\t\"", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/src/log\0", 0xC208104090, 0x1000)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/log\0", 0x1000000, 0x0)		 = 3 0
getdirentries64(0x3, 0xC208132000, 0x1000)		 = 192 0
getdirentries64(0x3, 0xC208132000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/log/example_test.go\0", 0xC208104120, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/log/log.go\0", 0xC2081041B0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/log/log_test.go\0", 0xC208104240, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/log/syslog\0", 0xC208104360, 0x1000)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/log/example_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage log_test\n\nimport (\n\t\"bytes\"\n\t\"fmt\"\n\t\"log\"\n)\n\nfunc ExampleLogger() {\n\tvar buf bytes.Buffe", 0x1000)		 = 426 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/log/log.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Package log implements a simple logging package. It defines a type, Logger,\n// with methods f", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/log/log_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage log\n\n// These tests are too simple.\n\nimport (\n\t\"bytes\"\n\t\"os\"\n\t\"regexp\"\n\t\"testing\"\n)\n\ncon", 0x1000)		 = 3497 0
close(0x3)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/src/net\0", 0xC208104AB0, 0x1000)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
getdirentries64(0x3, 0xC20810E000, 0x1000)		 = 4056 0
getdirentries64(0x3, 0xC20810E000, 0x1000)		 = 2288 0
getdirentries64(0x3, 0xC20810E000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/cgo_android.go\0", 0xC208104B40, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/cgo_bsd.go\0", 0xC208104BD0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/cgo_linux.go\0", 0xC208104C60, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/cgo_netbsd.go\0", 0xC208104CF0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/cgo_openbsd.go\0", 0xC208104D80, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/cgo_stub.go\0", 0xC208104E10, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/cgo_unix.go\0", 0xC208104EA0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/cgo_unix_test.go\0", 0xC208104F30, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/conn_test.go\0", 0xC208104FC0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/dial.go\0", 0xC208105050, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/dial_gen.go\0", 0xC2081050E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/dial_gen_test.go\0", 0xC208105170, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/dial_test.go\0", 0xC208105200, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/dialgoogle_test.go\0", 0xC208105290, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/dnsclient.go\0", 0xC208105320, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/dnsclient_test.go\0", 0xC2081053B0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/dnsclient_unix.go\0", 0xC208105440, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/dnsclient_unix_test.go\0", 0xC2081054D0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/dnsconfig_unix.go\0", 0xC208105560, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/dnsconfig_unix_test.go\0", 0xC2081055F0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/dnsmsg.go\0", 0xC208105680, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/dnsmsg_test.go\0", 0xC208105710, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/dnsname_test.go\0", 0xC2081057A0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/example_test.go\0", 0xC208105830, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/fd_mutex.go\0", 0xC2081058C0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/fd_mutex_test.go\0", 0xC208105950, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/fd_plan9.go\0", 0xC2081059E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/fd_poll_nacl.go\0", 0xC208105A70, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/fd_poll_runtime.go\0", 0xC208105B00, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/fd_unix.go\0", 0xC208105B90, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/fd_unix_test.go\0", 0xC208105C20, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/fd_windows.go\0", 0xC208105D40, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/file_plan9.go\0", 0xC208105DD0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/file_stub.go\0", 0xC208105E60, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/file_test.go\0", 0xC208105EF0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/file_unix.go\0", 0xC208070000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/file_windows.go\0", 0xC208070120, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/hosts.go\0", 0xC2080701B0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/hosts_test.go\0", 0xC208070240, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/http\0", 0xC2080702D0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/interface.go\0", 0xC208070360, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/interface_bsd.go\0", 0xC2080703F0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/interface_bsd_test.go\0", 0xC208070480, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/interface_darwin.go\0", 0xC2080705A0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/interface_dragonfly.go\0", 0xC208070630, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/interface_freebsd.go\0", 0xC2080706C0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/interface_linux.go\0", 0xC208070750, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/interface_linux_test.go\0", 0xC2080707E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/interface_netbsd.go\0", 0xC208070870, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/interface_openbsd.go\0", 0xC208070900, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/interface_stub.go\0", 0xC208070990, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/interface_test.go\0", 0xC208070AB0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/interface_unix_test.go\0", 0xC208070BD0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/interface_windows.go\0", 0xC208070C60, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/ip.go\0", 0xC208070CF0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/ip_test.go\0", 0xC208070D80, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/ipraw_test.go\0", 0xC208070E10, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/iprawsock.go\0", 0xC208070EA0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/iprawsock_plan9.go\0", 0xC208070F30, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/iprawsock_posix.go\0", 0xC208070FC0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/ipsock.go\0", 0xC208071050, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/ipsock_plan9.go\0", 0xC2080710E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/ipsock_posix.go\0", 0xC208071170, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/ipsock_test.go\0", 0xC208071200, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/lookup.go\0", 0xC208071290, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/lookup_plan9.go\0", 0xC208071320, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/lookup_stub.go\0", 0xC2080713B0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/lookup_test.go\0", 0xC208071440, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/lookup_unix.go\0", 0xC2080714D0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/lookup_windows.go\0", 0xC208071560, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/lookup_windows_test.go\0", 0xC2080715F0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/mac.go\0", 0xC208071680, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/mac_test.go\0", 0xC208071710, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/mail\0", 0xC2080717A0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/mockicmp_test.go\0", 0xC208071830, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/mockserver_test.go\0", 0xC2080718C0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/multicast_test.go\0", 0xC208071950, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/net.go\0", 0xC2080719E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/net_test.go\0", 0xC208071A70, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/net_windows_test.go\0", 0xC208071B00, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/netgo_unix_test.go\0", 0xC208071B90, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/packetconn_test.go\0", 0xC208071C20, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/parse.go\0", 0xC208071CB0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/parse_test.go\0", 0xC208071D40, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/pipe.go\0", 0xC208071DD0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/pipe_test.go\0", 0xC208071E60, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/port.go\0", 0xC208071EF0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/port_test.go\0", 0xC2080B2000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/port_unix.go\0", 0xC2080B2090, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/protoconn_test.go\0", 0xC2080B2120, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/race.go\0", 0xC2080B21B0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/race0.go\0", 0xC2080B2240, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/rpc\0", 0xC2080B22D0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/sendfile_dragonfly.go\0", 0xC2080B2360, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/sendfile_freebsd.go\0", 0xC2080B23F0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/sendfile_linux.go\0", 0xC2080B2480, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/sendfile_stub.go\0", 0xC2080B2510, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/sendfile_windows.go\0", 0xC2080B25A0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/server_test.go\0", 0xC2080B2630, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/singleflight.go\0", 0xC2080B26C0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/smtp\0", 0xC2080B2750, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/sock_bsd.go\0", 0xC2080B27E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/sock_cloexec.go\0", 0xC2080B2870, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/sock_linux.go\0", 0xC2080B2900, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/sock_plan9.go\0", 0xC2080B2990, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/sock_posix.go\0", 0xC2080B2A20, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/sock_stub.go\0", 0xC2080B2AB0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/sock_windows.go\0", 0xC2080B2B40, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/sockopt_bsd.go\0", 0xC2080B2BD0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/sockopt_linux.go\0", 0xC2080B2C60, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/sockopt_plan9.go\0", 0xC2080B2CF0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/sockopt_posix.go\0", 0xC2080B2D80, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/sockopt_solaris.go\0", 0xC2080B2E10, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/sockopt_stub.go\0", 0xC2080B2EA0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/sockopt_windows.go\0", 0xC2080B2F30, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/sockoptip_bsd.go\0", 0xC2080B2FC0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/sockoptip_linux.go\0", 0xC2080B3050, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/sockoptip_posix.go\0", 0xC2080B30E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/sockoptip_stub.go\0", 0xC2080B3170, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/sockoptip_windows.go\0", 0xC2080B3200, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/sys_cloexec.go\0", 0xC2080B3290, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/tcp_test.go\0", 0xC2080B3320, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/tcpsock.go\0", 0xC2080B33B0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/tcpsock_plan9.go\0", 0xC2080B3440, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/tcpsock_posix.go\0", 0xC2080B34D0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/tcpsockopt_darwin.go\0", 0xC2080B3560, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/tcpsockopt_dragonfly.go\0", 0xC2080B35F0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/tcpsockopt_openbsd.go\0", 0xC2080B3680, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/tcpsockopt_plan9.go\0", 0xC2080B3710, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/tcpsockopt_posix.go\0", 0xC2080B37A0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/tcpsockopt_stub.go\0", 0xC2080B3830, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/tcpsockopt_unix.go\0", 0xC2080B38C0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/tcpsockopt_windows.go\0", 0xC2080B3950, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/testdata\0", 0xC2080B39E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/textproto\0", 0xC2080B3A70, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/timeout_test.go\0", 0xC2080B3B00, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/udp_test.go\0", 0xC2080B3B90, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/udpsock.go\0", 0xC2080B3C20, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/udpsock_plan9.go\0", 0xC2080B3CB0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/udpsock_posix.go\0", 0xC2080B3D40, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/unicast_posix_test.go\0", 0xC2080B3DD0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/unix_test.go\0", 0xC2080B3E60, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/unixsock.go\0", 0xC2080B3EF0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/unixsock_plan9.go\0", 0xC208114000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/unixsock_posix.go\0", 0xC208114090, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/url\0", 0xC208114120, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/net/z_last_test.go\0", 0xC2081141B0, 0x1000)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/cgo_bsd.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build !netgo\n// +build darwin dragonfly freebsd solaris\n\npackage net\n\n/*\n#include <netdb.h>", 0x1000)		 = 370 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/cgo_stub.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build !cgo netgo\n\n// Stub cgo routines for systems that do not use cgo to do network lookup", 0x1000)		 = 688 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/cgo_unix.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build !netgo\n// +build darwin dragonfly freebsd linux netbsd openbsd\n\npackage net\n\n/*\n#incl", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/cgo_unix_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build cgo,!netgo\n// +build darwin dragonfly freebsd linux netbsd openbsd\n\npackage net\n\nimpor", 0x1000)		 = 578 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/conn_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// This file implements API tests across platforms and will never have a build\n// tag.\n\npackage", 0x1000)		 = 3126 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/dial.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2010 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage net\n\nimport (\n\t\"errors\"\n\t\"time\"\n)\n\n// A Dialer contains options for connecting to an ad", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/dial_gen.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build windows plan9\n\npackage net\n\nimport (\n\t\"time\"\n)\n\nvar testingIssue5349 bool // used dur", 0x1000)		 = 1122 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/dial_gen_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build windows plan9\n\npackage net\n\nfunc init() {\n\ttestingIssue5349 = true\n}\n\0", 0x1000)		 = 240 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/dial_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage net\n\nimport (\n\t\"bytes\"\n\t\"flag\"\n\t\"fmt\"\n\t\"io\"\n\t\"os\"\n\t\"os/exec\"\n\t\"reflect\"\n\t\"regexp\"\n\t\"runt", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/dialgoogle_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage net\n\nimport (\n\t\"flag\"\n\t\"fmt\"\n\t\"io\"\n\t\"strings\"\n\t\"syscall\"\n\t\"testing\"\n)\n\n// If an IPv6 tun", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/dnsclient.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage net\n\nimport (\n\t\"math/rand\"\n\t\"sort\"\n)\n\n// DNSError represents a DNS lookup error.\ntype DN", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/dnsclient_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2014 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage net\n\nimport (\n\t\"math/rand\"\n\t\"testing\"\n)\n\nfunc checkDistribution(t *testing.T, data []*SR", 0x1000)		 = 1574 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/dnsclient_unix.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd linux netbsd openbsd solaris\n\n// DNS client: see RFC 1035.\n//", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/dnsclient_unix_test.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd linux netbsd openbsd solaris\n\npackage net\n\nimport (\n\t\"io\"\n\t\"i", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/dnsconfig_unix.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd linux netbsd openbsd solaris\n\n// Read system DNS config from ", 0x1000)		 = 2535 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/dnsconfig_unix_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd linux netbsd openbsd solaris\n\npackage net\n\nimport (\n\t\"reflect", 0x1000)		 = 1340 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/dnsmsg.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// DNS packet assembly.  See RFC 1035.\n//\n// This is intended to support name resolution during ", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/dnsmsg_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage net\n\nimport (\n\t\"encoding/hex\"\n\t\"reflect\"\n\t\"testing\"\n)\n\nfunc TestDNSParseSRVReply(t *test", 0x1000)		 = 3801 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/dnsname_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage net\n\nimport (\n\t\"strings\"\n\t\"testing\"\n)\n\ntype testCase struct {\n\tname   string\n\tresult boo", 0x1000)		 = 1737 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/example_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage net_test\n\nimport (\n\t\"io\"\n\t\"log\"\n\t\"net\"\n)\n\nfunc ExampleListener() {\n\t// Listen on TCP por", 0x1000)		 = 756 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/fd_mutex.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage net\n\nimport \"sync/atomic\"\n\n// fdMutex is a specialized synchronization primitive\n// that", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/fd_mutex_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage net\n\nimport (\n\t\"math/rand\"\n\t\"runtime\"\n\t\"testing\"\n\t\"time\"\n)\n\nfunc TestMutexLock(t *testin", 0x1000)		 = 3531 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/fd_poll_runtime.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd linux netbsd openbsd windows solaris\n\npackage net\n\nimport (\n\t", 0x1000)		 = 3010 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/fd_unix.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd linux nacl netbsd openbsd solaris\n\npackage net\n\nimport (\n\t\"io", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/fd_unix_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd linux netbsd openbsd solaris\n\npackage net\n\nimport (\n\t\"io\"\n\t\"s", 0x1000)		 = 2109 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/file_stub.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build nacl\n\npackage net\n\nimport (\n\t\"os\"\n\t\"syscall\"\n)\n\n// FileConn returns a copy of the netw", 0x1000)		 = 1166 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/file_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage net\n\nimport (\n\t\"os\"\n\t\"reflect\"\n\t\"runtime\"\n\t\"testing\"\n)\n\ntype listenerFile interface {\n\tL", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/file_unix.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd linux netbsd openbsd solaris\n\npackage net\n\nimport (\n\t\"os\"\n\t\"s", 0x1000)		 = 3459 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/hosts.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Read static host/IP entries from /etc/hosts.\n\npackage net\n\nimport (\n\t\"sync\"\n\t\"time\"\n)\n\nconst ", 0x1000)		 = 1866 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/hosts_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage net\n\nimport (\n\t\"sort\"\n\t\"testing\"\n)\n\ntype hostTest struct {\n\thost string\n\tips  []IP\n}\n\nva", 0x1000)		 = 1756 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/interface.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage net\n\nimport \"errors\"\n\nvar (\n\terrInvalidInterface         = errors.New(\"invalid network ", 0x1000)		 = 3353 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/interface_bsd.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd netbsd openbsd\n\npackage net\n\nimport (\n\t\"os\"\n\t\"syscall\"\n\t\"uns", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/interface_bsd_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd netbsd openbsd\n\npackage net\n\nimport (\n\t\"fmt\"\n\t\"os/exec\"\n)\n\nf", 0x1000)		 = 1305 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/interface_darwin.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage net\n\nimport (\n\t\"os\"\n\t\"syscall\"\n)\n\n// interfaceMulticastAddrTable returns addresses for ", 0x1000)		 = 1811 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/interface_stub.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build nacl plan9 solaris\n\npackage net\n\n// If the ifindex is zero, interfaceTable returns ma", 0x1000)		 = 822 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/interface_test.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage net\n\nimport (\n\t\"reflect\"\n\t\"testing\"\n)\n\n// loopbackInterface returns an available logica", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/interface_unix_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd linux netbsd openbsd\n\npackage net\n\nimport (\n\t\"os\"\n\t\"os/exec\"", 0x1000)		 = 3380 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/ip.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// IP address manipulations\n//\n// IPv4 addresses are 4 bytes; IPv6 addresses are 16 bytes.\n// An", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/ip_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage net\n\nimport (\n\t\"reflect\"\n\t\"runtime\"\n\t\"testing\"\n)\n\nvar parseIPTests = []struct {\n\tin  str", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/ipraw_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage net\n\nimport (\n\t\"bytes\"\n\t\"fmt\"\n\t\"os\"\n\t\"reflect\"\n\t\"runtime\"\n\t\"testing\"\n\t\"time\"\n)\n\ntype re", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/iprawsock.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2010 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage net\n\n// IPAddr represents the address of an IP end point.\ntype IPAddr struct {\n\tIP   IP", 0x1000)		 = 1254 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/iprawsock_posix.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2010 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd linux nacl netbsd openbsd solaris windows\n\npackage net\n\nimpo", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/ipsock.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Internet protocol family sockets\n\npackage net\n\nimport (\n\t\"errors\"\n\t\"time\"\n)\n\nvar (\n\t// suppo", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/ipsock_posix.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd linux nacl netbsd openbsd solaris windows\n\n// Internet proto", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/ipsock_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage net\n\nimport (\n\t\"reflect\"\n\t\"testing\"\n)\n\nvar testInetaddr = func(ip IP) netaddr { return &", 0x1000)		 = 3411 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/lookup.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage net\n\nimport \"time\"\n\n// protocols contains minimal mappings between internet protocol\n//", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/lookup_stub.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build nacl\n\npackage net\n\nimport \"syscall\"\n\nfunc lookupProtocol(name string) (proto int, err", 0x1000)		 = 1161 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/lookup_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// TODO It would be nice to use a mock DNS server, to eliminate\n// external dependencies.\n\npacka", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/lookup_unix.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd linux netbsd openbsd solaris\n\npackage net\n\nimport (\n\t\"errors", 0x1000)		 = 3638 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/mac.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// MAC address manipulations\n\npackage net\n\nimport \"errors\"\n\nconst hexDigit = \"0123456789abcdef\"", 0x1000)		 = 1722 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/mac_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage net\n\nimport (\n\t\"reflect\"\n\t\"strings\"\n\t\"testing\"\n)\n\nvar mactests = []struct {\n\tin  string", 0x1000)		 = 2214 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/mockicmp_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage net\n\nimport \"errors\"\n\nconst (\n\ticmpv4EchoRequest = 8\n\ticmpv4EchoReply   = 0\n\ticmpv6Echo", 0x1000)		 = 2804 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/mockserver_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage net\n\nimport \"sync\"\n\ntype streamListener struct {\n\tnet, addr string\n\tln        Listener\n}", 0x1000)		 = 1687 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/multicast_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage net\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\t\"runtime\"\n\t\"testing\"\n)\n\nvar ipv4MulticastListenerTests = []s", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/net.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n/*\nPackage net provides a portable interface for network I/O, including\nTCP/IP, UDP, domain name", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/net_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage net\n\nimport (\n\t\"io\"\n\t\"io/ioutil\"\n\t\"os\"\n\t\"runtime\"\n\t\"testing\"\n\t\"time\"\n)\n\nfunc TestShutdow", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/netgo_unix_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build !cgo netgo\n// +build darwin dragonfly freebsd linux netbsd openbsd solaris\n\npackage ne", 0x1000)		 = 580 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/packetconn_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// This file implements API tests across platforms and will never have a build\n// tag.\n\npackage", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/parse.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Simple file i/o and string manipulation, to avoid\n// depending on strconv and bufio and strin", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/parse_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage net\n\nimport (\n\t\"bufio\"\n\t\"os\"\n\t\"runtime\"\n\t\"testing\"\n)\n\nfunc TestReadLine(t *testing.T) {\n", 0x1000)		 = 1119 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/pipe.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2010 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage net\n\nimport (\n\t\"errors\"\n\t\"io\"\n\t\"time\"\n)\n\n// Pipe creates a synchronous, in-memory, full", 0x1000)		 = 1338 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/pipe_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2010 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage net\n\nimport (\n\t\"bytes\"\n\t\"io\"\n\t\"testing\"\n)\n\nfunc checkWrite(t *testing.T, w io.Writer, d", 0x1000)		 = 1324 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/port.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Network service port manipulations\n\npackage net\n\n// parsePort parses port as a network servi", 0x1000)		 = 581 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/port_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage net\n\nimport (\n\t\"runtime\"\n\t\"testing\"\n)\n\ntype portTest struct {\n\tnetw string\n\tname string\n", 0x1000)		 = 1347 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/port_unix.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd linux netbsd openbsd solaris\n\n// Read system port mappings fr", 0x1000)		 = 1767 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/protoconn_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// This file implements API tests across platforms and will never have a build\n// tag.\n\npackage", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/race.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build race\n// +build windows\n\npackage net\n\nimport (\n\t\"runtime\"\n\t\"unsafe\"\n)\n\nconst raceenabl", 0x1000)		 = 594 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/race0.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build !race\n// +build windows\n\npackage net\n\nimport (\n\t\"unsafe\"\n)\n\nconst raceenabled = false", 0x1000)		 = 457 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/sendfile_stub.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin nacl netbsd openbsd solaris\n\npackage net\n\nimport \"io\"\n\nfunc sendFile(c *netFD,", 0x1000)		 = 331 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/server_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage net\n\nimport (\n\t\"flag\"\n\t\"io\"\n\t\"os\"\n\t\"runtime\"\n\t\"testing\"\n\t\"time\"\n)\n\nfunc skipServerTest(n", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/singleflight.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage net\n\nimport \"sync\"\n\n// call is an in-flight or completed singleflight.Do call\ntype call", 0x1000)		 = 2890 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/sock_bsd.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd netbsd openbsd\n\npackage net\n\nimport (\n\t\"runtime\"\n\t\"syscall\"\n", 0x1000)		 = 835 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/sock_cloexec.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// This file implements sysSocket and accept for platforms that\n// provide a fast path for setti", 0x1000)		 = 2699 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/sock_posix.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd linux nacl netbsd openbsd solaris windows\n\npackage net\n\nimpo", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/sock_stub.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build nacl solaris\n\npackage net\n\nimport \"syscall\"\n\nfunc maxListenerBacklog() int {\n\t// TODO", 0x1000)		 = 372 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/sockopt_bsd.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd netbsd openbsd\n\npackage net\n\nimport (\n\t\"os\"\n\t\"runtime\"\n\t\"sys", 0x1000)		 = 2118 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/sockopt_posix.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd linux netbsd openbsd solaris windows\n\npackage net\n\nimport (\n", 0x1000)		 = 2898 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/sockopt_stub.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build nacl\n\npackage net\n\nimport \"syscall\"\n\nfunc setDefaultSockopts(s, family, sotype int, i", 0x1000)		 = 736 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/sockoptip_bsd.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd netbsd openbsd\n\npackage net\n\nimport (\n\t\"os\"\n\t\"syscall\"\n)\n\nfu", 0x1000)		 = 935 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/sockoptip_posix.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd linux netbsd openbsd windows\n\npackage net\n\nimport (\n\t\"os\"\n\t\"", 0x1000)		 = 1647 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/sockoptip_stub.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build nacl solaris\n\npackage net\n\nimport \"syscall\"\n\nfunc setIPv4MulticastInterface(fd *netFD", 0x1000)		 = 955 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/sys_cloexec.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// This file implements sysSocket and accept for platforms that do not\n// provide a fast path fo", 0x1000)		 = 1641 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/tcp_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage net\n\nimport (\n\t\"fmt\"\n\t\"io\"\n\t\"reflect\"\n\t\"runtime\"\n\t\"sync\"\n\t\"testing\"\n\t\"time\"\n)\n\nfunc Benc", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/tcpsock.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage net\n\n// TCPAddr represents the address of a TCP end point.\ntype TCPAddr struct {\n\tIP   ", 0x1000)		 = 1434 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/tcpsock_posix.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd linux nacl netbsd openbsd solaris windows\n\npackage net\n\nimpo", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/tcpsockopt_darwin.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage net\n\nimport (\n\t\"os\"\n\t\"syscall\"\n\t\"time\"\n)\n\nconst sysTCP_KEEPINTVL = 0x101\n\nfunc setKeepA", 0x1000)		 = 871 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/tcpsockopt_posix.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd linux netbsd openbsd solaris windows\n\npackage net\n\nimport (\n", 0x1000)		 = 533 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/tcpsockopt_stub.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build nacl\n\npackage net\n\nimport (\n\t\"syscall\"\n\t\"time\"\n)\n\nfunc setNoDelay(fd *netFD, noDelay ", 0x1000)		 = 391 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/tcpsockopt_unix.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build freebsd linux netbsd solaris\n\npackage net\n\nimport (\n\t\"os\"\n\t\"syscall\"\n\t\"time\"\n)\n\nfunc ", 0x1000)		 = 793 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/timeout_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage net\n\nimport (\n\t\"fmt\"\n\t\"io\"\n\t\"io/ioutil\"\n\t\"runtime\"\n\t\"testing\"\n\t\"time\"\n)\n\nfunc isTimeout(", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/udp_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage net\n\nimport (\n\t\"reflect\"\n\t\"runtime\"\n\t\"strings\"\n\t\"testing\"\n\t\"time\"\n)\n\nfunc TestResolveUD", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/udpsock.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage net\n\n// UDPAddr represents the address of a UDP end point.\ntype UDPAddr struct {\n\tIP   ", 0x1000)		 = 1434 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/udpsock_posix.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd linux nacl netbsd openbsd solaris windows\n\npackage net\n\nimpo", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/unicast_posix_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build !plan9\n\npackage net\n\nimport (\n\t\"runtime\"\n\t\"syscall\"\n\t\"testing\"\n)\n\nvar listenerTests =", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/unix_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build !nacl,!plan9,!windows\n\npackage net\n\nimport (\n\t\"bytes\"\n\t\"os\"\n\t\"reflect\"\n\t\"runtime\"\n\t\"s", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/unixsock.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage net\n\n// UnixAddr represents the address of a Unix domain socket end point.\ntype UnixAdd", 0x1000)		 = 965 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/unixsock_posix.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd linux nacl netbsd openbsd solaris windows\n\npackage net\n\nimpo", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/net/z_last_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage net\n\nimport (\n\t\"flag\"\n\t\"fmt\"\n\t\"testing\"\n\t\"time\"\n)\n\nvar testDNSFlood = flag.Bool(\"dnsfloo", 0x1000)		 = 2454 0
close(0x3)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/rand\0", 0xC208070000, 0x1000)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/rand\0", 0x1000000, 0x0)		 = 3 0
getdirentries64(0x3, 0xC2080D0000, 0x1000)		 = 336 0
getdirentries64(0x3, 0xC2080D0000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/rand/example_test.go\0", 0xC208070120, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/rand/exp.go\0", 0xC2080701B0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/rand/normal.go\0", 0xC208070240, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/rand/rand.go\0", 0xC2080702D0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/rand/rand_test.go\0", 0xC208070360, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/rand/regress_test.go\0", 0xC2080703F0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/rand/rng.go\0", 0xC208070480, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/math/rand/zipf.go\0", 0xC2080705A0, 0x1000)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/rand/example_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage rand_test\n\nimport (\n\t\"fmt\"\n\t\"math/rand\"\n\t\"os\"\n\t\"text/tabwriter\"\n)\n\n// These tests serve ", 0x1000)		 = 3550 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/rand/exp.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage rand\n\nimport (\n\t\"math\"\n)\n\n/*\n * Exponential distribution\n *\n * See \"The Ziggurat Method ", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/rand/normal.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage rand\n\nimport (\n\t\"math\"\n)\n\n/*\n * Normal distribution\n *\n * See \"The Ziggurat Method for G", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/rand/rand.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Package rand implements pseudo-random number generators.\n//\n// Random numbers are generated b", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/rand/rand_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage rand\n\nimport (\n\t\"errors\"\n\t\"fmt\"\n\t\"math\"\n\t\"testing\"\n)\n\nconst (\n\tnumTestSamples = 10000\n)\n", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/rand/regress_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2014 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Test that random number sequences generated by a specific seed\n// do not change from version", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/rand/rng.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage rand\n\n/*\n * Uniform distribution\n *\n * algorithm by\n * DP Mitchell and JA Reeds\n */\n\ncon", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/math/rand/zipf.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// W.Hormann, G.Derflinger:\n// \"Rejection-Inversion to Generate Variates\n// from Monotone Discre", 0x1000)		 = 1786 0
close(0x3)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo\0", 0xC208070630, 0x1000)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo\0", 0x1000000, 0x0)		 = 3 0
getdirentries64(0x3, 0xC20813B000, 0x1000)		 = 1688 0
getdirentries64(0x3, 0xC20813B000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/asm_386.s\0", 0xC2080706C0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/asm_amd64.s\0", 0xC208070750, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/asm_arm.s\0", 0xC2080707E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/asm_nacl_amd64p32.s\0", 0xC208070870, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/callbacks.c\0", 0xC208070900, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/cgo.go\0", 0xC208070990, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/dragonfly.c\0", 0xC208070AB0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/freebsd.c\0", 0xC208070BD0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/gcc_386.S\0", 0xC208070C60, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/gcc_amd64.S\0", 0xC208070CF0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/gcc_android.c\0", 0xC208070D80, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/gcc_android_arm.c\0", 0xC208070E10, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/gcc_arm.S\0", 0xC208070EA0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/gcc_darwin_386.c\0", 0xC208070F30, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/gcc_darwin_amd64.c\0", 0xC208070FC0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/gcc_dragonfly_386.c\0", 0xC208071050, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/gcc_dragonfly_amd64.c\0", 0xC2080710E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/gcc_fatalf.c\0", 0xC208071170, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/gcc_freebsd_386.c\0", 0xC208071200, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/gcc_freebsd_amd64.c\0", 0xC208071290, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/gcc_freebsd_arm.c\0", 0xC208071320, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/gcc_linux_386.c\0", 0xC2080713B0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/gcc_linux_amd64.c\0", 0xC208071440, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/gcc_linux_arm.c\0", 0xC2080714D0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/gcc_netbsd_386.c\0", 0xC208071560, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/gcc_netbsd_amd64.c\0", 0xC2080715F0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/gcc_netbsd_arm.c\0", 0xC208071680, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/gcc_openbsd_386.c\0", 0xC208071710, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/gcc_openbsd_amd64.c\0", 0xC2080717A0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/gcc_setenv.c\0", 0xC208071830, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/gcc_util.c\0", 0xC2080718C0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/gcc_windows_386.c\0", 0xC208071950, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/gcc_windows_amd64.c\0", 0xC2080719E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/iscgo.c\0", 0xC208071A70, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/libcgo.h\0", 0xC208071B00, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/netbsd.c\0", 0xC208071B90, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/openbsd.c\0", 0xC208071C20, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/setenv.c\0", 0xC208071CB0, 0x1000)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/asm_amd64.s\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include \"textflag.h\"\n\n/*\n * void crosscall2(void (*fn)(void*, int32), void*, int32)\n * Save re", 0x1000)		 = 1014 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/callbacks.c\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include \"../runtime.h\"\n#include \"../cgocall.h\"\n#include \"textflag.h\"\n\n// These utility functio", 0x1000)		 = 2788 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/cgo.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2010 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n/*\nPackage cgo contains runtime support for code generated\nby the cgo tool.  See the documentat", 0x1000)		 = 632 0
read(0x3, "\0", 0x1000)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/dragonfly.c\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2010 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build dragonfly\n\n#include \"textflag.h\"\n\n// Supply environ and __progname, because we don't\n", 0x1000)		 = 504 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/freebsd.c\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2010 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build freebsd\n\n#include \"textflag.h\"\n\n// Supply environ and __progname, because we don't\n//", 0x1000)		 = 500 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/gcc_amd64.S\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n/*\n * Apple still insists on underscore prefixes for C function names.\n */\n#if defined(__APPLE_", 0x1000)		 = 969 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/gcc_darwin_amd64.c\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include <string.h> /* for strerror */\n#include <pthread.h>\n#include <signal.h>\n#include \"libcg", 0x1000)		 = 2562 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/gcc_fatalf.c\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2014 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build !android,linux\n\n#include <stdarg.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include \"", 0x1000)		 = 458 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/gcc_setenv.c\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd linux netbsd openbsd\n\n#include \"libcgo.h\"\n\n#include <stdlib.", 0x1000)		 = 436 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/gcc_util.c\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include \"libcgo.h\"\n\n/* Stub for calling malloc from Go */\nvoid\nx_cgo_malloc(void *p)\n{\n\tstruct", 0x1000)		 = 852 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/iscgo.c\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2010 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// The runtime package contains an uninitialized definition\n// for runtime\302\267iscgo.  Override it", 0x1000)		 = 662 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/libcgo.h\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n#include <stdint.h>\n#include <stdlib.h>\n#include <stdio.h>\n\n#define nil ((void*)0)\n#define nele", 0x1000)		 = 1317 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/netbsd.c\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2010 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build netbsd\n\n#include \"textflag.h\"\n\n// Supply environ and __progname, because we don't\n// ", 0x1000)		 = 498 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/openbsd.c\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2010 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build openbsd\n\n#include \"textflag.h\"\n\n// Supply environ, __progname and __guard_local, beca", 0x1000)		 = 767 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/runtime/cgo/setenv.c\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd linux netbsd openbsd\n\n#pragma cgo_import_static x_cgo_setenv", 0x1000)		 = 465 0
close(0x3)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/runtime.a\0", 0xC208071E60, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/errors.a\0", 0xC208071EF0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/runtime.a\0", 0xC208104090, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/sync/atomic.a\0", 0xC208104120, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/runtime.a\0", 0xC2081041B0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/sync.a\0", 0xC208104240, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/runtime.a\0", 0xC208104360, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/sync/atomic.a\0", 0xC2081043F0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/io.a\0", 0xC208104480, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/errors.a\0", 0xC208104510, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/runtime.a\0", 0xC208104B40, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/sync.a\0", 0xC208104BD0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/sync/atomic.a\0", 0xC208104C60, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/math.a\0", 0xC208104CF0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/runtime.a\0", 0xC208104D80, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/syscall.a\0", 0xC208104E10, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/errors.a\0", 0xC208104EA0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/runtime.a\0", 0xC208104F30, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/sync.a\0", 0xC208104FC0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/sync/atomic.a\0", 0xC208105050, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/time.a\0", 0xC2081050E0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/errors.a\0", 0xC208105170, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/runtime.a\0", 0xC208105200, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/sync.a\0", 0xC208105290, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/sync/atomic.a\0", 0xC208105320, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/syscall.a\0", 0xC2081053B0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/os.a\0", 0xC208105440, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/errors.a\0", 0xC2081054D0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/io.a\0", 0xC208105560, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/runtime.a\0", 0xC2081055F0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/sync.a\0", 0xC208105680, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/sync/atomic.a\0", 0xC208105710, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/syscall.a\0", 0xC2081057A0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/time.a\0", 0xC208105830, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/unicode/utf8.a\0", 0xC2081058C0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/runtime.a\0", 0xC208105950, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/strconv.a\0", 0xC2081059E0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/errors.a\0", 0xC208105A70, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/math.a\0", 0xC208105B00, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/runtime.a\0", 0xC208105B90, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/unicode/utf8.a\0", 0xC208105C20, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/reflect.a\0", 0xC208105D40, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/errors.a\0", 0xC208105DD0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/math.a\0", 0xC208105E60, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/runtime.a\0", 0xC208105EF0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/strconv.a\0", 0xC2081045A0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/sync.a\0", 0xC208104630, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/sync/atomic.a\0", 0xC2081046C0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/unicode/utf8.a\0", 0xC208104750, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/fmt.a\0", 0xC2081047E0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/errors.a\0", 0xC208104870, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/io.a\0", 0xC208104900, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/math.a\0", 0xC208104990, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/os.a\0", 0xC208104A20, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/reflect.a\0", 0xC208104AB0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/runtime.a\0", 0xC208152000, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/strconv.a\0", 0xC208152090, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/sync.a\0", 0xC208152120, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/sync/atomic.a\0", 0xC2081521B0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/syscall.a\0", 0xC208152240, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/time.a\0", 0xC2081522D0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/unicode/utf8.a\0", 0xC208152360, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/sort.a\0", 0xC2081523F0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/runtime.a\0", 0xC208152480, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/flag.a\0", 0xC208152510, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/errors.a\0", 0xC2081525A0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/fmt.a\0", 0xC208152630, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/io.a\0", 0xC2081526C0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/math.a\0", 0xC208152750, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/os.a\0", 0xC2081527E0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/reflect.a\0", 0xC208152870, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/runtime.a\0", 0xC208152900, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/sort.a\0", 0xC208152990, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/strconv.a\0", 0xC208152A20, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/sync.a\0", 0xC208152AB0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/sync/atomic.a\0", 0xC208152B40, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/syscall.a\0", 0xC208152BD0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/time.a\0", 0xC208152C60, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/unicode/utf8.a\0", 0xC208152CF0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/unicode.a\0", 0xC208152D80, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/runtime.a\0", 0xC208152E10, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/bytes.a\0", 0xC208152EA0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/errors.a\0", 0xC208152F30, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/io.a\0", 0xC208152FC0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/runtime.a\0", 0xC208153050, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/sync.a\0", 0xC2081530E0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/sync/atomic.a\0", 0xC208153170, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/unicode.a\0", 0xC208153200, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/unicode/utf8.a\0", 0xC208153290, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/strings.a\0", 0xC208153320, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/errors.a\0", 0xC2081533B0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/io.a\0", 0xC208153440, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/runtime.a\0", 0xC2081534D0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/sync.a\0", 0xC208153560, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/sync/atomic.a\0", 0xC2081535F0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/unicode.a\0", 0xC208153680, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/unicode/utf8.a\0", 0xC208153710, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/path/filepath.a\0", 0xC2081537A0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/bytes.a\0", 0xC208153830, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/errors.a\0", 0xC2081538C0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/io.a\0", 0xC208153950, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/os.a\0", 0xC2081539E0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/runtime.a\0", 0xC208153A70, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/sort.a\0", 0xC208153B00, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/strings.a\0", 0xC208153B90, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/sync.a\0", 0xC208153C20, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/sync/atomic.a\0", 0xC208153CB0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/syscall.a\0", 0xC208153D40, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/time.a\0", 0xC208153DD0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/unicode.a\0", 0xC208153E60, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/unicode/utf8.a\0", 0xC208153EF0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/io/ioutil.a\0", 0xC208154000, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/bytes.a\0", 0xC208154090, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/errors.a\0", 0xC208154120, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/io.a\0", 0xC2081541B0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/math.a\0", 0xC208154240, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/os.a\0", 0xC2081542D0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/path/filepath.a\0", 0xC208154360, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/runtime.a\0", 0xC2081543F0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/sort.a\0", 0xC208154480, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/strconv.a\0", 0xC208154510, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/strings.a\0", 0xC2081545A0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/sync.a\0", 0xC208154630, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/sync/atomic.a\0", 0xC2081546C0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/syscall.a\0", 0xC208154750, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/time.a\0", 0xC2081547E0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/unicode.a\0", 0xC208154870, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/unicode/utf8.a\0", 0xC208154900, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/log.a\0", 0xC208154990, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/errors.a\0", 0xC208154A20, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/fmt.a\0", 0xC208154AB0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/io.a\0", 0xC208154B40, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/math.a\0", 0xC208154BD0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/os.a\0", 0xC208154C60, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/reflect.a\0", 0xC208154CF0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/runtime.a\0", 0xC208154D80, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/strconv.a\0", 0xC208154E10, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/sync.a\0", 0xC208154EA0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/sync/atomic.a\0", 0xC208154F30, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/syscall.a\0", 0xC208154FC0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/time.a\0", 0xC208155050, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/unicode/utf8.a\0", 0xC2081550E0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/math/rand.a\0", 0xC208155170, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/math.a\0", 0xC208155200, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/runtime.a\0", 0xC208155290, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/sync.a\0", 0xC208155320, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/sync/atomic.a\0", 0xC2081553B0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/runtime/cgo.a\0", 0xC208155440, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/runtime.a\0", 0xC2081554D0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/net.a\0", 0xC208155560, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/errors.a\0", 0xC2081555F0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/io.a\0", 0xC208155680, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/math.a\0", 0xC208155710, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/math/rand.a\0", 0xC2081557A0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/os.a\0", 0xC208155830, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/runtime.a\0", 0xC2081558C0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/runtime/cgo.a\0", 0xC208155950, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/sort.a\0", 0xC2081559E0, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/sync.a\0", 0xC208155A70, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/sync/atomic.a\0", 0xC208155B00, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/syscall.a\0", 0xC208155B90, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/darwin_amd64/time.a\0", 0xC208155C20, 0x1000)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/cmd/cgo\0", 0x1000000, 0x0)		 = 3 0
getdirentries64(0x3, 0xC208126000, 0x1000)		 = 320 0
getdirentries64(0x3, 0xC208126000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/cmd/cgo/ast.go\0", 0xC208155CB0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/cmd/cgo/doc.go\0", 0xC208155D40, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/cmd/cgo/gcc.go\0", 0xC208155DD0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/cmd/cgo/godefs.go\0", 0xC208155E60, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/cmd/cgo/main.go\0", 0xC208155EF0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/cmd/cgo/out.go\0", 0xC20813C000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/cmd/cgo/util.go\0", 0xC20813C090, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/cmd/cgo/zdefaultcc.go\0", 0xC20813C120, 0x1000)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/cmd/cgo/ast.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Parse input AST and prepare Prog structure.\n\npackage main\n\nimport (\n\t\"fmt\"\n\t\"go/ast\"\n\t\"go/pa", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/cmd/cgo/doc.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n/*\n\nCgo enables the creation of Go packages that call C code.\n\nUsing cgo with the go command\n\nT", 0x1000)		 = 4096 0
read(0x3, "signed char), C.uchar (unsigned char),\nC.short, C.ushort (unsigned short), C.int, C.uint (unsigned int),\nC.long, C.ulong (unsigned long), C.longlong (long long),\nC.ulonglong (unsigned long long), C.float, C.double.\nThe C type void* is represented by Go's u", 0x1000)		 = 4096 0
read(0x3, "le.\n\t-dynlinker\n\t\tWrite dynamic linker as part of -dynimport output.\n\t-godefs\n\t\tWrite out input file in Go syntax replacing C package\n\t\tnames with real values. Used to generate files in the\n\t\tsyscall package when bootstrapping a new target.\n\t-cdefs\n\t\tLike ", 0x1000)		 = 4096 0
read(0x3, "ariable, function, or\nconstant. It can do this by reading object files. If cgo has decided\nthat t1 is a type, v2 and v3 are variables or functions, and c4, c5,\nand c6 are constants, it generates:\n\n\t<preamble>\n\t__typeof__(t1) *__cgo__1;\n\t__typeof__(v2) *__c", 0x1000)		 = 4096 0
read(0x3, " _cgo_allocate(void *a, int c) { }\n\tvoid _cgo_panic(void *a, int c) { }\n\nThe extra functions here are stubs to satisfy the references in the C\ncode generated for gcc. The build process links this stub, along with\n_cgo_export.c and *.cgo2.c, into a dynamic ", 0x1000)		 = 4096 0
read(0x3, " gcc, so\nit is not problematic for the link step to require gcc too.\n\nAn important exception is builds using a pre-compiled copy of the\nstandard library. In particular, package net uses cgo on most systems,\nand we want to preserve the ability to compile pu", 0x1000)		 = 4096 0
read(0x3, "le\n\nAs a simple example, consider a package that uses cgo to call C.sin.\nThe following code will be generated by cgo:\n\n\t// compiled by 6g\n\n\ttype _Ctype_double float64\n\tfunc _Cfunc_sin(_Ctype_double) _Ctype_double\n\n\t// compiled by 6c\n\n\t#pragma cgo_import_dy", 0x1000)		 = 4096 0
read(0x3, "lts, but\nthey can also control the linking details if desired.\n\n*/\n.\nOtherwise the link will be an internal one.\n\nThe directives in the 6c-compiled file are used according to the kind\nof final link used.\n\nIn internal mode, 6l itself processes all the host ", 0x1000)		 = 67 0
read(0x3, ".o file. While\ndoing that, 6l will discover that there is no definition for\n_cgo_gcc_Cfunc_sin, referred to by the 6c-compiled source file. This\nis okay, because 6l also processes the cgo_import_static directive and\nknows that _cgo_gcc_Cfunc_sin is expecte", 0x1000)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/cmd/cgo/gcc.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Annotate Ref in Prog with C types by parsing gcc debug output.\n// Conversion of debug output", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/cmd/cgo/godefs.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage main\n\nimport (\n\t\"bytes\"\n\t\"fmt\"\n\t\"go/ast\"\n\t\"go/printer\"\n\t\"go/token\"\n\t\"os\"\n\t\"strings\"\n)\n\n", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/cmd/cgo/main.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Cgo; see gmp.go for an overview.\n\n// TODO(rsc):\n//\tEmit correct line number annotations.\n//\t", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/cmd/cgo/out.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage main\n\nimport (\n\t\"bytes\"\n\t\"debug/elf\"\n\t\"debug/macho\"\n\t\"debug/pe\"\n\t\"fmt\"\n\t\"go/ast\"\n\t\"go/p", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/cmd/cgo/util.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage main\n\nimport (\n\t\"bytes\"\n\t\"fmt\"\n\t\"go/token\"\n\t\"os\"\n\t\"os/exec\"\n)\n\n// run runs the command ", 0x1000)		 = 1918 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/cmd/cgo/zdefaultcc.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// auto generated by go tool dist\n\npackage main\n\nconst defaultCC = `clang`\nconst defaultCXX = `clang++`\n\t\t//\tconst (\n\t\t//\t\tA = 1\n\t\t//\t\tB = 2\n\t\t//\t)\n\t\t//\n\t\t// to\n\t\t//\n\t\t//\tenum {\n\t\t//\t\tA = 1,\n\t\t//\t\tB = 2,\n\t\t//\t};\n\t\tif line == \"const (\" {\n\t\t\tprintf(\"enum {\\n", 0x1000)		 = 104 0
close(0x3)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/md5\0", 0xC20813C1B0, 0x1000)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/md5\0", 0x1000000, 0x0)		 = 3 0
getdirentries64(0x3, 0xC208162000, 0x1000)		 = 504 0
getdirentries64(0x3, 0xC208162000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/md5/example_test.go\0", 0xC20813C240, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/md5/gen.go\0", 0xC20813C2D0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/md5/md5.go\0", 0xC20813C360, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/md5/md5_test.go\0", 0xC20813C3F0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/md5/md5block.go\0", 0xC20813C480, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/md5/md5block_386.s\0", 0xC20813C510, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/md5/md5block_amd64.s\0", 0xC20813C5A0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/md5/md5block_amd64p32.s\0", 0xC20813C630, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/md5/md5block_arm.s\0", 0xC20813C6C0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/md5/md5block_decl.go\0", 0xC20813C750, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/md5/md5block_generic.go\0", 0xC20813C7E0, 0x1000)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/md5/example_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage md5_test\n\nimport (\n\t\"crypto/md5\"\n\t\"fmt\"\n\t\"io\"\n)\n\nfunc ExampleNew() {\n\th := md5.New()\n\tio", 0x1000)		 = 589 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/md5/gen.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build ignore\n\n// This program generates md5block.go\n// Invoke as\n//\n//\tgo run gen.go [-full", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/md5/md5.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n//go:generate go run gen.go -full -output md5block.go\n\n// Package md5 implements the MD5 hash al", 0x1000)		 = 2434 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/md5/md5_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage md5\n\nimport (\n\t\"crypto/rand\"\n\t\"fmt\"\n\t\"io\"\n\t\"testing\"\n\t\"unsafe\"\n)\n\ntype md5Test struct {\n", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/md5/md5block.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// DO NOT EDIT.\n// Generate with: go run gen.go -full -output md5block.go\n\npackage md5\n\nimport (", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/md5/md5block_amd64.s\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Original source:\n//\thttp://www.zorinaq.com/papers/md5-amd64.html\n//\thttp://www.zorinaq.com/papers/md5-amd64.tar.bz2\n//\n// Translated from Perl generating GNU assembly into\n// #defines generating 6a assembly by the Go Authors.\n\n#include \"textflag.h\"\n\n// ", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/md5/md5block_decl.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build amd64 amd64p32 386 arm\n\npackage md5\n\n//go:noescape\n\nfunc block(dig *digest, p []byte)", 0x1000)		 = 257 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/md5/md5block_generic.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2014 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build !amd64,!amd64p32,!386,!arm\n\npackage md5\n\nvar block = blockGeneric\n\0", 0x1000)		 = 236 0
close(0x3)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/src/crypto\0", 0xC20813C870, 0x1000)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/crypto\0", 0x1000000, 0x0)		 = 3 0
getdirentries64(0x3, 0xC20808D000, 0x1000)		 = 640 0
getdirentries64(0x3, 0xC20808D000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/aes\0", 0xC20813C900, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/cipher\0", 0xC20813C990, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/crypto.go\0", 0xC20813CA20, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/des\0", 0xC20813CAB0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/dsa\0", 0xC20813CB40, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/ecdsa\0", 0xC20813CBD0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/elliptic\0", 0xC20813CC60, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/hmac\0", 0xC20813CCF0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/md5\0", 0xC20813CD80, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/rand\0", 0xC20813CE10, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/rc4\0", 0xC20813CEA0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/rsa\0", 0xC20813CF30, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/sha1\0", 0xC20813CFC0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/sha256\0", 0xC20813D050, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/sha512\0", 0xC20813D0E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/subtle\0", 0xC20813D170, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/tls\0", 0xC20813D200, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/x509\0", 0xC20813D290, 0x1000)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/crypto/crypto.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Package crypto collects common cryptographic constants.\npackage crypto\n\nimport (\n\t\"hash\"\n\t\"io", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/src/hash\0", 0xC20813D320, 0x1000)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/hash\0", 0x1000000, 0x0)		 = 3 0
getdirentries64(0x3, 0xC20811D000, 0x1000)		 = 288 0
getdirentries64(0x3, 0xC20811D000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/hash/adler32\0", 0xC20813D3B0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/hash/crc32\0", 0xC20813D440, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/hash/crc64\0", 0xC20813D4D0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/hash/fnv\0", 0xC20813D560, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/hash/hash.go\0", 0xC20813D5F0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/hash/test_cases.txt\0", 0xC20813D680, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/hash/test_gen.awk\0", 0xC20813D710, 0x1000)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/hash/hash.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Package hash provides interfaces for hash functions.\npackage hash\n\nimport \"io\"\n\n// Hash is th", 0x1000)		 = 1210 0
close(0x3)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/src/debug/dwarf\0", 0xC20813D7A0, 0x1000)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/debug/dwarf\0", 0x1000000, 0x0)		 = 3 0
getdirentries64(0x3, 0xC2080E7000, 0x1000)		 = 376 0
getdirentries64(0x3, 0xC2080E7000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/debug/dwarf/buf.go\0", 0xC20813D8C0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/debug/dwarf/const.go\0", 0xC20813D950, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/debug/dwarf/entry.go\0", 0xC20813D9E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/debug/dwarf/open.go\0", 0xC20813DA70, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/debug/dwarf/testdata\0", 0xC20813DB00, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/debug/dwarf/type.go\0", 0xC20813DB90, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/debug/dwarf/type_test.go\0", 0xC20813DC20, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/debug/dwarf/typeunit.go\0", 0xC20813DCB0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/debug/dwarf/unit.go\0", 0xC20813DD40, 0x1000)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/debug/dwarf/buf.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Buffered reading and decoding of DWARF data streams.\n\npackage dwarf\n\nimport (\n\t\"encoding/bin", 0x1000)		 = 3341 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/debug/dwarf/const.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Constants\n\npackage dwarf\n\nimport \"strconv\"\n\n// An Attr identifies the attribute type in a DW", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/debug/dwarf/entry.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// DWARF debug information entry parser.\n// An entry is a sequence of data items of a given for", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/debug/dwarf/open.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Package dwarf provides access to DWARF debugging information loaded from\n// executable files", 0x1000)		 = 2669 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/debug/dwarf/type.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// DWARF type information structures.\n// The format is heavily biased toward C, but for simplic", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/debug/dwarf/type_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage dwarf_test\n\nimport (\n\t. \"debug/dwarf\"\n\t\"debug/elf\"\n\t\"debug/macho\"\n\t\"testing\"\n)\n\nvar typ", 0x1000)		 = 3860 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/debug/dwarf/typeunit.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage dwarf\n\nimport (\n\t\"fmt\"\n\t\"strconv\"\n)\n\n// Parse the type units stored in a DWARF4 .debug_", 0x1000)		 = 3778 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/debug/dwarf/unit.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage dwarf\n\nimport \"strconv\"\n\n// DWARF debug info is split into a sequence of compilation un", 0x1000)		 = 1914 0
close(0x3)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/src/encoding/binary\0", 0xC20813DDD0, 0x1000)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/encoding/binary\0", 0x1000000, 0x0)		 = 3 0
getdirentries64(0x3, 0xC208127000, 0x1000)		 = 248 0
getdirentries64(0x3, 0xC208127000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/encoding/binary/binary.go\0", 0xC20813DE60, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/encoding/binary/binary_test.go\0", 0xC20813DEF0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/encoding/binary/example_test.go\0", 0xC208104090, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/encoding/binary/varint.go\0", 0xC208104120, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/encoding/binary/varint_test.go\0", 0xC2081041B0, 0x1000)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/encoding/binary/binary.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Package binary implements simple translation between numbers and byte\n// sequences and encod", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/encoding/binary/binary_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage binary\n\nimport (\n\t\"bytes\"\n\t\"io\"\n\t\"math\"\n\t\"reflect\"\n\t\"strings\"\n\t\"testing\"\n)\n\ntype Struct", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/encoding/binary/example_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage binary_test\n\nimport (\n\t\"bytes\"\n\t\"encoding/binary\"\n\t\"fmt\"\n\t\"math\"\n)\n\nfunc ExampleWrite()", 0x1000)		 = 1110 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/encoding/binary/varint.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage binary\n\n// This file implements \"varint\" encoding of 64-bit integers.\n// The encoding i", 0x1000)		 = 3834 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/encoding/binary/varint_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage binary\n\nimport (\n\t\"bytes\"\n\t\"io\"\n\t\"testing\"\n)\n\nfunc testConstant(t *testing.T, w uint, ma", 0x1000)		 = 3508 0
close(0x3)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/src/debug/elf\0", 0xC208104240, 0x1000)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/debug/elf\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
getdirentries64(0x3, 0xC208137000, 0x1000)		 = 272 0
getdirentries64(0x3, 0xC208137000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/debug/elf/elf.go\0", 0xC208104360, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/debug/elf/elf_test.go\0", 0xC2081043F0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/debug/elf/file.go\0", 0xC208104480, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/debug/elf/file_test.go\0", 0xC208104510, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/debug/elf/symbols_test.go\0", 0xC2081045A0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/debug/elf/testdata\0", 0xC208104630, 0x1000)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/debug/elf/elf.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "/*\n * ELF constants and data structures\n *\n * Derived from:\n * $FreeBSD: src/sys/sys/elf32.h,v 1.8.14.1 2005/12/30 22:13:58 marcel Exp $\n * $FreeBSD: src/sys/sys/elf64.h,v 1.10.14.1 2005/12/30 22:13:58 marcel Exp $\n * $FreeBSD: src/sys/sys/elf_common.h,v 1", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/debug/elf/elf_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage elf\n\nimport (\n\t\"fmt\"\n\t\"testing\"\n)\n\ntype nameTest struct {\n\tval interface{}\n\tstr string\n", 0x1000)		 = 1176 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/debug/elf/file.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Package elf implements access to ELF object files.\npackage elf\n\nimport (\n\t\"bytes\"\n\t\"debug/dw", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/debug/elf/file_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage elf\n\nimport (\n\t\"bytes\"\n\t\"compress/gzip\"\n\t\"debug/dwarf\"\n\t\"encoding/binary\"\n\t\"io\"\n\t\"net\"\n", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/debug/elf/symbols_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2014 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage elf\n\nimport (\n\t\"io\"\n\t\"path\"\n\t\"reflect\"\n\t\"testing\"\n)\n\n// TODO: remove duplicate code\nfunc", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/src/debug/macho\0", 0xC2081046C0, 0x1000)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/debug/macho\0", 0x1000000, 0x0)		 = 3 0
getdirentries64(0x3, 0xC20817B000, 0x1000)		 = 232 0
getdirentries64(0x3, 0xC20817B000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/debug/macho/fat.go\0", 0xC208104750, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/debug/macho/file.go\0", 0xC2081047E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/debug/macho/file_test.go\0", 0xC208104870, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/debug/macho/macho.go\0", 0xC208104900, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/debug/macho/testdata\0", 0xC208104990, 0x1000)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/debug/macho/fat.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2014 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage macho\n\nimport (\n\t\"encoding/binary\"\n\t\"fmt\"\n\t\"io\"\n\t\"os\"\n)\n\n// A FatFile is a Mach-O unive", 0x1000)		 = 4039 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/debug/macho/file.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Package macho implements access to Mach-O object files.\npackage macho\n\n// High level access ", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/debug/macho/file_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage macho\n\nimport (\n\t\"reflect\"\n\t\"testing\"\n)\n\ntype fileTest struct {\n\tfile     string\n\thdr  ", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/debug/macho/macho.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Mach-O header data structures\n// http://developer.apple.com/mac/library/documentation/Develo", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/src/debug/pe\0", 0xC208104A20, 0x1000)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/debug/pe\0", 0x1000000, 0x0)		 = 3 0
getdirentries64(0x3, 0xC20816C000, 0x1000)		 = 192 0
getdirentries64(0x3, 0xC20816C000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/debug/pe/file.go\0", 0xC208104AB0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/debug/pe/file_test.go\0", 0xC208104B40, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/debug/pe/pe.go\0", 0xC208104BD0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/debug/pe/testdata\0", 0xC208104C60, 0x1000)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/debug/pe/file.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Package pe implements access to PE (Microsoft Windows Portable Executable) files.\npackage pe", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/debug/pe/file_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage pe\n\nimport (\n\t\"reflect\"\n\t\"testing\"\n)\n\ntype fileTest struct {\n\tfile     string\n\thdr     ", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/debug/pe/pe.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage pe\n\ntype FileHeader struct {\n\tMachine              uint16\n\tNumberOfSections     uint16\n", 0x1000)		 = 4074 0
close(0x3)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/ast\0", 0xC208104CF0, 0x1000)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/go/ast\0", 0x1000000, 0x0)		 = 3 0
getdirentries64(0x3, 0xC20818A000, 0x1000)		 = 560 0
getdirentries64(0x3, 0xC20818A000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/ast/ast.go\0", 0xC208104D80, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/ast/ast_test.go\0", 0xC208104E10, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/ast/commentmap.go\0", 0xC208104EA0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/ast/commentmap_test.go\0", 0xC208104F30, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/ast/example_test.go\0", 0xC208104FC0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/ast/filter.go\0", 0xC208105050, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/ast/filter_test.go\0", 0xC2081050E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/ast/import.go\0", 0xC208105170, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/ast/print.go\0", 0xC208105200, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/ast/print_test.go\0", 0xC208105290, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/ast/resolve.go\0", 0xC208105320, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/ast/scope.go\0", 0xC2081053B0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/ast/walk.go\0", 0xC208105440, 0x1000)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/go/ast/ast.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Package ast declares the types used to represent syntax trees for Go\n// packages.\n//\npackage ", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/go/ast/ast_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage ast\n\nimport (\n\t\"testing\"\n)\n\nvar comments = []struct {\n\tlist []string\n\ttext string\n}{\n\t{[", 0x1000)		 = 1489 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/go/ast/commentmap.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage ast\n\nimport (\n\t\"bytes\"\n\t\"fmt\"\n\t\"go/token\"\n\t\"sort\"\n)\n\ntype byPos []*CommentGroup\n\nfunc (a", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/go/ast/commentmap_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// To avoid a cyclic dependency with go/parser, this file is in a separate package.\n\npackage ast", 0x1000)		 = 3295 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/go/ast/example_test.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage ast_test\n\nimport (\n\t\"bytes\"\n\t\"fmt\"\n\t\"go/ast\"\n\t\"go/format\"\n\t\"go/parser\"\n\t\"go/token\"\n)\n\n//", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/go/ast/filter.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage ast\n\nimport (\n\t\"go/token\"\n\t\"sort\"\n)\n\n// ------------------------------------------------", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/go/ast/filter_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2013 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// To avoid a cyclic dependency with go/parser, this file is in a separate package.\n\npackage ast", 0x1000)		 = 1654 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/go/ast/import.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage ast\n\nimport (\n\t\"go/token\"\n\t\"sort\"\n\t\"strconv\"\n)\n\n// SortImports sorts runs of consecutive", 0x1000)		 = 4096 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
gettimeofday(0xB0080DC8, 0x0, 0x0)		 = 1441226399 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/go/ast/print.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2010 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// This file contains printing support for ASTs.\n\npackage ast\n\nimport (\n\t\"fmt\"\n\t\"go/token\"\n\t\"io\"", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/go/ast/print_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage ast\n\nimport (\n\t\"bytes\"\n\t\"strings\"\n\t\"testing\"\n)\n\nvar tests = []struct {\n\tx interface{} //", 0x1000)		 = 1880 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/go/ast/resolve.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// This file implements NewPackage.\n\npackage ast\n\nimport (\n\t\"fmt\"\n\t\"go/scanner\"\n\t\"go/token\"\n\t\"st", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/go/ast/scope.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// This file implements scopes and the objects they contain.\n\npackage ast\n\nimport (\n\t\"bytes\"\n\t\"f", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/go/ast/walk.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage ast\n\nimport \"fmt\"\n\n// A Visitor's Visit method is invoked for each node encountered by W", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/scanner\0", 0xC208104090, 0x1000)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/go/scanner\0", 0x1000000, 0x0)		 = 3 0
getdirentries64(0x3, 0xC20813A000, 0x1000)		 = 208 0
getdirentries64(0x3, 0xC20813A000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/scanner/errors.go\0", 0xC208104120, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/scanner/example_test.go\0", 0xC2081041B0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/scanner/scanner.go\0", 0xC208104240, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/scanner/scanner_test.go\0", 0xC208104360, 0x1000)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/go/scanner/errors.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage scanner\n\nimport (\n\t\"fmt\"\n\t\"go/token\"\n\t\"io\"\n\t\"sort\"\n)\n\n// In an ErrorList, an error is re", 0x1000)		 = 3081 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/go/scanner/example_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage scanner_test\n\nimport (\n\t\"fmt\"\n\t\"go/scanner\"\n\t\"go/token\"\n)\n\nfunc ExampleScanner_Scan() {\n", 0x1000)		 = 1071 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/go/scanner/scanner.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Package scanner implements a scanner for Go source text.\n// It takes a []byte as source which", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/go/scanner/scanner_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage scanner\n\nimport (\n\t\"go/token\"\n\t\"io/ioutil\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"runtime\"\n\t\"testing\"\n", 0x1000)		 = 4096 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/token\0", 0xC208104480, 0x1000)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/go/token\0", 0x1000000, 0x0)		 = 3 0
getdirentries64(0x3, 0xC20808D000, 0x1000)		 = 264 0
getdirentries64(0x3, 0xC20808D000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/token/position.go\0", 0xC208104510, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/token/position_test.go\0", 0xC2081045A0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/token/serialize.go\0", 0xC208104630, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/token/serialize_test.go\0", 0xC2081046C0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/token/token.go\0", 0xC208104750, 0x1000)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/go/token/position.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2010 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage token\n\nimport (\n\t\"fmt\"\n\t\"sort\"\n\t\"sync\"\n)\n\n// -------------------------------------------", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/go/token/position_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2010 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage token\n\nimport (\n\t\"fmt\"\n\t\"math/rand\"\n\t\"sync\"\n\t\"testing\"\n)\n\nfunc checkPos(t *testing.T, ms", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/go/token/serialize.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage token\n\ntype serializedFile struct {\n\t// fields correspond 1:1 to fields with same (lower", 0x1000)		 = 1279 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/go/token/serialize_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage token\n\nimport (\n\t\"bytes\"\n\t\"encoding/gob\"\n\t\"fmt\"\n\t\"testing\"\n)\n\n// equal returns nil if p ", 0x1000)		 = 2696 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/go/token/token.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Package token defines constants representing the lexical tokens of the Go\n// programming lang", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/parser\0", 0xC208104870, 0x1000)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/go/parser\0", 0x1000000, 0x0)		 = 3 0
getdirentries64(0x3, 0xC20812F000, 0x1000)		 = 376 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
getdirentries64(0x3, 0xC20812F000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/parser/error_test.go\0", 0xC208104900, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/parser/example_test.go\0", 0xC208104990, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/parser/interface.go\0", 0xC208104A20, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/parser/parser.go\0", 0xC208104AB0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/parser/parser_test.go\0", 0xC208104B40, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/parser/performance_test.go\0", 0xC208104BD0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/parser/short_test.go\0", 0xC208104C60, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/parser/testdata\0", 0xC208104CF0, 0x1000)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/go/parser/error_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// This file implements a parser test harness. The files in the testdata\n// directory are parsed", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/go/parser/example_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage parser_test\n\nimport (\n\t\"fmt\"\n\t\"go/parser\"\n\t\"go/token\"\n)\n\nfunc ExampleParseFile() {\n\tfset", 0x1000)		 = 697 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/go/parser/interface.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// This file contains the exported entry points for invoking the parser.\n\npackage parser\n\nimport", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/go/parser/parser.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Package parser implements a parser for Go source files. Input may be\n// provided in a variety", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/go/parser/parser_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage parser\n\nimport (\n\t\"bytes\"\n\t\"fmt\"\n\t\"go/ast\"\n\t\"go/token\"\n\t\"os\"\n\t\"strings\"\n\t\"testing\"\n)\n\nva", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/go/parser/performance_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage parser\n\nimport (\n\t\"go/token\"\n\t\"io/ioutil\"\n\t\"testing\"\n)\n\nvar src = readFile(\"parser.go\")\n", 0x1000)		 = 631 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/go/parser/short_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// This file contains test cases for short valid and invalid programs.\n\npackage parser\n\nimport \"", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/printer\0", 0xC2081054D0, 0x1000)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/go/printer\0", 0x1000000, 0x0)		 = 3 0
getdirentries64(0x3, 0xC208140000, 0x1000)		 = 296 0
getdirentries64(0x3, 0xC208140000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/printer/example_test.go\0", 0xC208105560, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/printer/nodes.go\0", 0xC2081055F0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/printer/performance_test.go\0", 0xC208105680, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/printer/printer.go\0", 0xC208105710, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/printer/printer_test.go\0", 0xC2081057A0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/go/printer/testdata\0", 0xC208105830, 0x1000)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/go/printer/example_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage printer_test\n\nimport (\n\t\"bytes\"\n\t\"fmt\"\n\t\"go/ast\"\n\t\"go/parser\"\n\t\"go/printer\"\n\t\"go/token\"\n", 0x1000)		 = 1829 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/go/printer/nodes.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// This file implements printing of AST nodes; specifically\n// expressions, statements, declarat", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/go/printer/performance_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// This file implements a simple printer performance benchmark:\n// go test -bench=BenchmarkPrint", 0x1000)		 = 1207 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/go/printer/printer.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Package printer implements printing of AST nodes.\npackage printer\n\nimport (\n\t\"fmt\"\n\t\"go/ast\"\n", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/go/printer/printer_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage printer\n\nimport (\n\t\"bytes\"\n\t\"errors\"\n\t\"flag\"\n\t\"fmt\"\n\t\"go/ast\"\n\t\"go/parser\"\n\t\"go/token\"\n\t", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/src/text/tabwriter\0", 0xC2081058C0, 0x1000)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/text/tabwriter\0", 0x1000000, 0x0)		 = 3 0
getdirentries64(0x3, 0xC208170000, 0x1000)		 = 176 0
getdirentries64(0x3, 0xC208170000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/text/tabwriter/example_test.go\0", 0xC208105950, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/text/tabwriter/tabwriter.go\0", 0xC2081059E0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/text/tabwriter/tabwriter_test.go\0", 0xC208105A70, 0x1000)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/text/tabwriter/example_test.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage tabwriter_test\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\t\"text/tabwriter\"\n)\n\nfunc ExampleWriter_Init() {\n\t", 0x1000)		 = 969 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/text/tabwriter/tabwriter.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Package tabwriter implements a write filter (tabwriter.Writer) that\n// translates tabbed colu", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/text/tabwriter/tabwriter_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage tabwriter_test\n\nimport (\n\t\"io\"\n\t\"testing\"\n\t. \"text/tabwriter\"\n)\n\ntype buffer struct {\n\ta", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/src/os/exec\0", 0xC208070120, 0x1000)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/os/exec\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
getdirentries64(0x3, 0xC2080B4000, 0x1000)		 = 408 0
getdirentries64(0x3, 0xC2080B4000, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/os/exec/example_test.go\0", 0xC208070240, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/os/exec/exec.go\0", 0xC2080702D0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/os/exec/exec_test.go\0", 0xC208070360, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/os/exec/lp_plan9.go\0", 0xC2080703F0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/os/exec/lp_test.go\0", 0xC208070480, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/os/exec/lp_unix.go\0", 0xC2080705A0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/os/exec/lp_unix_test.go\0", 0xC208070630, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/os/exec/lp_windows.go\0", 0xC2080706C0, 0x1000)		 = 0 0
lstat64("/usr/local/Cellar/go/1.4.2/libexec/src/os/exec/lp_windows_test.go\0", 0xC208070750, 0x1000)		 = 0 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/os/exec/example_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage exec_test\n\nimport (\n\t\"bytes\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"log\"\n\t\"os/exec\"\n\t\"strings\"\n)\n\nfun", 0x1000)		 = 1560 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/os/exec/exec.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Package exec runs external commands. It wraps os.StartProcess to make it\n// easier to remap s", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/os/exec/exec_test.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Use an external test to avoid os/exec -> net/http -> crypto/x509 -> os/exec\n// circular depen", 0x1000)		 = 4096 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/os/exec/lp_test.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2011 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\npackage exec\n\nimport (\n\t\"testing\"\n)\n\nvar nonExistentPaths = []string{\n\t\"some-non-existent-path\",", 0x1000)		 = 737 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/os/exec/lp_unix.go\0", 0x1000000, 0x0)		 = 3 0
read(0x3, "// Copyright 2010 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd linux nacl netbsd openbsd solaris\n\npackage exec\n\nimport (\n\t\"", 0x1000)		 = 1645 0
close(0x3)		 = 0 0
open("/usr/local/Cellar/go/1.4.2/libexec/src/os/exec/lp_unix_test.go\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x3, "// Copyright 2013 The Go Authors.  All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// +build darwin dragonfly freebsd linux netbsd openbsd solaris\n\npackage exec\n\nimport (\n\t\"io/io", 0x1000)		 = 1163 0
close(0x3)		 = 0 0
stat64("/tmp/go-build775409149/command-line-arguments/_obj/\0", 0xC208070990, 0x1000)		 = -1 Err#2
stat64("/tmp/go-build775409149/command-line-arguments\0", 0xC208070AB0, 0x1000)		 = -1 Err#2
stat64("/tmp/go-build775409149\0", 0xC208070BD0, 0x1000)		 = 0 0
mkdir("/tmp/go-build775409149/command-line-arguments\0", 0x1FF, 0x1000)		 = 0 0
mkdir("/tmp/go-build775409149/command-line-arguments/_obj/\0", 0x1FF, 0x1000)		 = 0 0
stat64("/tmp/go-build775409149/command-line-arguments/_obj/exe/\0", 0xC208070C60, 0x1000)		 = -1 Err#2
stat64("/tmp/go-build775409149/command-line-arguments/_obj\0", 0xC208070CF0, 0x1000)		 = 0 0
mkdir("/tmp/go-build775409149/command-line-arguments/_obj/exe/\0", 0x1FF, 0x1000)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/tool/darwin_amd64/6g\0", 0xC208070D80, 0x1000)		 = 0 0
open("/dev/null\0", 0x1000000, 0x0)		 = 3 0
pipe(0xC20818C830, 0x1000000, 0x0)		 = 4 0
fcntl(0x4, 0x2, 0x1)		 = 0 0
fcntl(0x5, 0x2, 0x1)		 = 0 0
stat64("/Users/mkandel/src/go/src/net_listener\0", 0xC208070E10, 0x1)		 = 0 0
pipe(0xC20813DA40, 0xC208070E10, 0x1)		 = 6 0
fcntl(0x6, 0x2, 0x1)		 = 0 0
fcntl(0x7, 0x2, 0x1)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
fork()		 = 813 0
close(0x7)		 = 0 0
read(0x6, "\0", 0x8)		 = 0 0
close(0x6)		 = 0 0
close(0x3)		 = 0 0
close(0x5)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
__pthread_sigmask(0x3, 0xB0080C54, 0xB0080C50)		 = 0 0
bsdthread_create(0x325750, 0xB00000, 0x80000)		 = -1340039168 0
__pthread_sigmask(0x3, 0xB0080C50, 0x0)		 = 0 0
thread_selfid(0x0, 0x0, 0x0)		 = 1874203 0
sigaltstack(0xB0209E40, 0x0, 0x0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
__pthread_sigmask(0x3, 0x69B6EC, 0x0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x4, "\0", 0x200)		 = 0 0
wait4(0x32D, 0xC2081A502C, 0x0)		 = 813 0
sigreturn(0xC208009F48, 0x1E, 0x200)		 = 0 Err#-2
select(0x0, 0x0, 0x0, 0x0, 0xB0186DE8)		 = 0 0
close(0x4)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
stat64("/usr/local/Cellar/go/1.4.2/libexec/pkg/tool/darwin_amd64/6l\0", 0xC208070F30, 0x0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/dev/null\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
pipe(0xC20818CA36, 0x1000000, 0x0)		 = 4 0
fcntl(0x4, 0x2, 0x1)		 = 0 0
fcntl(0x5, 0x2, 0x1)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
stat64(".\0", 0xC208070FC0, 0x1)		 = 0 0
pipe(0xC20818CA80, 0xC208070FC0, 0x1)		 = 6 0
fcntl(0x6, 0x2, 0x1)		 = 0 0
fcntl(0x7, 0x2, 0x1)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
fork()		 = 814 0
close(0x7)		 = 0 0
read(0x6, "\0", 0x8)		 = 0 0
close(0x6)		 = 0 0
close(0x3)		 = 0 0
close(0x5)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
read(0x4, "\0", 0x200)		 = 0 0
wait4(0x32E, 0xC2081A4F24, 0x0)		 = 814 0
sigreturn(0xC208009F48, 0x1E, 0x200)		 = 0 Err#-2
select(0x0, 0x0, 0x0, 0x0, 0x7FFF5FBFFAE0)		 = 0 0
close(0x4)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
pipe(0x4, 0x0, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
fcntl(0x3, 0x2, 0x1)		 = 0 0
fcntl(0x4, 0x2, 0x1)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
fork()		 = 816 0
close(0x4)		 = 0 0
read(0x3, "\0", 0x8)		 = 0 0
close(0x3)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
2015/09/02 13:40:01 Filename: lorem
2015/09/02 13:40:01 Contents: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque tempor nunc eget molestie interdum. Duis sed blandit velit. Pellentesque lobortis fermentum sagittis. Aenean sit amet tempus libero. Donec fringilla vel nisi sed vulputate. Donec vitae dapibus ipsum. Aliquam nec vehicula ante.

Cras tincidunt, tellus sit amet maximus elementum, felis turpis convallis arcu, non suscipit risus mauris nec dui. Donec imperdiet tellus nibh. Suspendisse malesuada justo vitae sollicitudin tempor. Sed vel iaculis justo. Curabitur vehicula aliquam tortor, vitae tempor enim ultrices non. Pellentesque ut tellus rutrum, pretium orci in, imperdiet ipsum. Curabitur vitae urna porta, condimentum risus nec, faucibus ante. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Nulla euismod eros id tempor euismod. Duis a sem eget lorem vestibulum posuere. Donec pharetra nunc quis magna convallis euismod.

Donec porttitor diam dui, nec tempus felis rhoncus at. Vivamus in lectus non orci mollis congue ut vel nunc. Curabitur diam erat, venenatis vel egestas a, cursus sit amet risus. Donec eu ipsum et orci cursus suscipit eget sit amet elit. Nunc sodales sem dictum, imperdiet libero et, semper dui. Etiam id mi pellentesque, pellentesque augue eu, porta purus. Phasellus vitae hendrerit dolor. Vestibulum interdum dui mollis pharetra mattis. Pellentesque non nibh ut neque feugiat lobortis. Etiam et bibendum metus. Aenean et odio nec odio sodales volutpat. Aenean malesuada mi eu mattis viverra.

Pellentesque porttitor faucibus commodo. Fusce ac mi blandit, ornare turpis quis, ullamcorper turpis. In id nisi accumsan metus tempor faucibus. Sed sit amet tincidunt ipsum. Proin tristique ligula id leo euismod, efficitur cursus libero condimentum. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Ut luctus, magna a posuere congue, neque augue faucibus lectus, quis tincidunt mi ex et lacus. Morbi eget est quis metus rhoncus tempor. Vivamus odio lacus, commodo vitae tincidunt vitae, venenatis eu augue. Cras commodo molestie aliquam.

Fusce malesuada nisi diam, nec interdum lectus eleifend quis. Morbi quis mollis magna, vitae fermentum orci. Curabitur auctor vulputate justo sit amet pharetra. Cras ac eleifend tellus. Phasellus nisl odio, luctus id congue finibus, congue vitae quam. Nulla dictum elementum blandit. Morbi faucibus justo libero, ut luctus nunc viverra a. Maecenas vel felis ac justo dignissim ultricies eget at felis. 

Message size(bytes): 2511
2015/09/02 13:40:01 Starting
wait4(0x330, 0xC2081A5A8C, 0x0)		 = -1 Err#-1
sigreturn(0xC208009F48, 0x1E, 0x0)		 = 0 Err#-2
wait4(0x330, 0xC2081A5A8C, 0x0)		 = 816 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
unlink("/tmp/go-build775409149\0", 0xC2081A5A8C, 0x0)		 = -1 Err#1
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
rmdir(0xC208129A60, 0xC2081A5A8C, 0x0)		 = -1 Err#66
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/tmp/go-build775409149\0", 0xC208071200, 0x0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
open("/tmp/go-build775409149\0", 0x1000000, 0x0)		 = 3 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
getdirentries64(0x3, 0xC208187000, 0x1000)		 = 152 0
getdirentries64(0x3, 0xC208187000, 0x1000)		 = 0 0
unlink("/tmp/go-build775409149/command-line-arguments\0", 0xC208187000, 0x1000)		 = -1 Err#1
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
rmdir(0xC20813DE90, 0xC208187000, 0x1000)		 = -1 Err#66
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
lstat64("/tmp/go-build775409149/command-line-arguments\0", 0xC208071290, 0x1000)		 = 0 0
open("/tmp/go-build775409149/command-line-arguments\0", 0x1000000, 0x0)		 = 4 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
getdirentries64(0x4, 0xC2081B2000, 0x1000)		 = 80 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
getdirentries64(0x4, 0xC2081B2000, 0x1000)		 = 0 0
unlink("/tmp/go-build775409149/command-line-arguments/_obj\0", 0xC2081B2000, 0x1000)		 = -1 Err#1
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
rmdir(0xC20818B540, 0xC2081B2000, 0x1000)		 = -1 Err#66
lstat64("/tmp/go-build775409149/command-line-arguments/_obj\0", 0xC208071320, 0x1000)		 = 0 0
open("/tmp/go-build775409149/command-line-arguments/_obj\0", 0x1000000, 0x0)		 = 5 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
getdirentries64(0x5, 0xC2081B3000, 0x1000)		 = 80 0
getdirentries64(0x5, 0xC2081B3000, 0x1000)		 = 0 0
unlink("/tmp/go-build775409149/command-line-arguments/_obj/exe\0", 0xC2081B3000, 0x1000)		 = -1 Err#1
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
rmdir(0xC20818B680, 0xC2081B3000, 0x1000)		 = -1 Err#66
lstat64("/tmp/go-build775409149/command-line-arguments/_obj/exe\0", 0xC2080713B0, 0x1000)		 = 0 0
open("/tmp/go-build775409149/command-line-arguments/_obj/exe\0", 0x1000000, 0x0)		 = 6 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
getdirentries64(0x6, 0xC2081B6000, 0x1000)		 = 80 0
getdirentries64(0x6, 0xC2081B6000, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
unlink("/tmp/go-build775409149/command-line-arguments/_obj/exe/client\0", 0xC2081B6000, 0x1000)		 = 0 0
getdirentries64(0x6, 0xC2081B6000, 0x1000)		 = 0 0
close(0x6)		 = 0 0
unlink("/tmp/go-build775409149/command-line-arguments/_obj/exe\0", 0xC2081B6000, 0x1000)		 = -1 Err#1
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
rmdir(0xC20818B800, 0xC2081B6000, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
getdirentries64(0x5, 0xC2081B3000, 0x1000)		 = 0 0
close(0x5)		 = 0 0
unlink("/tmp/go-build775409149/command-line-arguments/_obj\0", 0xC2081B3000, 0x1000)		 = -1 Err#1
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
rmdir(0xC20818B880, 0xC2081B3000, 0x1000)		 = 0 0
getdirentries64(0x4, 0xC2081B2000, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
close(0x4)		 = 0 0
unlink("/tmp/go-build775409149/command-line-arguments\0", 0xC2081B2000, 0x1000)		 = -1 Err#1
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
rmdir(0xC2081B4120, 0xC2081B2000, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
unlink("/tmp/go-build775409149/command-line-arguments.a\0", 0xC2081B2000, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
getdirentries64(0x3, 0xC208187000, 0x1000)		 = 0 0
close(0x3)		 = 0 0
unlink("/tmp/go-build775409149\0", 0xC208187000, 0x1000)		 = -1 Err#1
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
rmdir(0xC208129B40, 0xC208187000, 0x1000)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = 0 0
select(0x0, 0x0, 0x0, 0x0, 0xB0080DE0)		 = -1 Err#4

